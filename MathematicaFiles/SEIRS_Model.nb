(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    935394,      21291]
NotebookOptionsPosition[    912605,      20600]
NotebookOutlinePosition[    913132,      20620]
CellTagsIndexPosition[    913089,      20617]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Supplement B: SEIRS model with Alternative Matching Alleles Model"
}], "Title",
 CellChangeTimes->{{3.690806751166273*^9, 3.690806803941292*^9}, {
  3.691873141971615*^9, 3.6918731661759987`*^9}}],

Cell[TextData[StyleBox["Joint coevolutionary-epidemiological models dampen \
Red Queen cycles and alter conditions for epidemics, Ailene MacPherson and \
Sarah P. Otto, Theoretical Population Biology.",
 FontSlant->"Italic",
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.69161364352862*^9, 3.691613670270812*^9}, {
  3.691858008367022*^9, 3.6918580700985527`*^9}, {3.6918733227289534`*^9, 
  3.6918733236690073`*^9}, {3.694792787487527*^9, 3.694792830952013*^9}, {
  3.6954840261249394`*^9, 3.6954840263209505`*^9}, {3.6961733196205273`*^9, 
  3.69617332403878*^9}, {3.713612409566559*^9, 3.713612415366489*^9}}],

Cell[CellGroupData[{

Cell["Alternative to Matching Alleles Model", "Section",
 CellChangeTimes->{{3.6918733717587576`*^9, 3.69187337809212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input"],

Cell["\<\
Here we derive a model similar to the classic single locus matching alleles \
model except where after infection pathogens must progress from a juvenile to \
mature state before the host becomes infectious. Using equilibrium stability \
analysis we show that including pathogen maturation can produce limit cycles \
in allele frequencies.\
\>", "Text",
 CellChangeTimes->{{3.6918733821523523`*^9, 3.6918734840651813`*^9}, {
   3.691873517389087*^9, 3.69187360904733*^9}, {3.691873837406391*^9, 
   3.691873842144662*^9}, 3.6958224283818703`*^9}],

Cell[CellGroupData[{

Cell["The Differential Equations", "Subsection",
 CellChangeTimes->{{3.691873646570476*^9, 3.6918736545509324`*^9}}],

Cell[CellGroupData[{

Cell["The Host Equation", "Subsubsection",
 CellChangeTimes->{{3.7106852524260473`*^9, 3.710685254945896*^9}}],

Cell["\<\
Let \[Rho][i,t] be the probability that a host of type i is infected in the \
small unit of time from t to t+\[CapitalDelta]t\
\>", "Text",
 CellChangeTimes->{{3.6918737635061646`*^9, 3.691873790238693*^9}, 
   3.695822433509164*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"\[CapitalDelta]t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"i", ",", "1"}], "]"}], 
       RowBox[{"pM", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"i", ",", "2"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pM", "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6784547886395884`*^9, 3.6784548604656963`*^9}, {
  3.6784549772863784`*^9, 3.67845498570586*^9}, {3.678455491092307*^9, 
  3.6784554944659133`*^9}, {3.6905573781551394`*^9, 3.6905573804832726`*^9}, {
  3.6918738450188265`*^9, 3.6918738454928536`*^9}, {3.6918739639606295`*^9, 
  3.6918739651937003`*^9}}],

Cell["\<\
Here \[Beta][i,j] is the probability that a host of type i is infected by a \
pathogen of type j and where pM[t] is the frequency of mature type 1 \
pathogens.  
The resulting fitness of type i host is:\
\>", "Text",
 CellChangeTimes->{{3.691873868648178*^9, 3.6918739422183857`*^9}, 
   3.6958224370293655`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"WH", "[", 
   RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"\[Xi]H", " ", 
    RowBox[{"\[Rho]", "[", 
     RowBox[{"i", ",", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6784548787377415`*^9, 3.6784549295046453`*^9}, {
  3.69187395540814*^9, 3.6918739602704186`*^9}}],

Cell["\<\
Here \[Xi]H is the fitness cost of infection.  The frequency of type 1 hosts \
(pH) at time t+\[CapitalDelta]t is therefore given by:\
\>", "Text",
 CellChangeTimes->{{3.691873973005147*^9, 3.691874023832054*^9}, 
   3.695822440677574*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pH", "[", 
   RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], 
     RowBox[{"WH", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], 
      RowBox[{"WH", "[", 
       RowBox[{"1", ",", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
      RowBox[{"WH", "[", 
       RowBox[{"2", ",", "t"}], "]"}]}]}]], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.678454995992448*^9, 3.6784550577999835`*^9}, {
  3.6918740439522047`*^9, 3.6918740527957106`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
       RowBox[{"pM", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
      RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
     RowBox[{"pM", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
    RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
     RowBox[{"\[Beta]", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "+", 
    RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
     RowBox[{"pH", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "+", 
       RowBox[{
        RowBox[{"pM", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "-", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"1", ",", "2"}], "]"}], "-", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"2", ",", "1"}], "]"}], "+", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.6784550537597523`*^9, 3.6784550591500607`*^9}, 
   3.678455093860046*^9, 3.6784555042927322`*^9, 3.6844171581460996`*^9, 
   3.6845172226519675`*^9, 3.685818235057436*^9, 3.6872612308500032`*^9, 
   3.687278773004179*^9, {3.689351124201229*^9, 3.6893511451385508`*^9}, 
   3.6894716515655737`*^9, 3.690557427368954*^9, {3.691874054846828*^9, 
   3.691874060627159*^9}, 3.6920294454113874`*^9, 3.6927237422751074`*^9, 
   3.6927262493665047`*^9, 3.692877610669196*^9, 3.692908773196375*^9, 
   3.692968027165843*^9, 3.692971693338691*^9, 3.692971729492759*^9}]
}, Closed]],

Cell["Using the definition of a derivative ", "Text",
 CellChangeTimes->{{3.6918740711907625`*^9, 3.691874076105044*^9}, {
  3.6958224439327602`*^9, 3.6958224466049128`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "-", 
      RowBox[{"pH", "[", "t", "]"}]}], "\[CapitalDelta]t"], ",", 
    RowBox[{"\[CapitalDelta]t", "\[Rule]", "0"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.678455070048684*^9, 3.6784551252948437`*^9}, {
  3.678455230675871*^9, 3.678455260063552*^9}}],

Cell[BoxData[
 RowBox[{"\[Xi]H", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
  RowBox[{"pH", "[", "t", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Beta]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "-", 
    RowBox[{"\[Beta]", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "+", 
    RowBox[{
     RowBox[{"pM", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "+", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6784550726968355`*^9, 3.6784551258718767`*^9}, {
   3.6784552372652483`*^9, 3.678455261225619*^9}, 3.678455506524536*^9, 
   3.6844171584737*^9, 3.684517222981986*^9, 3.6858182353850365`*^9, 
   3.687261233271142*^9, 3.6872787733641996`*^9, {3.689351124260165*^9, 
   3.6893511452413282`*^9}, 3.689471651625946*^9, 3.6905574318982134`*^9, 
   3.6918740967492247`*^9, 3.6920294455673876`*^9, 3.692723742424116*^9, 
   3.692726249514513*^9, 3.692877611019197*^9, 3.692908773346383*^9, 
   3.6929680274622436`*^9, 3.6929716934977007`*^9, 3.6929717297387733`*^9}]
}, Closed]],

Cell[TextData[{
 "Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"pH", "[", "t", "]"}]}], "=", 
    RowBox[{"f1", "[", "t", "]"}]}], TraditionalForm]]],
 " and rewriting the above expression"
}], "Text",
 CellChangeTimes->{{3.6918741389806404`*^9, 3.6918741915976496`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "\[Xi]H"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"pH", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], ")"}], 
      RowBox[{"pM", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pM", "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.691874159654823*^9, 3.6918741643280897`*^9}, {
  3.69187419614891*^9, 3.691874217913155*^9}, {3.691874248144884*^9, 
  3.691874291879386*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["The Immature Pathogen Equation", "Subsubsection",
 CellChangeTimes->{{3.6918743074872785`*^9, 3.6918743166057997`*^9}, {
  3.6918743537419243`*^9, 3.6918743551080017`*^9}}],

Cell["\<\
The probability that a mature pathogen of type i infects a host is given by:\
\>", "Text",
 CellChangeTimes->{{3.6918743235251956`*^9, 3.691874368631776*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Eta]", "[", 
    RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"\[CapitalDelta]t", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "i"}], "]"}], 
       RowBox[{"pH", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "i"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pH", "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6784547886395884`*^9, 3.6784548604656963`*^9}, {
   3.6784549772863784`*^9, 3.67845498570586*^9}, {3.6784554401308517`*^9, 
   3.6784554866288977`*^9}, 3.678455912467797*^9, {3.6918744126872954`*^9, 
   3.6918744131633224`*^9}}],

Cell["\<\
If infection increases a pathogens fitness by a benefit \[Xi]P then pathogen \
fitness is given by the following.\
\>", "Text",
 CellChangeTimes->{{3.691874378746354*^9, 3.6918744059409094`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"WP", "[", 
   RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{"\[Xi]P", " ", 
    RowBox[{"\[Eta]", "[", 
     RowBox[{"i", ",", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6784556839253583`*^9, 3.6784557242998714`*^9}, {
  3.678455879265329*^9, 3.678455879520344*^9}, {3.6918744290202293`*^9, 
  3.691874432502429*^9}, {3.693948822291576*^9, 3.693948823171626*^9}}],

Cell["\<\
The frequency of type 1 immature pathogens after infection (selection) is \
given by:\
\>", "Text",
 CellChangeTimes->{{3.691874440306875*^9, 3.6918745541423864`*^9}, {
  3.691875357294324*^9, 3.6918753866430025`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pP", "[", 
   RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "\[Gamma]"}], ")"}]}], "+", 
   RowBox[{"\[Gamma]", 
    FractionBox[
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], 
      RowBox[{"WP", "[", 
       RowBox[{"1", ",", "t"}], "]"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"pM", "[", "t", "]"}], 
       RowBox[{"WP", "[", 
        RowBox[{"1", ",", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pM", "[", "t", "]"}]}], ")"}], 
       RowBox[{"WP", "[", 
        RowBox[{"2", ",", "t"}], "]"}]}]}]]}]}]}]], "Input",
 CellChangeTimes->{{3.6905578144790955`*^9, 3.6905578445718164`*^9}, {
  3.690557878296746*^9, 3.6905579061953416`*^9}, {3.690557987855012*^9, 
  3.690557993023308*^9}, {3.69056082154167*^9, 3.6905608288444824`*^9}, {
  3.691875296487846*^9, 3.691875301824151*^9}, {3.691875391411275*^9, 
  3.6918754156666627`*^9}, {3.6939490294104223`*^9, 3.6939490481884966`*^9}, {
  3.6939493052552*^9, 3.6939493088854074`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "\[Gamma]"}], ")"}], " ", 
   RowBox[{"pP", "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Gamma]", " ", 
     RowBox[{"pM", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"\[CapitalDelta]t", " ", "\[Xi]P", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"pH", "[", "t", "]"}], " ", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], 
   "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[CapitalDelta]t", " ", "\[Xi]P", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"pH", "[", "t", "]"}], " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pM", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[CapitalDelta]t", " ", "\[Xi]P", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"pH", "[", "t", "]"}], " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.693949309558446*^9, 3.694624961948316*^9}]
}, Closed]],

Cell[TextData[StyleBox["Assuming that mature pathogens are quickly replaced \
by immature pathogens pP[t]\[TildeTilde]pM[t].  Using the definition of the \
derivative",
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.691875432147605*^9, 3.6918755411578403`*^9}, {
  3.691875614599041*^9, 3.6918756315520105`*^9}, {3.691875665320942*^9, 
  3.691875679952779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"pP", "[", 
        RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Gamma]"}], ")"}], 
        RowBox[{"pP", "[", "t", "]"}]}], "-", 
       RowBox[{"\[Gamma]", " ", 
        RowBox[{"pM", "[", "t", "]"}]}]}], "\[CapitalDelta]t"], ",", 
     RowBox[{"\[CapitalDelta]t", "\[Rule]", "0"}]}], "]"}], ",", "\[Mu]", ",",
    "Simplify"}], "]"}]], "Input",
 CellChangeTimes->{{3.693948836796406*^9, 3.69394883775146*^9}, {
  3.693949079766303*^9, 3.693949100647497*^9}, {3.693949282559902*^9, 
  3.6939492895633025`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Gamma]"}], " ", "\[Xi]P", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"pM", "[", "t", "]"}]}], ")"}], " ", 
  RowBox[{"pM", "[", "t", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Beta]", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "-", 
    RowBox[{"\[Beta]", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "+", 
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "+", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6939488407646327`*^9, 3.6939490571980124`*^9, 3.693949105034748*^9, {
   3.6939492953666344`*^9, 3.6939493199300394`*^9}, 3.694624964031435*^9}]
}, Closed]],

Cell[TextData[{
 "Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f2", "[", "t", "]"}], "\[TildeTilde]", 
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"pP", "[", "t", "]"}]}]}], TraditionalForm]]],
 " and rewriting the above expression we have the approximate expression for \
the change in the frequency of immature pathogens."
}], "Text",
 CellChangeTimes->{{3.691875693217538*^9, 3.6918757415593023`*^9}, {
  3.6918758199557867`*^9, 3.6918758492344613`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", "t_", "]"}], ":=", 
   RowBox[{"\[Gamma]", " ", "\[Xi]P", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pM", "[", "t", "]"}]}], ")"}], " ", 
    RowBox[{"pM", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"pH", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "1"}], "]"}], "-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6918757428873787`*^9, 3.6918758097412024`*^9}, 
   3.6927265919460993`*^9, {3.694624988539837*^9, 3.6946249903299394`*^9}}],

Cell["\<\
In addition to changes due to fitness the pathogens mutate type at rate \
\[Mu], the net effect of the frequency of type 1 pathogens is given by  \
\[Mu](1-pP[t])-\[Mu] pP[t]=(1-2pP[t])\[Mu]\
\>", "Text",
 CellChangeTimes->{{3.692726365964174*^9, 3.692726434580098*^9}, {
  3.692726474684392*^9, 3.6927265834046106`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Gamma]", " ", "\[Xi]P", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pM", "[", "t", "]"}]}], ")"}], " ", 
    RowBox[{"pM", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"pH", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "1"}], "]"}], "-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", 
       RowBox[{"pP", "[", "t", "]"}]}]}], ")"}], "\[Mu]"}]}]}]], "Input",
 CellChangeTimes->{{3.6918757428873787`*^9, 3.6918758097412024`*^9}, 
   3.6927264438656297`*^9, 3.6927265567400856`*^9, 3.6946251278038025`*^9}],

Cell["\<\
If pP[t] and pM[t] are not linked closely enough f2[t] may be positive \
(negative) when pP[t]=1 (pP[t]=0) causing the allele frequency to exceed the \
biological range of an allele frequency.\
\>", "Text",
 CellChangeTimes->{{3.6918758919359035`*^9, 3.691875991785615*^9}, 
   3.6958224490610533`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["The Mature Pathogen Equation", "Subsubsection",
 CellChangeTimes->{{3.691875854609769*^9, 3.691875862190202*^9}}],

Cell["\<\
Each generation suppose a fraction \[Gamma] of the mature pathogen population \
is removed and replace with individuals from the immature pathogen class.  \
The above assumption that pP[t]\[TildeTilde]pM[t] implies that \[Gamma] is \
large.  In addition suppose mature pathogens mutate at a rate \[Mu]. The \
resulting frequency of mature pathogens at time t+\[CapitalDelta]t is given \
by the following.\
\>", "Text",
 CellChangeTimes->{{3.691876010003657*^9, 3.691876101959916*^9}, {
   3.6918761496846457`*^9, 3.691876149918659*^9}, {3.6918762652642565`*^9, 
   3.691876308962756*^9}, 3.6958224516542015`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pM", "[", 
    RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Gamma]", " ", "\[CapitalDelta]t"}]}], ")"}], 
      RowBox[{"pM", "[", "t", "]"}]}], "+", 
     RowBox[{"\[Gamma]", " ", "\[CapitalDelta]t", " ", 
      RowBox[{"pP", "[", "t", "]"}]}]}], "//", "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6905586409353476`*^9, 3.6905587074206686`*^9}, {
  3.6905608396241016`*^9, 3.6905608617605405`*^9}, {3.6918761554399753`*^9, 
  3.691876158427146*^9}, {3.692726630305293*^9, 3.692726636111625*^9}}],

Cell["Using the definition of the derivative", "Text",
 CellChangeTimes->{{3.690558673399005*^9, 3.6905586824026213`*^9}, 
   3.6958224541733456`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"pM", "[", 
      RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "-", 
     RowBox[{"pM", "[", "t", "]"}]}], "\[CapitalDelta]t"], ",", 
   RowBox[{"\[CapitalDelta]t", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690558685023426*^9, 3.690558736032119*^9}}],

Cell[BoxData[
 RowBox[{"\[Gamma]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"pM", "[", "t", "]"}]}], "+", 
    RowBox[{"pP", "[", "t", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.69055873678092*^9, 3.6905587478569393`*^9}, 
   3.6905608645851455`*^9, 3.69187616130031*^9, 3.6920294457857885`*^9, 
   3.6927237426981316`*^9, 3.6927262497795286`*^9, 3.6927266387517767`*^9, 
   3.692877611279197*^9, 3.6929087736404*^9, 3.692968027711844*^9, 
   3.692971693809718*^9, 3.692971730155797*^9}]
}, Closed]],

Cell[TextData[{
 "Letting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f3", "[", "t", "]"}], "=", 
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"pM", "[", "t", "]"}]}]}], TraditionalForm]]],
 " "
}], "Text",
 CellChangeTimes->{{3.6918761182268467`*^9, 3.6918761381869884`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"\[Gamma]", " ", 
    RowBox[{"pP", "[", "t", "]"}]}], "-", 
   RowBox[{"\[Gamma]", " ", 
    RowBox[{"pM", "[", "t", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6905587508053446`*^9, 3.690558771008402*^9}, {
   3.690560898407005*^9, 3.6905609261448536`*^9}, {3.690561671187929*^9, 
   3.6905616759147377`*^9}, {3.691876165057525*^9, 3.6918761672626514`*^9}, 
   3.6927266520075345`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[" The system of Equations", "Subsubsection",
 CellChangeTimes->{{3.6918761902349653`*^9, 3.691876193933177*^9}}],

Cell["\<\
To simplify the analysis of this system we assume that the infection matrix \
\[Beta] is symmetric such that infection of like types (unlike types) occur \
at the same rates, this implies that \[Beta][1,1]=\[Beta][2,2]=X, and \
\[Beta][1,2]=\[Beta][2,1]=Y. We assume that X>Y.\
\>", "Text",
 CellChangeTimes->{{3.691876354086337*^9, 3.6918764357230062`*^9}, {
  3.692030201838526*^9, 3.6920302094055386`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "X"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "X"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.691876438699177*^9, 3.6918764744342203`*^9}}],

Cell["\<\
The resulting system of ordinary differential equations describing the change \
in allele frequency is\
\>", "Text",
 CellChangeTimes->{{3.691876201048584*^9, 3.6918762273150864`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ODE", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
       RowBox[{"f1", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
       RowBox[{"f2", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pM", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
       RowBox[{"f3", "[", "t", "]"}]}]}], "}"}], "/.", "\[Beta]sub"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.691876229745225*^9, 3.6918762506934233`*^9}, {
  3.6918763267157717`*^9, 3.6918763412756042`*^9}, {3.6918764777964125`*^9, 
  3.6918764800735435`*^9}}],

Cell["The list of variables is given by", "Text",
 CellChangeTimes->{{3.691876502439822*^9, 3.691876508199152*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Vars", "[", "t_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], ",", 
     RowBox[{"pP", "[", "t", "]"}], ",", 
     RowBox[{"pM", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6918765099992547`*^9, 3.691876527911279*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ODE", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.6927237453342824`*^9, 3.692723751678645*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["pH", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "\[Xi]H"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
     RowBox[{"pH", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"pM", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", 
        RowBox[{"pM", "[", "t", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["pP", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"\[Xi]P", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pH", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", 
         RowBox[{"pH", "[", "t", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pM", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"pM", "[", "t", "]"}]}], "+", 
     RowBox[{"\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"pP", "[", "t", "]"}]}]}], ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["pM", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", 
      RowBox[{"pM", "[", "t", "]"}]}], "+", 
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"pP", "[", "t", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.692723748689474*^9, 3.6927237521226707`*^9}, 
   3.6927262498525324`*^9, 3.6927265991005087`*^9, {3.6927266451591425`*^9, 
   3.6927266554197297`*^9}, 3.692726996237223*^9, 3.6928776114101973`*^9, 
   3.6929087737384057`*^9, 3.6929680277898445`*^9, 3.6929717302698035`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Equilibria", "Subsection",
 CellChangeTimes->{{3.6920293421000056`*^9, 3.69202934456481*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiEqus", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"f1", "[", "t", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"f2", "[", "t", "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"f3", "[", "t", "]"}], "\[Equal]", "0"}]}], "}"}], "/.", 
   "\[Beta]sub"}]}]], "Input",
 CellChangeTimes->{{3.692029455701207*^9, 3.692029490381068*^9}, {
  3.692727830035914*^9, 3.6927278327040663`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[Xi]H"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
     RowBox[{"pH", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"pM", "[", "t", "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", 
        RowBox[{"pM", "[", "t", "]"}]}]}], ")"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Xi]P", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pH", "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", 
         RowBox[{"pH", "[", "t", "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pM", "[", "t", "]"}]}], ")"}], " ", 
      RowBox[{"pM", "[", "t", "]"}]}], "+", 
     RowBox[{"\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", 
         RowBox[{"pP", "[", "t", "]"}]}]}], ")"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", 
      RowBox[{"pM", "[", "t", "]"}]}], "+", 
     RowBox[{"\[Gamma]", " ", 
      RowBox[{"pP", "[", "t", "]"}]}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.692727833150092*^9, 3.692877621707255*^9, 
  3.6929087737774076`*^9, 3.692968027836644*^9, 3.6929687865436535`*^9, 
  3.6929717303328075`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equilibria", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"EquiEqus", ",", 
     RowBox[{"Vars", "[", "t", "]"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6920294957172775`*^9, 3.692029522315324*^9}, {
   3.6927270063218*^9, 3.6927270070298405`*^9}, {3.692727740385786*^9, 
   3.6927277433589563`*^9}, 3.6927278356632357`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "\[Mu]"}], "-", 
         RowBox[{"X", " ", "\[Xi]P"}], "+", 
         RowBox[{"Y", " ", "\[Xi]P"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", "\[Mu]"}], "-", 
         RowBox[{"X", " ", "\[Xi]P"}], "+", 
         RowBox[{"Y", " ", "\[Xi]P"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
        RowBox[{"X", " ", "\[Xi]P"}], "-", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
        RowBox[{"X", " ", "\[Xi]P"}], "-", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "+", 
        RowBox[{"X", " ", "\[Xi]P"}], "-", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "+", 
        RowBox[{"X", " ", "\[Xi]P"}], "-", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Mu]"}], "-", 
         RowBox[{"X", " ", "\[Xi]P"}], "+", 
         RowBox[{"Y", " ", "\[Xi]P"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "\[Mu]"}], "-", 
         RowBox[{"X", " ", "\[Xi]P"}], "+", 
         RowBox[{"Y", " ", "\[Xi]P"}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
            SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.69272765863111*^9, 3.6927277438849864`*^9, 
  3.6927278361312623`*^9, 3.6928776272555723`*^9, 3.6929087777966375`*^9, 
  3.692968031783451*^9, 3.6929687894764585`*^9, 3.692971731169855*^9}]
}, Closed]],

Cell[TextData[{
 "The polymorphic equilibrium is given by",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}]}]],
  CellChangeTimes->{{3.692029502144489*^9, 3.692029522783325*^9}}],
 ".  The rest of the equilibria are points near fixation as can be seen by \
setting \[Mu]=0"
}], "Text",
 CellChangeTimes->{{3.6920295425183597`*^9, 3.69202955981879*^9}, {
   3.6927277081489425`*^9, 3.692727735100484*^9}, 3.6958224577035475`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"EquiEqus", "/.", "\[Beta]sub"}], "/.", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}], ",", 
   RowBox[{"Vars", "[", "t", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.692727747534195*^9, 3.6927278253426456`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", "1"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6927277856693764`*^9, 3.692727825749669*^9}, 
   3.6929087779676476`*^9, 3.6929680320954514`*^9, 3.692968794562067*^9, 
   3.69297173125786*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subsection",
 CellChangeTimes->{{3.692029716923873*^9, 3.692029718109475*^9}}],

Cell["We begin by constructing the Jacobian matrix.", "Text",
 CellChangeTimes->{{3.6920297323055*^9, 3.692029746735525*^9}, 
   3.695822460773723*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"JMtrx", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f1", "[", "t", "]"}], ",", 
          RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f1", "[", "t", "]"}], ",", 
          RowBox[{"pP", "[", "t", "]"}]}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f1", "[", "t", "]"}], ",", 
          RowBox[{"pM", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f2", "[", "t", "]"}], ",", 
          RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f2", "[", "t", "]"}], ",", 
          RowBox[{"pP", "[", "t", "]"}]}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f2", "[", "t", "]"}], ",", 
          RowBox[{"pM", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f3", "[", "t", "]"}], ",", 
          RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f3", "[", "t", "]"}], ",", 
          RowBox[{"pP", "[", "t", "]"}]}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f3", "[", "t", "]"}], ",", 
          RowBox[{"pM", "[", "t", "]"}]}], "]"}]}], "}"}]}], "}"}], "/.", 
    "\[Beta]sub"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6920297434127192`*^9, 3.692029853367713*^9}, {
  3.6920299060832057`*^9, 3.692029974616126*^9}, {3.6920301562854457`*^9, 
  3.6920301597954516`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Polymorphic equilibrium : ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{
     RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
     FractionBox["1", "2"]}]}], "}"}]],
  CellChangeTimes->{{3.692029502144489*^9, 3.692029522783325*^9}}]
}], "Subsubsection",
 CellChangeTimes->{{3.6920310297693825`*^9, 3.6920310455254107`*^9}, {
   3.6927278964317117`*^9, 3.692727898190812*^9}, {3.6928786248573675`*^9, 
   3.6928786316953773`*^9}, 3.6928788190796423`*^9}],

Cell["\<\
 To assess the stability of this equilibrium consider the characteristic \
polynomial generated from the Jacobian matrix evaluated at equilibrium.\
\>", "Text",
 CellChangeTimes->{{3.6920312515513725`*^9, 3.6920312865910344`*^9}, {
  3.6958224631408587`*^9, 3.6958224650929704`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"JMtrx", "[", "t", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6928779427663965`*^9, 3.692877944566399*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]H"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[Mu]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Gamma]", ",", 
     RowBox[{"-", "\[Gamma]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6920313075584717`*^9, 3.6927279003949385`*^9, 3.6928778692282887`*^9, 
   3.6928779452164*^9, 3.6929087780196505`*^9, 3.6929680321578517`*^9, 
   3.692968809167693*^9, {3.6929717018881803`*^9, 3.6929717313318644`*^9}}]
}, Closed]],

Cell["\<\
Evaluating the eigenvalues numerically for the particular parameter case \
given by Pars\
\>", "Text",
 CellChangeTimes->{{3.692879613181769*^9, 3.6928796407448072`*^9}, 
   3.695822482692977*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0.5"}], ",", 
     RowBox[{"Y", "\[Rule]", "0.4"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"1", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "6"}]]}]}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", "0.9"}], ",", 
     RowBox[{"\[Xi]H", "\[Rule]", " ", "0.3"}], ",", 
     RowBox[{"\[Xi]P", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"tmax", "\[Rule]", "10000"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6928796420448093`*^9, 3.692879662641839*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"JMtrx", "[", "t", "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], ",", 
      RowBox[{
       RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], ",", 
      RowBox[{
       RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}]}], "}"}]}], "/.", "Pars"}], "]"}]], "Input",
 CellChangeTimes->{{3.6928795321026535`*^9, 3.6928795528956833`*^9}, {
  3.6928796758028574`*^9, 3.692879676912859*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.900831796948168`"}], ",", 
   RowBox[{"0.0004148984740840248`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.027370336774992843`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.0004148984740840248`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.027370336774992843`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.692879545233672*^9, 3.692879556895689*^9}, 
   3.6928796774328594`*^9, 3.692908778070654*^9, 3.692968032251452*^9, 
   3.6929688137541013`*^9, {3.6929717020691905`*^9, 3.6929717314598713`*^9}}]
}, Closed]],

Cell["\<\
Under these conditions the leading eigenvalue is positive and complex, hence \
the possibility of limit cycles exists.  To show when limit cycles may occur \
more generally we solve for the conditions under which this equilibrium is \
unstable.\
\>", "Text",
 CellChangeTimes->{{3.6928796821938667`*^9, 3.69287976878699*^9}, 
   3.6958224856211443`*^9, {3.695822730700162*^9, 3.695822750555298*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{"CharacteristicPolynomial", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"JMtrx", "[", "t", "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{
          RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
          FractionBox["1", "2"]}], ",", 
         RowBox[{
          RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
          FractionBox["1", "2"]}]}], "}"}]}], "//", "Simplify"}], ",", 
     "\[Lambda]"}], "]"}], ",", "\[Lambda]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.6920304588911777`*^9, {3.692031293471647*^9, 3.6920313270751057`*^9}, {
   3.692031558574913*^9, 3.692031563707322*^9}, 3.6928779559884152`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[Lambda]", "3"]}], "+", 
  RowBox[{
   SuperscriptBox["\[Lambda]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "-", 
     RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], "-", 
  RowBox[{"2", " ", "\[Gamma]", " ", "\[Lambda]", " ", "\[Mu]"}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["X", "2"], " ", "\[Gamma]", " ", "\[Xi]H", " ", "\[Xi]P"}], 
  "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "X", " ", "Y", " ", "\[Gamma]", " ", "\[Xi]H", 
   " ", "\[Xi]P"}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["Y", "2"], " ", "\[Gamma]", " ", "\[Xi]H", " ", 
   "\[Xi]P"}]}]], "Output",
 CellChangeTimes->{
  3.692030459546379*^9, {3.69203130106886*^9, 3.692031321052495*^9}, 
   3.6920315640973225`*^9, 3.6927279039681425`*^9, 3.692877957278417*^9, 
   3.6929087781096554`*^9, 3.692968032298252*^9, 3.692968826218523*^9, {
   3.6929717021301937`*^9, 3.692971731515875*^9}}]
}, Closed]],

Cell[TextData[{
 "According to the Routh-Hurwitz conditions, stability for a 3 dimensional \
system with characteristic polynomial ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Lambda]", "3"], "+", 
     RowBox[{"a1", " ", 
      SuperscriptBox["\[Lambda]", "2"]}], "+", 
     RowBox[{"a2", " ", "\[Lambda]"}], "+", "a3"}], "=", "0"}], 
   TraditionalForm]]],
 ".  stability requires a1>0, a3>0 and a1a2>a3."
}], "Text",
 CellChangeTimes->{{3.692031572258137*^9, 3.6920317008073635`*^9}, {
   3.692031784451111*^9, 3.692031826634585*^9}, 3.695822492213522*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a1", "=", 
   RowBox[{"(", 
    RowBox[{"\[Gamma]", "+", 
     RowBox[{"2", " ", "\[Mu]"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a2", "=", 
   RowBox[{"2", " ", "\[Gamma]", " ", "\[Mu]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a3", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", "\[Gamma]", " ", "\[Xi]H", 
    " ", "\[Xi]P"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.6920316126340084`*^9, {3.6920318327653956`*^9, 3.6920318475562215`*^9}, {
   3.6920318860902896`*^9, 3.6920319424863887`*^9}, {3.6920319802248554`*^9, 
   3.692031997369285*^9}, {3.692727929225587*^9, 3.692727974945202*^9}, 
   3.692878198444762*^9, {3.692968839654147*^9, 3.6929688696061993`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a1", " ", "a2"}], "-", "a3"}], "\[Equal]", "0"}], ",", 
    "\[Mu]"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6946262848129797`*^9, 3.6946263273344116`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", "\[Xi]H", " ", 
           "\[Xi]P"}]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Gamma]"}], "+", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Gamma]", "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", "\[Xi]H", " ", 
           "\[Xi]P"}]}]]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.694626298056737*^9, 3.6946263282004614`*^9}}]
}, Closed]],

Cell["\<\
As X>Y both a1 and a3 are greater than 0.  For the equilibrium to be \
unstable, and hence possible exhibit limit cycles we must have a1a2-a3<0\
\>", "Text",
 CellChangeTimes->{{3.6920320058899*^9, 3.6920320563367896`*^9}, {
  3.692878106490631*^9, 3.6928781797917356`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLinearPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"a1", " ", "a2"}], "-", "a3"}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Gamma]", "\[Rule]", "0.9"}], ",", 
        RowBox[{"X", "\[Rule]", "0.5"}], ",", 
        RowBox[{"Y", "\[Rule]", "0.4"}], ",", 
        RowBox[{"\[Xi]H", "\[Rule]", " ", "0.1"}], ",", 
        RowBox[{"\[Xi]P", "\[Rule]", " ", "1"}]}], "}"}]}], ",", "0"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "8"}]], ",", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Dashed"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6928782126457825`*^9, 3.6928784465241137`*^9}, {
  3.6928785069722004`*^9, 3.692878516654214*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 0, 1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxNyXlMEnAcBXCkqDXLoYmYGooXIp5YlkmHzQ61DJ2aOLBNbV4szcyVS/Gi
gFH6h0dlk0yxRDBlXmx5s2VWutBlM0XU1LTENrV5rmNrv29ve3v77JFjUkKv
YjEYzMU//bvxdHVrYzK9C/MvtvwXl/qTwGMj4rmpRDAzK5xomgA+1jebkREH
Nore4+3LAbcIg5vUwWDc5KeGEU9wjajmu/WyJ7Jcnu1Q1AauTCtPc+SBH3ld
x06cAv/khhR27gJHVC5E97z2QJbe7jv9TQhm9TfYMZhgvFnouZfG//1Nm4PF
9e7IqQVjPkQGWBzoTtV2uiHfMCgzWQ0CX6lPzWUOuCJTq4bM10LBHYIg2dKE
C3Jk3OFuWiy43eOQplVPQ6YsVycIUsEp2xUU6Yozct6aQmecC34872bduwOc
9VZ9Wf2AinxidbrN2Aq8k3BTUiVxQi5xsMzh08DOLl6zdQoKckXmcDqJDh5X
ibZ1HY7INktKw69+YDfCj/0n3zsgW+a3+E9FgffO6TfeaO2R+3wZdQbJYOHd
TV3Woh0yoWcQH3gLzDvjmhiDA+s7ts52CmyRnaiTJK4pOF545A6nlIxc4EnE
lluAuf2GeU7PbZBZrLR7G1QwWfl5n0+SNfIFvxkOgU9Czn2lacsUH4T/wMLu
nGorZHxvCj39KXiYu8pOeALmdGGUzGLwtXgim1wALmr2b+iJBQ+FSCJxduCH
m/b56yQwWypTLFqAv6w1Yz+agFck7+Q1WLCZfh1zfsoSebSMR2NowRV+uAiP
UTClBF9nrgEfZVDC57vBWzNy3ng7uKuQLvugAgdMH/+lagQb3e+l1ivAGu+A
sGe14FLdQHapFBwlCqsVVYJ/A+D1LiM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->
   NCache[{-Log[
      100000000], -0.0002249837999958336}, {-18.420680743952367`, \
-0.0002249837999958336}],
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Part[#, 2]}& )},
  FrameTicks->{{Automatic, Automatic}, {{{-18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-16.11809565095832, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm]}, {-6.907755278982137, 
       FormBox["0.001`", TraditionalForm]}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.618285980628055`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.903487552536127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.721165995742174, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {-16.11809565095832, 
       FormBox["\"\"", TraditionalForm]}, {-13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {-11.512925464970229`, 
       FormBox["\"\"", TraditionalForm]}, {-9.210340371976182, 
       FormBox["\"\"", TraditionalForm]}, {-6.907755278982137, 
       FormBox["\"\"", TraditionalForm]}, {-17.72753356339242, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.322068455284256`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-17.034386382832476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.811242831518264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.62892127472431, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.474770594897052`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.34123920227253, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-16.223456166616145`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.424948470398375`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-15.01948336229021, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.73180128983843, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.508657738524219`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.326336181730264`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.172185501903007`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-14.038654109278484`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.9208710736221, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-13.122363377404328`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.716898269296165`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.429216196844383`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.206072645530174`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-12.02375108873622, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.86960040890896, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.736069016284437`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-11.618285980628055`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.819778284410283`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.414313176302118`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-10.126631103850338`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.903487552536127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.721165995742174, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.567015315914915, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.433483923290392, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-9.315700887634009, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.517193191416238, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-8.111728083308073, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.824046010856292, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.600902459542082, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.418580902748127, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.264430222920869, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.1308988302963465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-7.013115794639964, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}},
  GridLines->{None, None},
  Method->{},
  PlotRange->
   NCache[{{-Log[100000000], -Log[1000]}, {-0.0002249837999958336, 
     0.00033611375124226574`}}, {{-18.420680743952367`, -6.907755278982137}, \
{-0.0002249837999958336, 0.00033611375124226574`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{{{-18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-16.11809565095832, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "7"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-11.512925464970229`, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-9.210340371976182, 
      FormBox[
       TemplateBox[{"10", 
         RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {-6.907755278982137, 
      FormBox["0.001`", TraditionalForm]}, {-17.72753356339242, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.322068455284256`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-17.034386382832476`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.811242831518264`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.62892127472431, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.474770594897052`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.34123920227253, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-16.223456166616145`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.424948470398375`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-15.01948336229021, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.73180128983843, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.508657738524219`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.326336181730264`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.172185501903007`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-14.038654109278484`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.9208710736221, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-13.122363377404328`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.716898269296165`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.429216196844383`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.206072645530174`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-12.02375108873622, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.86960040890896, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.736069016284437`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-11.618285980628055`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.819778284410283`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.414313176302118`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-10.126631103850338`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.903487552536127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.721165995742174, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.567015315914915, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.433483923290392, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-9.315700887634009, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.517193191416238, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-8.111728083308073, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.824046010856292, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.600902459542082, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.418580902748127, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.264430222920869, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.1308988302963465`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-7.013115794639964, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}, Automatic}]], "Output",
 CellChangeTimes->{{3.6928782972479024`*^9, 3.6928783827210236`*^9}, {
   3.692878412968066*^9, 3.692878447174115*^9}, {3.692878507712201*^9, 
   3.6928785174642153`*^9}, 3.6929087783596697`*^9, 3.6929680328286533`*^9, 
   3.6929688837970343`*^9, {3.6929717023502064`*^9, 3.692971731689885*^9}}]
}, Closed]],

Cell["\<\
As long as the mutation rate is low there exists the potential for limit \
cycles. Below we use numerical integration to confirm that this unstable \
polymorphic equilibrium does indeed approach a limit cycles.\
\>", "Text",
 CellChangeTimes->{{3.692878466476142*^9, 3.6928785860303125`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Host fixation equilibrium #1: ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "-", 
        RowBox[{"X", " ", "\[Xi]P"}], "+", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], ",", 
    RowBox[{
     RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "\[Mu]"}], "-", 
        RowBox[{"X", " ", "\[Xi]P"}], "+", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}]}], "}"}]],
  CellChangeTimes->{3.69272765863111*^9, 3.6927277438849864`*^9, 
   3.6927278361312623`*^9, 3.6928776272555723`*^9, 3.6929087777966375`*^9, 
   3.692968031783451*^9, 3.6929687894764585`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.6928787949866085`*^9, 3.692878831960661*^9}, 
   3.692968941899537*^9}],

Cell["\<\
Finding the eigenvalues numerically under the same conditions that led to the \
potential for limit cycles above.\
\>", "Text",
 CellChangeTimes->{{3.6928794898365936`*^9, 3.6928795186316347`*^9}, {
  3.692879805787042*^9, 3.69287981827206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", "t", "]"}], "/.", 
     RowBox[{"equilibria", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", "Pars"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6928775903181677`*^9, 3.6928775956181755`*^9}, {
  3.69287885302369*^9, 3.6928788748347216`*^9}, {3.692878949736828*^9, 
  3.692878964823849*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9908345233868181`"}], ",", "0.09083252338681816`", ",", 
   RowBox[{"-", "0.030000600005999994`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6928794593105507`*^9, 3.692908778393672*^9, 3.6929680329066534`*^9, 
   3.6929689450039425`*^9, {3.6929717024972153`*^9, 3.6929717317458878`*^9}}]
}, Closed]],

Cell["Under this parameter condition this equilibrium is unstable.", "Text",
 CellChangeTimes->{{3.6928799401422334`*^9, 3.692879956620257*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Host fixation equilibrium #2: ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
       RowBox[{"X", " ", "\[Xi]P"}], "-", 
       RowBox[{"Y", " ", "\[Xi]P"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
          SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}], ",", 
    RowBox[{
     RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[Mu]"}], "+", 
       RowBox[{"X", " ", "\[Xi]P"}], "-", 
       RowBox[{"Y", " ", "\[Xi]P"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
          SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], "}"}]],
  CellChangeTimes->{3.69272765863111*^9, 3.6927277438849864`*^9, 
   3.6927278361312623`*^9, 3.6928776272555723`*^9, 3.6929087777966375`*^9, 
   3.692968031783451*^9, 3.6929687894764585`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.6928787949866085`*^9, 3.692878831960661*^9}, {
   3.6928798244220686`*^9, 3.692879847098101*^9}, 3.692968954427359*^9}],

Cell["\<\
Finding the eigenvalues numerically under the same conditions that led to the \
potential for limit cycles above.\
\>", "Text",
 CellChangeTimes->{{3.6928794898365936`*^9, 3.6928795186316347`*^9}, {
  3.692879805787042*^9, 3.69287981827206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", "t", "]"}], "/.", 
     RowBox[{"equilibria", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "/.", "Pars"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6928775903181677`*^9, 3.6928775956181755`*^9}, {
  3.69287885302369*^9, 3.6928788748347216`*^9}, {3.692878949736828*^9, 
  3.692878964823849*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9908345233868181`"}], ",", "0.09083252338681816`", ",", 
   RowBox[{"-", "0.030000600005999994`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6928794593105507`*^9, 3.692879852718109*^9, 3.692908778430674*^9, 
   3.692968032937853*^9, 3.692968956673763*^9, {3.692971702603221*^9, 
   3.692971731800891*^9}}]
}, Closed]],

Cell["This equilibrium is unstable.", "Text",
 CellChangeTimes->{{3.692879930143219*^9, 3.692879936092228*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Host fixation equilibrium #3:",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "\[Mu]"}], "+", 
       RowBox[{"X", " ", "\[Xi]P"}], "-", 
       RowBox[{"Y", " ", "\[Xi]P"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
          SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}], ",", 
    RowBox[{
     RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "\[Mu]"}], "+", 
       RowBox[{"X", " ", "\[Xi]P"}], "-", 
       RowBox[{"Y", " ", "\[Xi]P"}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox["\[Mu]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
          SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], "}"}]],
  CellChangeTimes->{3.69272765863111*^9, 3.6927277438849864`*^9, 
   3.6927278361312623`*^9, 3.6928776272555723`*^9, 3.6929087777966375`*^9, 
   3.692968031783451*^9, 3.6929687894764585`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.6928787949866085`*^9, 3.692878831960661*^9}, {
   3.6928798244220686`*^9, 3.6928799061231847`*^9}, 3.6929689658963795`*^9}],

Cell["\<\
Finding the eigenvalues numerically under the same conditions that led to the \
potential for limit cycles above.\
\>", "Text",
 CellChangeTimes->{{3.6928794898365936`*^9, 3.6928795186316347`*^9}, {
  3.692879805787042*^9, 3.69287981827206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", "t", "]"}], "/.", 
     RowBox[{"equilibria", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "/.", "Pars"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6928775903181677`*^9, 3.6928775956181755`*^9}, {
   3.69287885302369*^9, 3.6928788748347216`*^9}, {3.692878949736828*^9, 
   3.692878964823849*^9}, 3.6928799087831883`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.7854125382377298`"}], ",", 
   RowBox[{"-", "0.11458946176227026`"}], ",", "0.02999940000599999`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6928794593105507`*^9, 3.692879852718109*^9, 3.69287990966319*^9, 
   3.692908778467676*^9, 3.6929680329690533`*^9, 3.6929689680959835`*^9, {
   3.692971702691226*^9, 3.692971731853894*^9}}]
}, Closed]],

Cell["Once again this equilibrium is unstable", "Text",
 CellChangeTimes->{{3.6928799174912014`*^9, 3.6928799255922127`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Host fixation equilibrium #4: ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Mu]"}], "-", 
        RowBox[{"X", " ", "\[Xi]P"}], "+", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}], ",", 
    RowBox[{
     RowBox[{"pM", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[Mu]"}], "-", 
        RowBox[{"X", " ", "\[Xi]P"}], "+", 
        RowBox[{"Y", " ", "\[Xi]P"}], "+", 
        SqrtBox[
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Xi]P", "2"]}]}]]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}]]}]}]}], "}"}]],
  CellChangeTimes->{3.69272765863111*^9, 3.6927277438849864`*^9, 
   3.6927278361312623`*^9, 3.6928776272555723`*^9, 3.6929087777966375`*^9, 
   3.692968031783451*^9, 3.6929687894764585`*^9}]
}], "Subsubsection",
 CellChangeTimes->{{3.6928787949866085`*^9, 3.692878831960661*^9}, {
   3.6928798244220686`*^9, 3.692879862040122*^9}, 3.6928798945521684`*^9, 
   3.6929689811622066`*^9}],

Cell["\<\
Finding the eigenvalues numerically under the same conditions that led to the \
potential for limit cycles above.\
\>", "Text",
 CellChangeTimes->{{3.6928794898365936`*^9, 3.6928795186316347`*^9}, {
  3.692879805787042*^9, 3.69287981827206*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", "t", "]"}], "/.", 
     RowBox[{"equilibria", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "/.", "Pars"}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6928775903181677`*^9, 3.6928775956181755`*^9}, {
  3.69287885302369*^9, 3.6928788748347216`*^9}, {3.692878949736828*^9, 
  3.692878964823849*^9}, {3.6928798967521715`*^9, 3.6928798981321735`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9908345233868181`"}], ",", "0.09083252338681809`", ",", 
   RowBox[{"-", "0.030000600005999974`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6928794593105507`*^9, 3.692879852718109*^9, 3.6928798993231754`*^9, 
   3.692908778501678*^9, 3.692968033015853*^9, 3.69296898347101*^9, {
   3.6929717028792367`*^9, 3.6929717319018965`*^9}}]
}, Closed]],

Cell["\<\
This equilibrium is also unstable, hence confirming that limit cycles are \
likely under this condition.\
\>", "Text",
 CellChangeTimes->{{3.692879961941264*^9, 3.692879983576296*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subsection",
 CellChangeTimes->{{3.692032136716131*^9, 3.692032140538138*^9}}],

Cell[TextData[{
 "We numerically integrate this modified matching allele model for a given \
parameter combination given by ",
 StyleBox["Pars",
  FontSlant->"Italic"],
 " and initial allele frequencies given by ",
 StyleBox["Inits",
  FontSlant->"Italic"],
 " below."
}], "Text",
 CellChangeTimes->{{3.692032314799444*^9, 3.692032398746192*^9}, {
  3.695822494965679*^9, 3.695822500364988*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0.45"}], ",", 
     RowBox[{"Y", "\[Rule]", "0.35"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"1", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}]}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", "0.246"}], ",", 
     RowBox[{"\[Xi]H", "\[Rule]", " ", "0.36"}], ",", 
     RowBox[{"\[Xi]P", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"tmax", "\[Rule]", "5000"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6920324022093983`*^9, 3.69203247152332*^9}, {
   3.692032605595956*^9, 3.6920326381104136`*^9}, {3.6920326768628817`*^9, 
   3.6920327704648476`*^9}, {3.692726242363104*^9, 3.6927262655844326`*^9}, {
   3.692727438264506*^9, 3.692727476695704*^9}, {3.6927275112326794`*^9, 
   3.6927275141518464`*^9}, {3.6927275675358996`*^9, 3.692727593328375*^9}, {
   3.6928786401753893`*^9, 3.6928786763244405`*^9}, {3.692908814078713*^9, 
   3.6929088142707243`*^9}, {3.6929088639015627`*^9, 
   3.6929088983905354`*^9}, {3.6929093813431587`*^9, 3.692909381454165*^9}, 
   3.6929680229538355`*^9, 3.6929716737865725`*^9, {3.692971747482788*^9, 
   3.6929717766494565`*^9}, {3.6929719560497174`*^9, 
   3.6929719607779875`*^9}, {3.692972017074208*^9, 3.692972046173872*^9}, {
   3.6929724561033187`*^9, 3.6929724562343264`*^9}, {3.6929764317753134`*^9, 
   3.692976436526585*^9}, {3.692976560850696*^9, 3.6929766005669675`*^9}}],

Cell[TextData[{
 "Initial Conditions: For initial conditions we use the polymorphic \
equilibrium ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"]}], "}"}], TraditionalForm]]],
 " with a small deviation."
}], "Text",
 CellChangeTimes->{{3.692032169011188*^9, 3.692032208230657*^9}, {
  3.6958225064073334`*^9, 3.6958225121676626`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inits", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"0.5", "*", "0.9"}]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "0", "]"}], "\[Equal]", 
      RowBox[{"0.5", "*", "1.2"}]}], ",", 
     RowBox[{
      RowBox[{"pM", "[", "0", "]"}], "\[Equal]", "0.5"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.69203220988426*^9, 3.6920322659839582`*^9}, {
  3.692726304512659*^9, 3.6927263091119223`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nsol", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"ODE", "[", "t", "]"}], ",", "Inits"}], "]"}], "/.", 
       "Pars"}], ",", 
      RowBox[{"Vars", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"tmax", "/.", "Pars"}]}], "}"}]}], "]"}], "//", "Flatten"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pHsol", "[", "\[Tau]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pPsol", "[", "\[Tau]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pMsol", "[", "\[Tau]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pM", "[", "t", "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.69203228383139*^9, 3.6920323116170387`*^9}, {
  3.6920324549404907`*^9, 3.692032522210809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHsol", "[", "t", "]"}], ",", 
     RowBox[{"pPsol", "[", "\[Tau]", "]"}], ",", 
     RowBox[{"pMsol", "[", "\[Tau]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "1", ",", 
     RowBox[{"tmax", "/.", "Pars"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Thick"}], "}"}], ",", 
      "Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6920325245196133`*^9, 3.6920325650192842`*^9}, {
  3.692032623117787*^9, 3.692032629374398*^9}, {3.6920327987944975`*^9, 
  3.692032808874115*^9}, {3.6928786857654533`*^9, 3.692878706391483*^9}, {
  3.6929087545053053`*^9, 3.69290878745319*^9}, {3.692908945192212*^9, 
  3.692908991343852*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
    LineBox[CompressedData["
1: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
NQc2rw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
0X+rIO2S7uziQwZKi73ZXvGnGv4HHPypOQ==
     "]]}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
iaI1kH7BYP6fD92PzaZDEo0f4H9QdBNC
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 5000}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.6920325524914627`*^9, 3.6920325655652857`*^9}, {
   3.692032611258766*^9, 3.692032641370819*^9}, {3.6920326804196873`*^9, 
   3.6920326865504985`*^9}, {3.6920327188725567`*^9, 3.692032809669717*^9}, {
   3.6927262571949525`*^9, 3.692726271541773*^9}, 3.692726314706242*^9, {
   3.6927274269128566`*^9, 3.6927274809479475`*^9}, {3.692727574277285*^9, 
   3.692727596194539*^9}, {3.6928786601984177`*^9, 3.6928787086214857`*^9}, {
   3.6929087677390623`*^9, 3.6929087882762375`*^9}, {3.692908875324216*^9, 
   3.6929089023967648`*^9}, {3.692908946286275*^9, 3.692908992108896*^9}, 
   3.6929093868164716`*^9, 3.692968033624254*^9, 3.6929689903038225`*^9, {
   3.692971732543934*^9, 3.692971782169772*^9}, 3.692971965905281*^9, {
   3.692972022204501*^9, 3.6929720499570885`*^9}, 3.6929724594355097`*^9, 
   3.692976440931837*^9, {3.692976588575282*^9, 3.692976603985163*^9}}]
}, Closed]],

Cell["\<\
As expected given large \[Gamma] the frequency of immature and mature \
parasites are approximately equal.  To relate \[Gamma] to the epidemiological \
parameters in the models below we have:\
\>", "Text",
 CellChangeTimes->{{3.69203257930991*^9, 3.6920325923047323`*^9}, {
  3.692032657236047*^9, 3.692032666925664*^9}, {3.6929680505386844`*^9, 
  3.6929680687077637`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"\[Delta]_", ",", "nI_", ",", "\[Tau]I_"}], "]"}], ":=", 
  FractionBox["\[Delta]", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["nI", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
    ")"}]]}]], "Input",
 CellChangeTimes->{{3.6929090700753555`*^9, 3.6929091610325575`*^9}, 
   3.692971246981161*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["SEIRS Model without Coevolution", "Section",
 CellChangeTimes->{{3.6920328881076546`*^9, 3.6920328947230663`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input"],

Cell["\<\
Here we derive an epidemiological which captures a maturation of pathogens by \
including an exposed class of individuals who are infected but not yet \
infectious themselves.  We find the equilibria of the model and assess their \
stability.\
\>", "Text",
 CellChangeTimes->{{3.6918733821523523`*^9, 3.6918734840651813`*^9}, {
  3.691873517389087*^9, 3.69187360904733*^9}, {3.691873837406391*^9, 
  3.691873842144662*^9}, {3.692032910603894*^9, 3.692032968965597*^9}, {
  3.692033036095515*^9, 3.692033076936386*^9}, {3.695822515575858*^9, 
  3.6958225179649944`*^9}}],

Cell[CellGroupData[{

Cell["The Differential Equations", "Subsection",
 CellChangeTimes->{{3.692033085018201*^9, 3.6920330928494143`*^9}, 
   3.692033666150846*^9, 3.692968102501423*^9}],

Cell[TextData[{
 "We are interested in a epidemiological model where the host population is \
divided into ",
 StyleBox["susceptible",
  FontSlant->"Italic"],
 " individuals which become ",
 StyleBox["exposed",
  FontSlant->"Italic"],
 " upon infection but are not yet infectious.  Exposed individuals transition \
through ",
 Cell[BoxData[
  FormBox["nE", TraditionalForm]]],
 " stages before the host become ",
 StyleBox["infectious",
  FontSlant->"Italic"],
 ".  The host then experiences nI infectious stages until the host ",
 StyleBox["recovers",
  FontSlant->"Italic"],
 ".  Upon recovery resistance to infection lasts for a ",
 Cell[BoxData[
  FormBox["nR", TraditionalForm]]],
 " stages until the host looses immunity to disease and becomes susceptible \
once again.\n\nLet the number of susceptible hosts at time t be s[t], the ODE \
for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"s", "[", 
      RowBox[{"0", ",", "t"}], "]"}]}], "=", 
    RowBox[{"f1", "[", 
     RowBox[{"0", ",", "t"}], "]"}]}], TraditionalForm]]],
 ". ",
 StyleBox["In the absence of genetic variation within the host population, we \
have only one type of host, which we label \[OpenCurlyDoubleQuote]0\
\[CloseCurlyDoubleQuote], as a",
  FontColor->GrayLevel[0]],
 " placeholder."
}], "Text",
 CellChangeTimes->{{3.692047651439906*^9, 3.692048077343056*^9}, {
  3.692048375666583*^9, 3.6920484219890647`*^9}, {3.6920551989455924`*^9, 
  3.6920552082276087`*^9}, {3.692968105715029*^9, 3.692968108678435*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"0", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"b", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"0", ",", "t"}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"0", ",", "t"}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}]}]}], 
     ")"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}]}], "-", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{"i", "[", 
       RowBox[{"c", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], 
    RowBox[{"r", "[", 
     RowBox[{"nR", ",", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.692047562842949*^9, 3.692047582920184*^9}, 
   3.692048433455085*^9, {3.692054990490026*^9, 3.6920550586193457`*^9}}],

Cell[TextData[{
 "Here b is the host birth rate, \[Kappa] is the inverse of the carrying \
capacity, d is the host death rate.  Infectious individuals transmit \
infections to susceptible individuals at rate \[Beta] whereas individuals \
from the last recovered stage, nR, return to the susceptible class at rate ",
 Cell[BoxData[
  FormBox[
   FractionBox["nR", "\[Tau]R"], TraditionalForm]]],
 ".\nLet the number of exposed individuals in stage c at time t be e[c,t], \
and the corresponding ODE for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"e", "[", 
      RowBox[{"c", ",", "t"}], "]"}]}], "=", 
    RowBox[{"f2", "[", 
     RowBox[{"c", ",", "t"}], "]"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.69204843648149*^9, 3.692048590538761*^9}, {
  3.692968113389643*^9, 3.6929681164004483`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", 
   RowBox[{"c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{"\[Beta]", " ", 
      RowBox[{"s", "[", 
       RowBox[{"0", ",", "t"}], "]"}], 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"j", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["nE", "\[Tau]E"], "+", "\[Delta]"}], ")"}], 
      RowBox[{"e", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nE", "\[Tau]E"], 
      RowBox[{"e", "[", 
       RowBox[{
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["nE", "\[Tau]E"], "+", "\[Delta]"}], ")"}], 
      RowBox[{"e", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689542868528514*^9, 3.6895430848158846`*^9}, {
  3.689543139744026*^9, 3.6895431676326213`*^9}, {3.6895432146143084`*^9, 
  3.6895433034163876`*^9}, {3.689547040764152*^9, 3.6895470421742325`*^9}, {
  3.68977322980317*^9, 3.6897733177733545`*^9}, {3.6897735601770725`*^9, 
  3.689773561643475*^9}, {3.689774642174739*^9, 3.689774649865552*^9}, {
  3.6897747389081593`*^9, 3.6897747423557653`*^9}, {3.6920550664349594`*^9, 
  3.6920550940012083`*^9}}],

Cell[TextData[{
 "New infections enter the first exposed stage whereas exposed stages 2 \
through nE depend only on the previous infected class, hence the ODEs for the \
first vs later classes have fundamentally different forms.  Hosts transition \
exit each exposed class at a rate ",
 Cell[BoxData[
  FormBox[
   FractionBox["nE", "\[Tau]E"], TraditionalForm]]],
 " and die at a rate \[Delta], where we assume \[Delta]>d. "
}], "Text",
 CellChangeTimes->{{3.692048621256215*^9, 3.692048794791321*^9}, {
   3.69205456164307*^9, 3.6920545726410894`*^9}, 3.692968120238055*^9}],

Cell[TextData[{
 "Let the number of infected in class c at time t be i[c,t] ,  the ODE for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"i", "[", 
      RowBox[{"c", ",", "t"}], "]"}]}], "=", 
    RowBox[{"f3", "[", 
     RowBox[{"c", ",", "t"}], "]"}]}], TraditionalForm]]],
 ".  Once again since exposed individuals receive individuals from the last \
exposed class whereas the 2nd thorough nI infectious classes depend only on \
previous infectious classes and hence the ODEs for the first vs. later stages \
have distinct forms. "
}], "Text",
 CellChangeTimes->{{3.689542687210143*^9, 3.6895428654683385`*^9}, {
   3.6920488043717375`*^9, 3.6920488048709383`*^9}, {3.6920544185532174`*^9, 
   3.692054538148429*^9}, {3.6920546596982427`*^9, 3.692054705314723*^9}, {
   3.6929681220164585`*^9, 3.692968140303691*^9}, 3.695822523271298*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", 
   RowBox[{"c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nE", "\[Tau]E"], 
      RowBox[{"e", "[", 
       RowBox[{"nE", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], 
      RowBox[{"i", "[", 
       RowBox[{
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689542868528514*^9, 3.6895430848158846`*^9}, {
  3.689543139744026*^9, 3.6895431676326213`*^9}, {3.6895432146143084`*^9, 
  3.6895433034163876`*^9}, {3.689547040764152*^9, 3.6895470421742325`*^9}, {
  3.68977322980317*^9, 3.6897733177733545`*^9}, {3.6897735601770725`*^9, 
  3.689773561643475*^9}, {3.689774642174739*^9, 3.689774649865552*^9}, {
  3.6897747389081593`*^9, 3.6897747423557653`*^9}, {3.6920554390408163`*^9, 
  3.6920554436116247`*^9}, {3.6924568059821925`*^9, 3.6924568291600437`*^9}, {
  3.6924582823972263`*^9, 3.6924582846890554`*^9}}],

Cell[TextData[{
 "Here infectious individuals transition between stages at rate ",
 Cell[BoxData[
  FormBox[
   FractionBox["nI", "\[Tau]I"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6920545523454533`*^9, 3.692054592896925*^9}}],

Cell[TextData[{
 "Let the number of recovered in class c at time t be r[c,t], the ODE for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"r", "[", 
      RowBox[{"c", ",", "t"}], "]"}]}], "=", 
    RowBox[{"f4", "[", 
     RowBox[{"c", ",", "t"}], "]"}]}], TraditionalForm]]],
 ".  Once again the first and latter stages have distinctly different forms."
}], "Text",
 CellChangeTimes->{{3.689542687210143*^9, 3.6895428654683385`*^9}, {
  3.6920546244089804`*^9, 3.6920546554238353`*^9}, {3.692054802250095*^9, 
  3.692054820642527*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f4", "[", 
   RowBox[{"c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], 
      RowBox[{"i", "[", 
       RowBox[{"nI", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["nR", "\[Tau]R"], "+", "d"}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nR", "\[Tau]R"], 
      RowBox[{"r", "[", 
       RowBox[{
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["nR", "\[Tau]R"], "+", "d"}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689542868528514*^9, 3.6895430848158846`*^9}, {
  3.689543139744026*^9, 3.6895431676326213`*^9}, {3.6895432146143084`*^9, 
  3.6895433034163876`*^9}, {3.689547040764152*^9, 3.6895470421742325`*^9}, {
  3.68977322980317*^9, 3.6897733177733545`*^9}, {3.6897735601770725`*^9, 
  3.689773561643475*^9}, {3.689774642174739*^9, 3.689774649865552*^9}, {
  3.6897747389081593`*^9, 3.6897747423557653`*^9}, {3.692055105248828*^9, 
  3.69205512375046*^9}, {3.6924568124846063`*^9, 3.692456814247409*^9}}],

Cell[CellGroupData[{

Cell["List of Equations", "Subsubsection",
 CellChangeTimes->{{3.6920548597059956`*^9, 3.6920548621864*^9}}],

Cell["A list of the differential equations is given by:", "Text",
 CellChangeTimes->{{3.6929685021806717`*^9, 3.692968509887086*^9}, 
   3.6958225274685383`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ODEs", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nE", ",", "nI", ",", "nR", ",", "odes", ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"odes", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"odes", ",", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"0", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        RowBox[{"f1", "[", 
         RowBox[{"0", ",", "t"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"odes", ",", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"e", "[", 
              RowBox[{"j", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
           " ", 
           RowBox[{"f2", "[", 
            RowBox[{"j", ",", "t"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"odes", ",", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"i", "[", 
              RowBox[{"j", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
           " ", 
           RowBox[{"f3", "[", 
            RowBox[{"j", ",", "t"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"odes", ",", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"j", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
           " ", 
           RowBox[{"f4", "[", 
            RowBox[{"j", ",", "t"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "odes"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.692054888332046*^9, 3.6920549278031154`*^9}, {
  3.6920549601575723`*^9, 3.6920549765280013`*^9}, {3.6920551324250755`*^9, 
  3.692055132721476*^9}, {3.6920552267770414`*^9, 3.6920554129243703`*^9}}],

Cell["A list of the variables in the system is given by:", "Text",
 CellChangeTimes->{{3.6920559471413126`*^9, 3.692055948436115*^9}, {
  3.6929684831914387`*^9, 3.6929684959678607`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vars", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"s", "[", 
      RowBox[{"0", ",", "t"}], "]"}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"e", "[", 
       RowBox[{"c", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "nEs"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"i", "[", 
       RowBox[{"c", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "nIs"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "1", ",", "nRs"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6920559503393183`*^9, 3.6920560209314423`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria", "Subsection",
 CellChangeTimes->{{3.692056080009746*^9, 3.6920560830049515`*^9}}],

Cell[CellGroupData[{

Cell["Deriving the equilibrium equations", "Subsubsection",
 CellChangeTimes->{{3.6920561057205915`*^9, 3.692056139698451*^9}}],

Cell["\<\
Let se be the abundance of susceptible individuals at equilibrium, ee[c] the \
abundance of exposed individuals in stage c at equilibrium, ie[c] and re[c] \
the abundances of infected and recovered individuals at equilibrium.  At \
equilibrium the recovered equations, the infected equations and the 2nd \
through nEth infected stages can be written in terms of the first exposed \
class. Letting the abundance of individuals in the first exposed class be ee1 \
we can write:\
\>", "Text",
 CellChangeTimes->{{3.6920561447684603`*^9, 3.6920563726752605`*^9}, {
  3.6924535118700705`*^9, 3.692453516508336*^9}, {3.6929681449368987`*^9, 
  3.692968180490413*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"re", "[", "c_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nR", 
      RowBox[{"nR", "+", 
       RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nI", "\[Tau]I"], 
     RowBox[{"(", 
      FractionBox["\[Tau]R", 
       RowBox[{"nR", "+", 
        RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
    RowBox[{"nI", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nE", "\[Tau]E"], 
     RowBox[{"(", 
      FractionBox["\[Tau]I", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nE", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
    RowBox[{"nE", "-", "1"}]], 
   RowBox[{"ee", "[", "1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6908145382942305`*^9, 3.69081460682215*^9}, {
  3.691859107471887*^9, 3.691859124381854*^9}, {3.6924535190924835`*^9, 
  3.6924536045273705`*^9}, {3.692453715906741*^9, 3.692453727987432*^9}}],

Cell["for c={1,2...nR},", "Text",
 CellChangeTimes->{{3.690814625335209*^9, 3.690814670549795*^9}, 
   3.6924536633477345`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ie", "[", "c_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nE", "\[Tau]E"], 
     RowBox[{"(", 
      FractionBox["\[Tau]I", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nE", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
    RowBox[{"nE", "-", "1"}]], 
   RowBox[{"ee", "[", "1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6908146305075045`*^9, 3.690814640787092*^9}, 
   3.6908146777452064`*^9, {3.6908149132566767`*^9, 3.690814935712961*^9}, {
   3.691859132967345*^9, 3.691859136881569*^9}, {3.692453609345646*^9, 
   3.692453615956024*^9}, {3.6924536841129227`*^9, 3.6924537136796136`*^9}}],

Cell["for c={1,2...nI} and,", "Text",
 CellChangeTimes->{{3.6908146804703627`*^9, 3.6908146986224003`*^9}, {
  3.6917710602134132`*^9, 3.691771081982546*^9}, {3.6924536577314134`*^9, 
  3.692453666178897*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ee", "[", "c_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", ">", "1"}], ",", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["nE", 
        RowBox[{"nE", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
      RowBox[{"c", "-", "1"}]], 
     RowBox[{"ee", "[", "1", "]"}]}], ",", "ee1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6924536698491063`*^9, 3.692453701045891*^9}, {
  3.692453736782935*^9, 3.692453750353711*^9}}],

Cell["for c={1,2...nE}.", "Text",
 CellChangeTimes->{{3.692461415123763*^9, 3.6924614183789496`*^9}}],

Cell[TextData[{
 "Hence we can reduce the equilibrium down to 2 equations, the susceptible \
equation and the first infected equation by expressing the sums over infected \
classes in terms of the first infected class only.  To do this we define \
zE,zI,zR and znR such that:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "nE"], 
     RowBox[{"ee", "[", "j", "]"}]}], "=", 
    RowBox[{"zE", " ", "ee1"}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "nI"], 
     RowBox[{"ie", "[", "j", "]"}]}], "=", 
    RowBox[{"zI", " ", "ee1"}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "nR"], 
     RowBox[{"re", "[", "j", "]"}]}], "=", 
    RowBox[{"zR", " ", "ee1"}]}], TraditionalForm]]],
 " and\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"re", "[", "nR", "]"}], "=", 
    RowBox[{"znR", " ", "ee1"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.692453030746047*^9, 3.692453159946935*^9}, {
  3.6924534575809655`*^9, 3.692453504499649*^9}, {3.692453756464061*^9, 
  3.692453857475838*^9}, {3.692968183516818*^9, 3.6929681936880364`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zsub", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zE", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ee", "[", "j", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nE"}], "}"}]}], "]"}], "ee1"]}], ",", 
     RowBox[{"zI", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ie", "[", "j", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}], "ee1"]}], ",", 
     RowBox[{"zR", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"re", "[", "j", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nR"}], "}"}]}], "]"}], "ee1"]}], ",", 
     RowBox[{"znR", "\[Rule]", 
      FractionBox[
       RowBox[{"re", "[", "nR", "]"}], "ee1"]}]}], "}"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.692453995839752*^9, 3.6924541135774865`*^9}, 
   3.6924542377625895`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"zE", "\[Rule]", 
    FractionBox[
     RowBox[{"nE", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]E"}], "-", 
      RowBox[{
       SuperscriptBox["nE", "nE"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], 
        RowBox[{"1", "-", "nE"}]]}]}], 
     RowBox[{"\[Delta]", " ", "\[Tau]E"}]]}], ",", 
   RowBox[{"zI", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nE", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nE", 
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "nE"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nI", 
            RowBox[{"nI", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
      RowBox[{"\[Delta]", " ", "\[Tau]E"}]]}]}], ",", 
   RowBox[{"zR", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nE", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nE", 
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "nE"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nI", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nR", 
            RowBox[{"nR", "+", 
             RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], ")"}]}], 
      RowBox[{"d", " ", "\[Tau]E"}]]}]}], ",", 
   RowBox[{"znR", "\[Rule]", 
    FractionBox[
     RowBox[{"nE", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nE", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "nE"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"], " ", 
      "\[Tau]R", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nR", 
         RowBox[{"nR", "+", 
          RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], 
     RowBox[{"nR", " ", "\[Tau]E"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6924540267455196`*^9, 3.692454032936874*^9}, {
   3.6924540991536617`*^9, 3.692454114184521*^9}, 3.692454238775647*^9, 
   3.6927193553841915`*^9, 3.692719404692012*^9, 3.693661773714858*^9, 
   3.695479626268282*^9, 3.6958229223051214`*^9, 3.702393131812394*^9}]
}, Closed]],

Cell["\<\
The remaining two equations which are equal to 0 at equilibrium are:\
\>", "Text",
 CellChangeTimes->{{3.6924541266722355`*^9, 3.6924541573039875`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{
    RowBox[{"b", 
     RowBox[{"(", 
      RowBox[{"se", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "ee1"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", 
        RowBox[{"(", 
         RowBox[{"se", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "ee1"}]}], ")"}]}]}],
       ")"}]}], "-", 
    RowBox[{"d", " ", "se"}], "-", 
    RowBox[{"\[Beta]", " ", "se", " ", "zI", " ", "ee1"}], "+", 
    RowBox[{
     FractionBox["nR", "\[Tau]R"], "znR", " ", "ee1"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2", "=", 
   RowBox[{
    RowBox[{"\[Beta]", " ", "se", " ", "zI", " ", "ee1"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["nE", "\[Tau]E"], "+", "\[Delta]"}], ")"}], "ee1"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.692454133681636*^9, 3.6924542327653036`*^9}, {
  3.692454300574182*^9, 3.692454357831457*^9}, {3.6924564469974427`*^9, 
  3.692456448336847*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiSol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F1", "\[Equal]", "0"}], ",", 
       RowBox[{"F2", "\[Equal]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"se", ",", "ee1"}], "}"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6924542544645443`*^9, 3.692454369913148*^9}, {
  3.692455830656929*^9, 3.692455845355961*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", "0"}], ",", 
     RowBox[{"ee1", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", 
      FractionBox[
       RowBox[{"b", "-", "d"}], 
       RowBox[{"b", " ", "\[Kappa]"}]]}], ",", 
     RowBox[{"ee1", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", 
      FractionBox[
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}]]}], ",", 
     RowBox[{"ee1", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "nR"}], " ", 
            SuperscriptBox["zI", "2"], " ", "znR", " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]E", "2"]}], "+", 
           RowBox[{"nE", " ", 
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], 
           "+", 
           RowBox[{
           "2", " ", "b", " ", "nE", " ", "zE", " ", "zI", " ", "\[Beta]", 
            " ", "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
           RowBox[{"2", " ", "b", " ", "nE", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
            "\[Tau]E", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "2", " ", "b", " ", "nE", " ", "zI", " ", "zR", " ", "\[Beta]", 
            " ", "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
           RowBox[{"b", " ", "zE", " ", 
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["zI", "2"], " ", "zR", " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{
           "2", " ", "b", " ", "zE", " ", "zI", " ", "\[Beta]", " ", 
            "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"2", " ", "b", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
            "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{
           "2", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
            "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox["\[Beta]", "2"], " ", 
              SuperscriptBox["\[Tau]E", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", 
                 "\[Kappa]", " ", 
                 RowBox[{"(", 
                  RowBox[{"nE", "+", 
                   RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]E"}], 
                   "+", 
                   RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nE", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]E"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 SuperscriptBox["\[Tau]R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                    "\[Tau]E"}], "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nE", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zR"}], ")"}], " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]E"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], ")"}]}], 
        ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", 
      FractionBox[
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}]]}], ",", 
     RowBox[{"ee1", "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nR", " ", 
          SuperscriptBox["zI", "2"], " ", "znR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"]}], "-", 
         RowBox[{"nE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], 
         "-", 
         RowBox[{
         "2", " ", "b", " ", "nE", " ", "zE", " ", "zI", " ", "\[Beta]", " ", 
          "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", "nE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{
         "2", " ", "b", " ", "nE", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
          "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
         "2", " ", "b", " ", "zE", " ", "zI", " ", "\[Beta]", " ", "\[Delta]",
           " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
          "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
         "2", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", "\[Delta]",
           " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", "b", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", 
               "\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{"nE", "+", 
                 RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]E"}], 
                 "+", 
                 RowBox[{"b", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"nE", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]E"}]}], 
                   ")"}]}]}], ")"}], " ", 
               SuperscriptBox["\[Tau]R", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                  "\[Tau]E"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"nE", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zR"}], ")"}], " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]E"}]}], ")"}], " ", 
                  "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "b", " ", 
         SuperscriptBox["zI", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], ")"}]}]}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6924543664419494`*^9, 3.6924543719732656`*^9}, {
   3.692455835754939*^9, 3.6924558460775623`*^9}, 3.6924564546866617`*^9, 
   3.6924565167824264`*^9, 3.6927193571522927`*^9, 3.6927194064891148`*^9, 
   3.6936617769906654`*^9, 3.695479642407205*^9, 3.6958229241392264`*^9, 
   3.702393133185413*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Biological validity of endemic equilibria", "Subsubsection",
 CellChangeTimes->{{3.692719478316223*^9, 3.6927195060198073`*^9}, {
  3.6954796508906903`*^9, 3.695479665482525*^9}, {3.6958228432115974`*^9, 
  3.6958228462037687`*^9}}],

Cell["\<\
As with the SIRS model here we derive the conditions for which only a single \
endemic equilibrium is biologically valid, ie positive.  When this condition \
is not met we show numerically that both endemic equilibria are either \
negative of complex and hence neither is biologically valid.\
\>", "Text",
 CellChangeTimes->{{3.695479670098789*^9, 3.695479775739831*^9}}],

Cell[TextData[StyleBox["Condition for which only one endemic equilibrium is \
biologically valid.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.695479820163372*^9, 3.6954798390104504`*^9}}],

Cell[TextData[{
 "As with the SIRS model at the endemic equilibrium ee1 must satisfy the \
following quadratic.  By dividing through by the coefficient of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["ee1", "2"], TraditionalForm]]],
 " we ensure that the quadratic is upward facing."
}], "Text",
 CellChangeTimes->{{3.692719519051553*^9, 3.692719561700992*^9}, {
   3.6927196023733187`*^9, 3.6927196292118535`*^9}, {3.6954798137310047`*^9, 
   3.6954798880902576`*^9}, 3.69582253676607*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quad", "[", "ee1s_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"F1", "/.", 
       RowBox[{"se", "\[Rule]", 
        FractionBox[
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], 
         RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}]]}]}], 
      RowBox[{
       RowBox[{"CoefficientList", "[", 
        RowBox[{
         RowBox[{"F1", "/.", 
          RowBox[{"se", "\[Rule]", 
           FractionBox[
            RowBox[{"nE", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], 
            RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}]]}]}], ",", "ee1"}],
         "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]], ",", "ee1", ",", "Simplify"}], "]"}], 
   "/.", 
   RowBox[{"ee1", "\[Rule]", "ee1s"}]}]}]], "Input",
 CellChangeTimes->{{3.6927195411708183`*^9, 3.6927195920237265`*^9}, {
  3.6954797908416953`*^9, 3.6954798056345415`*^9}, {3.6954798932515526`*^9, 
  3.6954799053312435`*^9}, {3.6958223952719765`*^9, 3.6958223962380323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quad", "[", "ee1", "]"}]], "Input",
 CellChangeTimes->{{3.6954799147807837`*^9, 3.6954799156848354`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["ee1", "2"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"nE", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]E"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nE", " ", "\[Kappa]"}], "-", 
         RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}], "+", 
         RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]E"}]}], ")"}]}]}], 
     ")"}]}], 
   RowBox[{"b", " ", 
    SuperscriptBox["zI", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox["\[Tau]E", "2"]}]], "-", 
  FractionBox[
   RowBox[{"ee1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], "\[Tau]E"], "-", 
      FractionBox[
       RowBox[{"2", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]E"}]], "+", 
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"]}], ")"}]}], 
   RowBox[{"b", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", 
    "\[Kappa]"}]]}]], "Output",
 CellChangeTimes->{3.6954799162458677`*^9, 3.6958229242692337`*^9, 
  3.702393134150717*^9}]
}, Closed]],

Cell["\<\
If the Y-intercept of this quadratic is negative we are guaranteed that one \
endemic equilibrium will be negative (biologically invalid) and one will be \
positive (biologically valid).  In particular we solve for the critical value \
of \[Beta] for which the Y-intercept is 0.\
\>", "Text",
 CellChangeTimes->{{3.6954799284985685`*^9, 3.695480010506259*^9}, {
  3.6958225402772703`*^9, 3.695822542429394*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Quad", "[", "0", "]"}], "/.", "zsub"}], ")"}], "\[Equal]", 
      "0"}], ",", "\[Beta]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.693662305619829*^9, 3.6936623145896463`*^9}, {
  3.693666022698086*^9, 3.6936660279006968`*^9}, {3.695480024806077*^9, 
  3.6954800495494924`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Beta]", "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nE", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
       RowBox[{"-", "nE"}]]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
       ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.693662311329241*^9, 3.693662315057647*^9}, {
   3.693666024117688*^9, 3.6936660283374977`*^9}, 3.6954800505455494`*^9, 
   3.695822924434243*^9, 3.702393134247324*^9}]
}, Closed]],

Cell["\<\
When \[Beta] is larger than this critical value we will have only one \
biologically valid equilibrium.  When \[Beta] is less than this critical \
value and hence the Y-intercept is positive than either both equilibria are \
positive, both are negative, or both are complex.  Below we show numerically \
that for a large number of parameter combinations that the slope of the \
quadratic at ee1=0 is positive.  This ensures that both equilibria are either \
negative or complex and hence neither is biologically valid.\
\>", "Text",
 CellChangeTimes->{{3.6936623221288605`*^9, 3.693662364962941*^9}, {
   3.6954800546347833`*^9, 3.6954802263786063`*^9}, 3.695822544742526*^9}],

Cell[TextData[StyleBox["Numerical demonstration that both equilibria are not \
biologically valid",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6954807566189346`*^9, 3.695480773490899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Slope", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Quad", "[", "ee1", "]"}], ",", "ee1"}], "]"}], "/.", 
      RowBox[{"ee1", "\[Rule]", "0"}]}], "/.", "zsub"}], "//", "Simplify"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6954803365999107`*^9, 3.6954803679507036`*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nEs", ",", "nIs", ",", "nRs", ",", "\[Tau]Es", ",", "\[Tau]Is", ",", 
     "\[Tau]Rs", ",", "bs", ",", "ds", ",", "\[Delta]s", ",", "\[Beta]s", ",",
      "c", ",", "parsSub"}], "}"}], ",", 
   RowBox[{
    RowBox[{"NegList", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"PosList", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"c", "=", "1"}], ",", 
      RowBox[{"c", "\[LessEqual]", "5000"}], ",", 
      RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Drawing", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nEs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"nIs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"nRs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]Es", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "40"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Tau]Is", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "40"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Tau]Rs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"20", ",", "100"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.2"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"ds", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.001", ",", "bs"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Delta]s", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"ds", ",", 
            RowBox[{"ds", "+", "0.1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nE", "\[Rule]", "nEs"}], ",", 
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]E", "\[Rule]", "\[Tau]Es"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "bs"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "1"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Beta]s", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.01", ",", 
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox["nE", 
                   RowBox[{"nE", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
                 RowBox[{"-", "nE"}]]}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"b", "-", "d"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox["nI", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
                 ")"}]}]]}], "/.", "parsSub"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nE", "\[Rule]", "nEs"}], ",", 
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]E", "\[Rule]", "\[Tau]Es"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "bs"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "\[Beta]s"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       RowBox[{"test", "=", 
        RowBox[{"(", 
         RowBox[{"Slope", "/.", "parsSub"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"test", "<", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"NegList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nEs", ",", "nIs", ",", "nRs", ",", "\[Tau]Es", ",", "\[Tau]Is", 
             ",", "\[Tau]Rs", ",", "bs", ",", "ds", ",", "\[Delta]s", ",", 
             "\[Beta]s", ",", "test"}], "}"}]}], "]"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"PosList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nEs", ",", "nIs", ",", "nRs", ",", "\[Tau]Es", ",", "\[Tau]Is", 
             ",", "\[Tau]Rs", ",", "bs", ",", "ds", ",", "\[Delta]s", ",", 
             "\[Beta]s", ",", "test"}], "}"}]}], "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6954739882968082`*^9, 3.695474145231785*^9}, {
   3.695474190864395*^9, 3.6954744387925754`*^9}, {3.6954744874593587`*^9, 
   3.695474611627461*^9}, {3.6954746463904495`*^9, 3.6954746772542143`*^9}, 
   3.695475238660325*^9, 3.695475274987403*^9, {3.695475382680563*^9, 
   3.695475574457532*^9}, {3.695475708039172*^9, 3.6954758034486294`*^9}, {
   3.6954759346751347`*^9, 3.695475948103903*^9}, {3.6954802604855576`*^9, 
   3.6954803286154537`*^9}, {3.6954803834745913`*^9, 3.695480430748296*^9}}],

Cell[CellGroupData[{

Cell[BoxData["NegList"], "Input",
 CellChangeTimes->{{3.695480414425362*^9, 3.6954804155884285`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.6954804160544553`*^9, 3.695480437137661*^9}, 
   3.69548053187808*^9, 3.695822927224403*^9, 3.702393136903701*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "PosList", "]"}]], "Input",
 CellChangeTimes->{{3.6954804172215223`*^9, 3.695480425989023*^9}}],

Cell[BoxData["5000"], "Output",
 CellChangeTimes->{{3.695480418986623*^9, 3.695480437938707*^9}, 
   3.69548053205509*^9, 3.695822927256405*^9, 3.702393136964156*^9}]
}, Closed]],

Cell[TextData[{
 "For the 5000 randomly chosen parameter conditions for which the intercept \
is positive (",
 Cell[BoxData[
  RowBox[{"\[Beta]", "<", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nE", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
       RowBox[{"-", "nE"}]]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
       ")"}]}]]}]}]],
  CellChangeTimes->{{3.693662311329241*^9, 3.693662315057647*^9}, {
    3.693666024117688*^9, 3.6936660283374977`*^9}, 3.6954800505455494`*^9}],
 ") the slope at ee1=0 is positive and hence both equilibria are either \
negative or complex. "
}], "Text",
 CellChangeTimes->{{3.6954804406028595`*^9, 3.6954805206744394`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["List of equilibria", "Subsubsection",
 CellChangeTimes->{{3.6924556539382877`*^9, 3.6924556737535343`*^9}, {
  3.695822822514414*^9, 3.6958228377942877`*^9}}],

Cell[TextData[{
 "Above we solved for the equilibrium values of the susceptible class, se, \
and the first infected class, ee1.  Given these expressions below we \
construct a substitution list for all classes for equilibrium number ",
 StyleBox["num",
  FontSlant->"Italic"],
 ". The first equilibrium is host extinction, the second is disease \
extinction, the third and fourth are the endemic equilibria. "
}], "Text",
 CellChangeTimes->{{3.6924556783381443`*^9, 3.6924557816841793`*^9}, {
  3.692968220180883*^9, 3.6929682244396906`*^9}, {3.695822943755348*^9, 
  3.695822990074998*^9}, {3.7142283507822523`*^9, 3.7142283571674023`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiSub", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_", ",", "num_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"equList", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"equList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"equList", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"0", ",", "\[Infinity]"}], "]"}], "\[Rule]", "se"}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"equList", ",", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "ee1"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "2"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nEs"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"equList", ",", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
           RowBox[{"ee", "[", "c", "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nIs"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", " ", 
         RowBox[{"equList", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
           RowBox[{"ie", "[", "c", "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nRs"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"equList", ",", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
           RowBox[{"re", "[", "c", "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"equList", "/.", 
        RowBox[{"EquiSol", "[", 
         RowBox[{"[", "num", "]"}], "]"}]}], "/.", "zsub"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"nE", "\[Rule]", "nEs"}], ",", 
        RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
        RowBox[{"nR", "\[Rule]", "nRs"}]}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.692455786991435*^9, 3.692455825739118*^9}, {
  3.692456038806629*^9, 3.6924560564488635`*^9}, {3.6958230802311544`*^9, 
  3.695823081783243*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Relationship between the parameters", "Subsubsection",
 CellChangeTimes->{{3.692724675613491*^9, 3.692724679947739*^9}}],

Cell[TextData[{
 "As with the SIRS model, in order to develop analogous coevolutionary and \
epidemiological models we must define some logical relationship between the \
parameters. In particular we let \[Xi]P=1, the fitness of successful \
pathogen, similarly \[Xi]H is the fitness cost of infection which in the \
SEIRS model is given by \[Xi]H=\[Delta](nE+nI).  Finally, the maturation rate \
could be defined as either a) the flow into the first infected stage relative \
to the total number of infections or b) the total flow out of the infectious \
class relative to the total number of infections.  Because choice a leads to \
a simpler relationship this is what we use.  Specifically, at equilibrium  \
the flow into the first infectious class is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["nE", "\[Tau]E"], 
    RowBox[{"ee", "[", "nE", "]"}]}], TraditionalForm]]],
 " whereas the total abundance of the infectious class is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ee", "[", "nE", "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"c", "=", "1"}], "nI"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
       RowBox[{"c", "-", "1"}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["nE", "\[Tau]E"], 
        RowBox[{"(", 
         FractionBox["\[Tau]I", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}]}]}]}], 
   TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.69272468556406*^9, 3.6927250507589483`*^9}, 
   3.6929682345585566`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    FractionBox["nE", "\[Tau]E"], 
    RowBox[{"ee", "[", "nE", "]"}]}], 
   RowBox[{
    RowBox[{"ee", "[", "nE", "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"c", "=", "1"}], "nI"], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
       RowBox[{"c", "-", "1"}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["nE", "\[Tau]E"], 
        RowBox[{"(", 
         FractionBox["\[Tau]I", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}]}]}]}]], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.6927250662468343`*^9, 3.692725090245207*^9}, {
  3.6927252249179096`*^9, 3.6927252325903482`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["\[Delta]", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["nI", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}]]}]], "Output",
 CellChangeTimes->{3.695822927337409*^9, 3.702393142469707*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Gamma]", "[", 
   RowBox[{"nI_", ",", "\[Delta]_", ",", "\[Tau]I_"}], "]"}], ":=", 
  RowBox[{"-", 
   FractionBox["\[Delta]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["nI", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
      "nI"]}]]}]}]], "Input",
 CellChangeTimes->{{3.6927252353725076`*^9, 3.6927252483422494`*^9}}],

Cell["\<\
Given our assumption that \[Gamma] is large this is most likely to be \
satisfied where \[Tau]I and nI are small and \[Delta] large.\
\>", "Text",
 CellChangeTimes->{{3.6927255345646205`*^9, 3.692725561148141*^9}, 
   3.692968240517767*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nIPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"nI", ",", "\[Delta]", ",", "\[Tau]I"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Delta]", "\[Rule]", "0.005"}], ",", 
        RowBox[{"\[Tau]I", "\[Rule]", "10"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"nI", ",", "1", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]Plot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"nI", ",", "\[Delta]", ",", "\[Tau]I"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"nI", "\[Rule]", "5"}], ",", 
        RowBox[{"\[Tau]I", "\[Rule]", "10"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]", ",", "0.0001", ",", "0.05"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Tau]IPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Gamma]", "[", 
       RowBox[{"nI", ",", "\[Delta]", ",", "\[Tau]I"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Delta]", "\[Rule]", "0.005"}], ",", 
        RowBox[{"nI", "\[Rule]", "5"}]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Tau]I", ",", "1", ",", "100"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Purple"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.692725252110465*^9, 3.6927255270111885`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
f75JhN4=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.10254582517708956`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 100}, {0.10254582517708956`, 0.10281158884800029`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69272526233805*^9, 3.692725353011236*^9}, 
   3.6927253960786996`*^9, 3.692725453316973*^9, {3.69272548927903*^9, 
   3.6927255273742094`*^9}, 3.6958229275304203`*^9, 3.7023931425917597`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1:eJwVznk41AkcBvChKFd6SNohNY4kx/BkEfIqUdvS0tBBHqFjLauWJ6UtV2Vo
EkaNZuXI2Y9qbIsx5vArtFhX2rKVoxgaxHRq2kfZ2T++z/t8/njf50uLOLb7
sCqFQvFT3v9ZMSeP+uBERWJ80cGMQgE87lrVUFxNoNmZd9q0SIDpBoeEdBMa
6FoWHJHS5+Oi+WyaBZqXGvW/KRagfnJ4U42lLV7pBoXuLxVA+3XEmlmuE5Ia
5skNVQI4z5izdRleeJulEPXUCtA9c+H7El4AjHjsdKNWAaQaifa1F8PxKD7e
X3NWgHvaBl+/EFEQELwXvgZNEL59prel7zj0T/pXj7k1Yb66a2qCdgKnfFP1
Bw83weaAQ3mLVSLu3xueo2U1YWsIn7Y44ywcmX2RPfwmmI6umZDLUnDFMqys
72UTCtirbT7L0qDLifr8jYYQS6asAx1XXIC8vHOwd6MQ0eL3ry9SmdBp2Zrb
ESJEW5u7MW9lJj4lMLL0zgmhd4Jjq+bBwpSP00T3bSH2lhC8BM8smPv0zz54
LER2XLc+NTYbDrFaVGcVEUbcNzHb2nMQHOK5SmEtQlySTKTVngtTRdjlNwwR
kvVLxqYG2Yjgy74cThaBeaTu/t6RPLyLjm3QvSmChs5DduinKziiiDFx+1sE
9V12djs1OdBkUa/VLYiw4CtLbdXMh5YW3fHAejF+Ka5+MLD2GrKH2VtZgWKM
8DpaTplzsb6U6jd+Voz2YKtLFLPfMBl62ZhZKYb1/lxvmnMB1OTnZ+v7xbho
sIff63Jd2ft2QGNejAgLM6qhfyEY5l6B8vUS1Pfa7/COKEK2sYqOSZAEi10K
7FQiinHfKno0OkmCic/qi2rcSuD5yGXUv0aC9obZncbiEgxyPOQBjyWQkQkK
ivsNTKr3ruJ8laDtQ5rJ3bYboHftephg3YwSpnjtBp9SsJyoQz8HNcN525mC
2Iel6Nw3OK52rhldYVHvEhll+LVxk9vvt5tR3D53R9FfBj2+l1nhQDPoIUul
XqHlkCc+v5WvSkLsu+Nj0HA5YjLk3FeGJJb8qJ3s+FMFav+IHNKmk8juOx6b
/r4C6tFlRo+8SRhcW+RaHF+JnuVdfqtDSOzLpCad/1qJkXJGKuJIcJ+GFdmn
VMHJcNxeyiRheNLb3H+hCocSDk2vKySx24Nn6p55E06nj7puqyPBOrT9y6wG
AX/Lbp+XHSQaeVerbLUJrHuuOrqlk4T037GAmGUEBHorkkqV9shNqZzUI5C+
0N4Y+ReJd2LBD1IjAp7HzrhMdCn/MbQpfWpL4GiFevh0L4l1ncu3twYQSA7L
2TP3mATDIOytaiAB6RhdZ+8TEikHbxds2UNgZVJ1K1/pp3PfvZEEE8CEvVPi
AIlLZue4gkjlnkWa2fw/JN6f+Th95wSBjNCNlqqDJNa2e3FmThKglKVNRyjt
q8/2tDlNgPHnrdoWpSsJu6tEEoGZotzNF4ZIBD856lHOJBBjVRi+dIQEk9Yg
G80kUK/WYhOldF3M4jzaJQLHK1oUHUrrLLrxqiiHQBAtKI/1goTrLnnuEJtA
5dx4+Gulj3A3uxtfJXA9NcDB7yWJPClrIjifQIckX+WO0iT9WQ6XS6CnurF/
2SiJ/wC5wluy
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.10006000861035415`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.0001, 0.05}, {0.10006000861035415`, 0.13189873971108174`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69272526233805*^9, 3.692725353011236*^9}, 
   3.6927253960786996`*^9, 3.692725453316973*^9, {3.69272548927903*^9, 
   3.6927255273742094`*^9}, 3.6958229275304203`*^9, 3.702393142658325*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.013189874238147619`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 100}, {0.013189874238147619`, 0.11924229800120581`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69272526233805*^9, 3.692725353011236*^9}, 
   3.6927253960786996`*^9, 3.692725453316973*^9, {3.69272548927903*^9, 
   3.6927255273742094`*^9}, 3.6958229275304203`*^9, 3.702393142714188*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subsection",
 CellChangeTimes->{{3.6924558998293123`*^9, 3.6924559011527157`*^9}}],

Cell["\<\
To evaluate the stability of the equilibria found above we first construct a \
Jacobian matrix.\
\>", "Text",
 CellChangeTimes->{{3.6924559065201297`*^9, 3.6924559366253977`*^9}, 
   3.692968244480174*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jmtrx", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ii", ",", "jj", ",", "nE", ",", "nI", ",", "nR", ",", "jmtrx"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", 
     RowBox[{"jmtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "1", ",", 
          RowBox[{"1", "+", "nE", "+", "nI", "+", "nR"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Suscetible", " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"jmtrx", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"f1", "[", 
          RowBox[{"0", ",", "t"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"0", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ii", "=", "1"}], ",", 
       RowBox[{"ii", "\[LessEqual]", "nE"}], ",", 
       RowBox[{"ii", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"jmtrx", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f1", "[", 
            RowBox[{"0", ",", "t"}], "]"}], ",", 
           RowBox[{"e", "[", 
            RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ii", "=", "1"}], ",", 
       RowBox[{"ii", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"ii", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"jmtrx", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f1", "[", 
            RowBox[{"0", ",", "t"}], "]"}], ",", 
           RowBox[{"i", "[", 
            RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"ii", "=", "1"}], ",", 
       RowBox[{"ii", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"ii", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"jmtrx", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f1", "[", 
            RowBox[{"0", ",", "t"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"exposed", " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"jj", "=", "1"}], ",", 
       RowBox[{"jj", "\[LessEqual]", " ", "nE"}], ",", 
       RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"jmtrx", "[", 
           RowBox[{"[", 
            RowBox[{"1", "+", "jj"}], "]"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"f2", "[", 
             RowBox[{"t", ",", "jj"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"t", ",", "0"}], "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nE"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "jj"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f2", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"e", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nI"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "jj"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f2", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"i", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nR"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "jj"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f2", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"infected", " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"jj", "=", "1"}], ",", 
       RowBox[{"jj", "\[LessEqual]", " ", "nI"}], ",", 
       RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"jmtrx", "[", 
           RowBox[{"[", 
            RowBox[{"1", "+", "nE", "+", "jj"}], "]"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"f3", "[", 
             RowBox[{"t", ",", "jj"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"t", ",", "0"}], "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nE"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nE", "+", "jj"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f3", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"e", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nI"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nE", "+", "jj"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f3", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"i", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nR"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nE", "+", "jj"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f3", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"recovered", " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"jj", "=", "1"}], ",", 
       RowBox[{"jj", "\[LessEqual]", " ", "nR"}], ",", 
       RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"jmtrx", "[", 
           RowBox[{"[", 
            RowBox[{"1", "+", "nE", "+", "nI", "+", "jj"}], "]"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"f4", "[", 
             RowBox[{"t", ",", "jj"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"t", ",", "0"}], "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nE"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nE", "+", "nI", "+", "jj"}], "]"}], "]"}], 
            ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f4", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"e", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nI"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nE", "+", "nI", "+", "jj"}], "]"}], "]"}], 
            ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f4", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"i", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{"ii", "\[LessEqual]", "nR"}], ",", 
          RowBox[{"ii", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nE", "+", "nI", "+", "jj"}], "]"}], "]"}], 
            ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"f4", "[", 
               RowBox[{"jj", ",", "t"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"ii", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"jmtrx", "=", 
      RowBox[{"jmtrx", "/.", 
       RowBox[{"{", 
        RowBox[{"t", "\[Rule]", "\[Infinity]"}], "}"}]}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6895461115150023`*^9, 3.6895466538340206`*^9}, {
  3.68954671658561*^9, 3.6895467514626045`*^9}, {3.68954681903747*^9, 
  3.689546871420466*^9}, {3.6895469088786087`*^9, 3.6895469259465847`*^9}, {
  3.689773727279642*^9, 3.689773771032919*^9}, {3.689947494733514*^9, 
  3.6899474950767145`*^9}, {3.6899475593032556`*^9, 3.68994756180026*^9}, {
  3.6899477397226467`*^9, 3.6899477468206587`*^9}, {3.6899478814451885`*^9, 
  3.6899478913522053`*^9}, {3.692720161228283*^9, 3.6927202421519117`*^9}, {
  3.6927202856143975`*^9, 3.692720293359841*^9}, {3.693661949843017*^9, 
  3.693661950155018*^9}}],

Cell["\<\
Like with the SIRS model, we are not able to solve for the eigenvalues in \
general but we can do numerically as well as analytically in a few simple \
cases.\
\>", "Text",
 CellChangeTimes->{{3.6927199265158587`*^9, 3.692719982036034*^9}, {
   3.692988825545463*^9, 3.6929888450811033`*^9}, 3.6936616679156575`*^9}],

Cell[CellGroupData[{

Cell["Extinction", "Subsubsection",
 CellChangeTimes->{{3.6936617550736227`*^9, 3.6936617565710273`*^9}}],

Cell["\<\
The characteristic polynomial at this equilibrium is straightforward:\
\>", "Text",
 CellChangeTimes->{{3.693661976564683*^9, 3.6936619904813085`*^9}, 
   3.6958225554131365`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CharPoly", "[", 
   RowBox[{"nE_", ",", "nI_", ",", "nR_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "d"}], ")"}], "-", "\[Lambda]"}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["2", "\[Tau]E"]}], ")"}]}], "-", "\[Lambda]"}], ")"}], 
    "nE"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["2", "\[Tau]I"]}], ")"}]}], "-", "\[Lambda]"}], ")"}], 
    "nI"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"d", "+", 
         FractionBox["2", "\[Tau]R"]}], ")"}]}], "-", "\[Lambda]"}], ")"}], 
    "nR"]}]}]], "Input",
 CellChangeTimes->{{3.693661994100515*^9, 3.6936620842615175`*^9}, {
  3.693662134812439*^9, 3.6936621369646435`*^9}}],

Cell[TextData[{
 "Hence the roots will be ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"b", "-", "d"}]}], TraditionalForm]]],
 ", \[Lambda]=",
 Cell[BoxData[
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{"\[Delta]", "+", 
     FractionBox["2", "\[Tau]E"]}], ")"}]}]],
  CellChangeTimes->{{3.693661994100515*^9, 3.6936620842615175`*^9}}],
 ",\[Lambda]=",
 Cell[BoxData[
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{"\[Delta]", "+", 
     FractionBox["2", "\[Tau]I"]}], ")"}]}]],
  CellChangeTimes->{{3.693661994100515*^9, 3.6936620842615175`*^9}}],
 ", and \[Lambda]=",
 Cell[BoxData[
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{"d", "+", 
     FractionBox["2", "\[Tau]R"]}], ")"}]}]],
  CellChangeTimes->{{3.693661994100515*^9, 3.6936620842615175`*^9}, {
   3.693662134812439*^9, 3.6936621369646435`*^9}}],
 ".  Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "-", "d"}], TraditionalForm]]],
 " is positive as long as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "d"}], TraditionalForm]]],
 " (which we will assume is true) this equilibrium is unstable."
}], "Text",
 CellChangeTimes->{{3.6936620908355303`*^9, 3.693662184327732*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Disease Extinction:", "Subsubsection",
 CellChangeTimes->{{3.693662189913943*^9, 3.69366219393875*^9}}],

Cell[TextData[{
 "As with the SIRS model we can proceed analytically here as well.  The \
characteristic polynomial can be written as: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AA", " ", "-", " ", "\[Lambda]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"KK", " ", "-", " ", "\[Lambda]"}], ")"}], "nR"], 
    RowBox[{"Det", "[", 
     RowBox[{"M", "[", 
      RowBox[{"nE", ",", "nI"}], "]"}], " ", "]"}]}], TraditionalForm]]],
 " where M[nE,nI] is given by the following"
}], "Text",
 CellChangeTimes->{{3.6936621972643576`*^9, 3.6936622587727137`*^9}, {
  3.693662384556821*^9, 3.6936623883896303`*^9}, {3.693663826562396*^9, 
  3.693663882585534*^9}, {3.6958225580622883`*^9, 3.6958225621655226`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "[", 
   RowBox[{"nEs_", ",", "nIs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nE", ",", "nI", ",", "mtrx", ",", "j", ",", "k"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"mtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"nE", "+", "nI"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"nE", "+", "nI"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"mtrx", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "j"}], "]"}], "]"}], "=", 
         RowBox[{"FF", "-", "\[Lambda]"}]}], ";", 
        RowBox[{
         RowBox[{"mtrx", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"j", "+", "1"}], ",", "j"}], "]"}], "]"}], "=", 
         "HH"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{"nE", "+", "1"}]}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"nE", "+", "nI"}]}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"mtrx", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "j"}], "]"}], "]"}], "=", 
         RowBox[{"II", "-", "\[Lambda]"}]}], ";", 
        RowBox[{
         RowBox[{"mtrx", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "j"}], "]"}], "]"}], "=", "GG"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", 
        RowBox[{"nE", "+", "1"}]}], ",", 
       RowBox[{"j", "<", 
        RowBox[{"nE", "+", "nI"}]}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"mtrx", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"j", "+", "1"}], ",", "j"}], "]"}], "]"}], "=", "JJ"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "mtrx"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6936638842235374`*^9, 3.693664113871791*^9}, {
  3.6936641786585193`*^9, 3.6936642271284122`*^9}, {3.6936642579598813`*^9, 
  3.69366426292169*^9}}],

Cell["\<\
In order for the this matrix to have an eigenvalue of 0 the constant term of \
its characteristic polynomial must be 0.  This constant term can be written \
as a function of nE and nI in the following way:\
\>", "Text",
 CellChangeTimes->{{3.693664549727888*^9, 3.693664613937433*^9}, {
  3.6958222504046907`*^9, 3.6958222680637007`*^9}, {3.6958225656857243`*^9, 
  3.6958225680378585`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", 
   RowBox[{"nE_", ",", "nI_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["FF", "nE"], 
    SuperscriptBox["II", "nI"]}], "+", 
   RowBox[{"GG", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "HH"}], ")"}], "nE"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["II", "i"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "JJ"}], ")"}], 
        RowBox[{"nI", "-", "1", "-", "i"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", 
        RowBox[{"nI", "-", "1"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.695822130814851*^9, 3.695822209407346*^9}}],

Cell["Where the letters are given by:", "Text",
 CellChangeTimes->{{3.693665842678524*^9, 3.6936658470695333`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"letters", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FF", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["nE", "\[Tau]E"]}], ")"}]}]}], ",", 
     RowBox[{"HH", "\[Rule]", " ", 
      FractionBox["nE", "\[Tau]E"]}], ",", 
     RowBox[{"II", " ", "\[Rule]", " ", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["nI", "\[Tau]I"]}], ")"}]}]}], ",", 
     RowBox[{"JJ", "\[Rule]", 
      FractionBox["nI", "\[Tau]I"]}], ",", 
     RowBox[{"GG", "\[Rule]", " ", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "d"}], ")"}], " ", "\[Beta]"}], 
       RowBox[{"b", " ", "\[Kappa]"}]]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6936658487075357`*^9, 3.6936658531691437`*^9}, {
   3.693665906147643*^9, 3.693665997674038*^9}, {3.6936660709569798`*^9, 
   3.6936660866256533`*^9}, 3.6936661735194483`*^9}],

Cell["For any nE and nI this constant term simplifies to 0.", "Text",
 CellChangeTimes->{{3.6936657829209614`*^9, 3.693665794885385*^9}, {
  3.6958223621550827`*^9, 3.6958223680834217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Numerator", "[", 
    RowBox[{"Factor", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"nE", ",", "nI"}], "]"}], "/.", "letters"}], "/.", 
      RowBox[{"\[Beta]", "\[Rule]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["nE", 
             RowBox[{"nE", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
           RowBox[{"-", "nE"}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"b", "-", "d"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["nI", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
           ")"}]}]]}]}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"nI", ",", "Integers"}], "]"}], ",", 
     RowBox[{"Element", "[", 
      RowBox[{"nE", ",", "Integers"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693666190539281*^9, 3.6936662902403193`*^9}, {
  3.693666339193218*^9, 3.693666454775688*^9}, {3.694454518116701*^9, 
  3.6944545247155128`*^9}, {3.695821493553402*^9, 3.695821512212469*^9}, {
  3.6958223288951807`*^9, 3.6958223480132737`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.693666207357115*^9, 3.6936662915507216`*^9}, {
   3.693666341221222*^9, 3.6936664554620895`*^9}, {3.695821479799615*^9, 
   3.6958215128095026`*^9}, 3.695822277727254*^9, {3.695822330706284*^9, 
   3.69582234952236*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Endemic equilibrium", "Subsubsection",
 CellChangeTimes->{{3.6958229031470256`*^9, 3.695822906498217*^9}, 
   3.714228236247718*^9}],

Cell["\<\
We can numerically evaluate the stability of the biologically valid endemic \
equilibrium (equilibrium #4) as shown for the specific parameter condition \
give by Pars.\
\>", "Text",
 CellChangeTimes->{{3.695823031595372*^9, 3.695823056858817*^9}, {
  3.695823137868451*^9, 3.69582314904309*^9}, {3.714228237799913*^9, 
  3.714228239710848*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nE", "\[Rule]", "2"}], ",", 
     RowBox[{"nI", "\[Rule]", "10"}], ",", 
     RowBox[{"nR", "\[Rule]", "5"}], ",", 
     RowBox[{"\[Tau]E", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "23"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "0.02"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6958230176505747`*^9, 3.695823028358187*^9}, 
   3.6958230605830307`*^9, 3.695823195967774*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Jmtrx", "[", 
       RowBox[{"2", ",", "10", ",", "5"}], "]"}], "/.", 
      RowBox[{"EquiSub", "[", 
       RowBox[{"2", ",", "10", ",", "20", ",", "4"}], "]"}]}], "/.", "Pars"}],
     "]"}], "]"}], "//", "Chop"}]], "Input",
 CellChangeTimes->{{3.6958230144373913`*^9, 3.695823015540454*^9}, {
   3.6958230634761963`*^9, 3.6958231153501625`*^9}, {3.6958231578625946`*^9, 
   3.695823165038005*^9}, 3.6958231973428526`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.5237058324991966`"}], ",", 
   RowBox[{
    RowBox[{"-", "1.4471366803300398`"}], "-", 
    RowBox[{"0.2825310487920606`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.4471366803300398`"}], "+", 
    RowBox[{"0.2825310487920606`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.2338965188071427`"}], "-", 
    RowBox[{"0.4932870270318538`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.2338965188071427`"}], "+", 
    RowBox[{"0.4932870270318538`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9285758546012041`"}], "-", 
    RowBox[{"0.575737079199212`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9285758546012041`"}], "+", 
    RowBox[{"0.575737079199212`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5877661045915934`"}], "-", 
    RowBox[{"0.5007077916095238`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5877661045915934`"}], "+", 
    RowBox[{"0.5007077916095238`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.24677192542042195`"}], "-", 
    RowBox[{"0.300699278008962`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.24677192542042195`"}], "+", 
    RowBox[{"0.300699278008962`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "0.21839130434782608`"}], ",", 
   RowBox[{"-", "0.21839130434782608`"}], ",", 
   RowBox[{"-", "0.21839130434782608`"}], ",", 
   RowBox[{"-", "0.21839130434782608`"}], ",", 
   RowBox[{"-", "0.21839130434782608`"}], ",", 
   RowBox[{"-", "0.09461526849412064`"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.695823099995285*^9, 3.695823117815304*^9}, {
   3.695823160850765*^9, 3.6958231675341473`*^9}, 3.6958232004980335`*^9}]
}, Closed]],

Cell["\<\
At this point the endemic equilibrium is stable with damped cycles.\
\>", "Text",
 CellChangeTimes->{{3.695823204922286*^9, 3.6958232183950567`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subsection",
 CellChangeTimes->{{3.69245714122048*^9, 3.692457144838889*^9}}],

Cell["\<\
Here we numerically integrate the system of ODEs for the particular parameter \
conditions given by Pars\
\>", "Text",
 CellChangeTimes->{{3.6924571601485205`*^9, 3.6924571973256016`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nE", "\[Rule]", "2"}], ",", 
     RowBox[{"nI", "\[Rule]", "10"}], ",", 
     RowBox[{"nR", "\[Rule]", "5"}], ",", 
     RowBox[{"\[Tau]E", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "23"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"b", "\[Rule]", "0.02"}], ",", 
     RowBox[{"tmax", "\[Rule]", "300"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689949468672686*^9, 3.6899495034481473`*^9}, {
   3.689949586763175*^9, 3.6899495917714615`*^9}, {3.6924572229842587`*^9, 
   3.692457230785074*^9}, {3.692457887365452*^9, 3.692457901514082*^9}, {
   3.692458492379407*^9, 3.692458492535407*^9}, 3.69245853055651*^9, 
   3.6958232568392553`*^9}],

Cell["\<\
For initial conditions we start the system close to the biologically valid \
endemic (equilibrium 4).\
\>", "Text",
 CellChangeTimes->{{3.692457233323279*^9, 3.6924572754884157`*^9}, {
   3.6924574511648293`*^9, 3.6924574559152384`*^9}, 3.692968248380181*^9, 
   3.6958225707170115`*^9, 3.69582332877037*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inits", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nE", ",", "nI", ",", "nR", ",", "inits", ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"inits", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inits", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "\[Equal]", " ", 
        RowBox[{"0.9", "*", 
         RowBox[{"s", "[", 
          RowBox[{"0", ",", "\[Infinity]"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"j", ",", "0"}], "]"}], "\[Equal]", " ", 
           RowBox[{"1.2", "*", 
            RowBox[{"e", "[", 
             RowBox[{"j", ",", "\[Infinity]"}], "]"}]}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"j", ",", "0"}], "]"}], "\[Equal]", "  ", 
           RowBox[{"1.2", "*", 
            RowBox[{"i", "[", 
             RowBox[{"j", ",", "\[Infinity]"}], "]"}]}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"j", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{"r", "[", 
            RowBox[{"j", ",", "\[Infinity]"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"inits", "/.", 
       RowBox[{"EquiSub", "[", 
        RowBox[{"nE", ",", "nI", ",", "nR", ",", "4"}], "]"}]}], "/.", 
      "Pars"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6924574623456526`*^9, 3.6924577016033597`*^9}, {
  3.692458506902838*^9, 3.6924585276697035`*^9}, {3.6958232333759136`*^9, 
  3.69582323383294*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsol", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ODEs", "[", " ", 
          RowBox[{
           RowBox[{"nE", "/.", "Pars"}], ",", 
           RowBox[{"nI", "/.", "Pars"}], ",", 
           RowBox[{"nR", "/.", "Pars"}]}], "]"}], "/.", "Pars"}], ",", 
        RowBox[{"Inits", "[", " ", 
         RowBox[{
          RowBox[{"nE", "/.", "Pars"}], ",", 
          RowBox[{"nI", "/.", "Pars"}], ",", 
          RowBox[{"nR", "/.", "Pars"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"Vars", "[", 
       RowBox[{
        RowBox[{"nE", "/.", "Pars"}], ",", 
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"tmax", "/.", "Pars"}]}], "}"}]}], "]"}], "//", "Flatten"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.692457715812993*^9, 3.6924578297031035`*^9}, {
   3.6924579074258933`*^9, 3.6924579242113285`*^9}, {3.692457957419201*^9, 
   3.6924579883303127`*^9}, {3.6924580281446*^9, 3.69245807743535*^9}, 
   3.692458488752799*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ssol", "[", 
   RowBox[{"0", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Tau]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"esol", "[", 
   RowBox[{"c_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", 
     RowBox[{"c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Tau]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isol", "[", 
   RowBox[{"c_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Tau]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsol", "[", 
   RowBox[{"c_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Tau]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6924578393409247`*^9, 3.6924578834760447`*^9}, {
  3.692458311931117*^9, 3.692458385647114*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ssol", "[", 
      RowBox[{"0", ",", "t"}], "]"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"esol", "[", 
        RowBox[{"c", ",", "\[Tau]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", 
         RowBox[{"nE", "/.", "Pars"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"isol", "[", 
        RowBox[{"c", ",", "\[Tau]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", 
         RowBox[{"nI", "/.", "Pars"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"rsol", "[", 
        RowBox[{"c", ",", "\[Tau]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", 
         RowBox[{"nR", "/.", "Pars"}]}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"tmax", "/.", "Pars"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Darker", "[", "Green", "]"}], ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Thick"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6924583907889285`*^9, 3.6924584830635867`*^9}, {
   3.69297930181347*^9, 3.692979311697036*^9}, {3.6958232770104094`*^9, 
   3.6958232777534523`*^9}, 3.6958237515075493`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
e42SBA==
      "]]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[1.],
      LineBox[CompressedData["
1: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
etRNhfC/EveZ8y93NF6Z6KVCoblvKnN9hIMe7xcapELWqQn798z1uslnazxM
BZevlzmY67n45EJ8xCgVWHerJA0x16tr8HnNOBXcf+/8zfz95OtvKjOzn6nw
1kiVYO6X4vos4b1fqWBzws+pF50vusrIehrfp7bG/S1zfSzpDxhzVEjkFRbo
ZK6P796x5QUqSE4Xv2hnrk9SFK/MH4yXF3E6bWjp5hNnM1g9wVvXbIkZf6nj
ZXc62Tyh703h7pdoNpbN3WvZPWHl8+b9L5jzl++VpXF7QuCbb5+Y8a196qhT
/iZPMKtuSH7KnL/HzeTBLZ4wceq8eDk6Otd2XmO7J+wr1ppm5o8i78RTgb2e
wM+2VpCZX/nSuhMnpTwh4qT5SCqaV6eYP3S/J+TGCYYz8/HLZa8L32U9YYCj
9TIzf1O/LSq+POYJ41Nau5n5Pd+0vtbD0hMyfgBZH70z68v8NRtP6BC2TdFk
js+v+UCVPT7/g/59YO63WGT2WhdPsDNySpFFq15lD73t4wk9G6UNtqPDlNbp
d8Z6gh7pX+g41q9S3s8hCwme8FBIxuAd8++nX+g1gtc9gfTw07+3zPqYGnaA
ku4JJlav9jLQ7XNrNq++6wnFvAHxBWi++2wDsnWecJESMuGMhtBxXssGT7jX
8zrUFk2xeql3he4JVQJk3tPoao6QmldtnrDI6/lHA23nvDqb3O8JMSGJvMz6
XiC8yiV11hMmp2sLBrD+ZzT/W7rE6wVDjXOjmMSE8bwU2/xmL6iryMw4gubY
bb6ButULQpaOGO1Hnw8o22nD7wV4JSlg9ieTA/bqqkJeQPqbtWEe+9uG5PrY
FQkvUDdjrbmHDrQLFb58zAsWrynZcqPtFzg0g7y84LxntVg/9muqkv8qfm8v
iBuV/9qODrj8tbb0rBccVDrw9CU6dV3bkfe+XiCr6OVQhu7gi5VQveQF/yn5
bo5AEwobNyxHesF+o59sR9GCFzZ3+93B59tGXsnB84FkTXDCxjwvaL8hHJCG
VmCd07+b7wXzj3OCE9Amkd2NPfe8gL0woDIQHZOW/FSuzAuanyW+sET/qeS7
+bPaCzLND5P50f1L20mePV6gwP50TyaeZziCtDmner2AM/qCXwpacc25cpd+
L/gzOPU2Hp2+sX0tacgLJlfknl9FW4kGFZmM4XwqXDRc0SMG43NHp72AvJPv
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
      "]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
BCHPHtd/n/wfWlFElQ==
      "]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1:eJwd2nk8lF8XAPCUSpQtlYgsKaHsS7bnIPuWfd8GYx9jiX5FUpas2dJiSSoU
kSKlCJXQhrIMQ0iFCsmWSu+Z9y+f72eeeea555577rkzhEnBlt5r16xZc4p5
zRrG33u2fxa+36Zpci9tckkypRFJra59Ful1RPNBZnKHJY3IGDh9QjD9BXGx
LMGczZ5G5IznvGZO7yOyGk8/TSXRiNzJgsWltC9E//Pt0umRNGJHoEjKj7Ql
Ii5Gbl3KVRphd9vLZjptI7Cp2u30W6ARS6/j67+l7QCzmoIA4fwBwotgVeGa
3wG3lwNI9VcHiO476bWKjrxwh/3cgkXpAFGZfeHOyb07wbtj/a2ou3i9w80S
zid8ENRxTLGxDa8ff5WlMCsA9SzXHYfnB4i+v0mKmvtF4K4rD2u30SCRrmQS
fsRZBGw/rpVnPzJIHA5mv0c6JwLJDc/cdW0GibsjWTKJCyLwmXdI9robXv80
T7KzWRQSGrJ0d4cPErpJt4VJjmLwkqX+5pe8QeIeT9eWhBRxmGXtZy/8NEg8
DuEfV3wkDuUveHiuTQ4Sz95413+aEgeVZw42V74PEr1nV8i6Rvvh98QfruiF
QWL5j2gT8yYJ4FkXJ9PBTCc0P0WEnkmQBN6SlieZwnRCX7vZQP6+JBz/1Tny
Zw+dOHKFbffHT5KQ4nfrlIs4nfBwKHqprSsFcq/lh1YP0om41+171jIfgE1T
CYlP1OhER+2uvlOxByFryXzrXis60c3tc1um+iC8G7X8PmxDJwaDq8+MjByE
TwHCa1Pt6cS3/XoyANJQfvNUXosLneAoDE76tyoNGp7LP6/40InUv/Qqux0y
UJdmse6XH53glFqbJy0tA9OGckO6gXRiZ5JJyAdXGQh0XvuknkonJHRGBYhG
GXil07uf8z86URmyYdOOXhlI51T22XCCTsgXSc5Pf5eBb/eEhWaj6IT636Md
hQKyEK7mOlZwik40SebVRijKwrWdG0c8TtOJw45NRWamsnDyA5XYGUcnTOtY
I1ejZIHfrI6DlIjj+yRN6s2RhfbNFRE/z9IJWx4b08oKWVD9niZ5LJlOuIZc
EXWly0JuQFyQUxqdoEoqdDaoyUHauyXBpCw6Mays/0/ASg5KFZ5OVWbj/Q87
HjzpLwcDaiGhbTk4HpdTqZqX5ODwUcXa3lw6cckv+1HhHTnYKuUR9vICnWCJ
KJlafSEHl07m/bh3kU58Sn9l8GRRDh6ef6/gfplOWOd9iNzNLg+vb+7+K5pH
J1pK50pixOSBPYUzdRAtW7O+94O6PBzzdhlPyKcTRU2868FaHl4KBbLuLaAT
7K8lFYoC5EFvsmntQ3Q0TdNzzRl5kPr6oYsoxPn7ZJHlflkeHlmaRtWjHee8
mpuq5UHFJG3D/it0om01claoXR5G1+05moJWZkvZHTsiD73ph16Nokt2FJqN
LsmDrQ2FU6qITvDsqY7W4lCArO8mhv7o0zLPKq7uVQDzusyT+egf6n2DTJoK
cIT7V10L2t1wipVkowB2rsRfOvqNzd9DLYEKcOC3kO1XtDqJ008kTgGyDRw7
vqPLKaIXT+cpgGlJqcc4mu+E0ouxuwogHP5c9C36bKLhonaHAnRxUXkr0UvZ
zmLXRhXA6Y2OfiyaXBRsve6XAox1yz00QL+vOH3Gk1MRag6L/MeM1nl4/u7T
fYrQ2MCSVYPju/u8bFSUUITvfXR2B7RQ9yPOOFtFkDxwfuUHxuvc8BtiPEgR
fO3E3WPQq1OjlMPxipA6m2rEhA5cmi+4nq8IyVkPn0Vi/AfXsbxmrlEEo77r
tDGcrwe7Dko+H1OExwft/+XifO7dr+UotqII1mKNe0dw/s8rWifFcymBeBkH
ryA61Oz4F11Qgo2u/9KPYb6MOKZtL7FTgu7cMenzmE/mPkW6G4KVwN5HrasE
803qVOu11gIlEBjsM76J+Xg5lda9t1YJeOPc4TLm66ZL35gSXymBVedEwCnM
58/V3O76v5Vgr2tRoVQGnbj60XVXm70y5Nv8J7ohBdfvbIixOFUZ4mRdQ4uT
6MTJP3HHzyYqw+tmjTAFXD/O28r7De7j9fdtOw7F04nt+ks57VtV4HWPWNbL
k3Rirs14ec8BFTjFo9jxA9fva6Mip1N6KuDq73tmM67vODNDEeX/VGCeOtaz
OxKvt8mruj6sAlLleWeaKJgffTPca5ZVIGfgg0ka1o+bDocjnLgOQRK78xFz
f8wnl+/q3IcPgaFKqOc9b7y/F9ERc/MQkIXGqatOdKLsc/aBwZZDkJ2QVBfp
gJ/nO5GhRD8E1VfS/n22pROqgZl239lVoeZ1+Z9SC7w+7OO4Y7gqmGy6euq+
Hl5/OvGfIqEGlzi2ju+Sxs9jppMy7dXg4gWRorVSdEItQab1W4gacLme2zSC
9XYuiZZ67boaDNtesjwtgtdnSvJxsarDmWPdb322YX4XvVX49l4dGi92ybz9
NUj8bNjhX+yvCSq1x5/3N2C9t5C5ZHJaE3qLnS8crB8k/nwyaFu8pAnPt/gZ
nLo/SDCzH99r3K4JQaM/buyoGiS2u9LHfu4jwKg89jNv0SChslrkpPuJALNm
O9njsYMEsfv83vkqgI8lTHlO2oNEvJsg7wUJbcja5ZlxtnmA0PR62e6nrA0y
1invFBoGiEXfYyfUD2vDPpumJ2MPBgjf0O7hURdtWPstfkHnzgBhFJ9wQypT
G/Rtg04LXhkg2Mun5VqWtCF510ixQfQAcXGx0fT7Mx3IH9Gt3qw+QBz5HfDv
SZcO9GZQ7PhUBohNa3ZWZw3rwLLHR3cphQHi+KYwHpVlHRgbmZ5ykRogXHbt
GzwteRjmu7yHlncNECLa53x5sw5D5z2jYwL/aERFmtsZHTddOHZB3yzzBY1w
jF1nNxCgC2P0OwuOz2gEy9FSiZBjuuCp9O6+RDON8HSe6SrM1AW2w/J19Hoa
wScZI7TyVBe+rmp/SamkEWfbChvuiOsB+W9Hwu4LNELpsXamvqIe/Ii0qzHP
oRHjVZ+9hrX0QM4m+HJCJo0gLhzcvNlJD57F/LjNkkojFr0bHX3S9MA3lavF
NZZGeK0bXhKY04M6XdlR+yAawb0U+7JmVQ/OLXRPL/nTiKYpsSvGbPpwv4lf
uNCXRvB3B+n9t0cffItN16/xohHdRX9z3tvqg2hvhSGfE404lXPVN8BTH468
fr80h/3UwbO66mup+hC38eG3blvsv4LTPkon6cPHj34PyrD/Ak0BuZRH+sB8
PutghRGNmJZtXi/Spg8qe3T9nxjQiHwxb9qD9/pQYf5n3YAe9lebb5/6/F0f
muj89mI6NKJyUP2tlpAByCYF3OVRx+f7zzlwOc4AWAsc1tpJ04jho2M37mcY
wAhr2vlfB2hEUajvh/B8A7gdzpJXLEUj9gSGW/64ZwD5f2/83ihBI6TcUlWm
xgwg8Dfv3G4xfB4n7tCyaQOoaQv7tyBKI+7YXywnrxjAJxJ7RLcIjVC0vC74
kcsQDpr0XygUohGauo+Z6WAI6lz7Tp3ZRSPWaGtrXjYxBGqq7o1UfhrRotkW
aW9vCC5vykXy+WiEvsr7qffBhlBzKpzvDS+NYFV03JN9whCMXCfTZ3fQiFey
Iy4WiYYwQ+8w34k+Ivmt83WhITRdWL4VvQ3nSzyUNfWWIfBq2REPeWjE+z3L
Okb3DYHvmD7P7600wl6Qua71tSGMBJ0Ly+SmER5cuwqe/DGEqbf86SycOH72
4t5oFiOIWif14CgHjfjMKs6pzmME01M/10yy0wh/ZoUzDySNYFfzOfroFowP
U/3jCGUjqBSzJfugp/8Siwo6RtC5/+Gfuc00InTJ2K/a0QhKPtVr7EIrzHcV
B5ON4HfmyNBDNsy/WTv6gVAjcDkiEeGCfvB9aNu3aCNo+vFhzUb0iSlP81tJ
RsCnb3jsPivG88vkWd/zRkASruwNQK8ZD27Ze9UIUi1st+9Dt4ws/B6vMIJz
ZUmyE5toRNzQCcVrD4zAY+mcSBVab4Ap2OOZESyyV388gWbpSyzb3WkEuk0K
wWbojndbxoYG8fnB58ledFpnNn/+FyOQyeR6w4w+8nqnjeNPIzjx8kjOBAvG
u+NKOu8/I3BUVGPrRr9vFWvrZTWGGJ4vks3o3KflTOe3G0NOpf9MLdq+SVbN
SsQY9AzpZnfQfA114VwHjUFbwlKHYfpDjcq3h4xB8cLYc8b1hfeffknTNYY3
PdfeNqHd7xkKm1gYQ51khUMXWuTOW0dWF2MoGuZy+YIer7DJafM1hvVX5rrX
4vOW3hx8nRBuDANdsjWiaCGP01e1Y43huqVyqCn6Iu/+o6tpxiCVvicqGs3V
+dag/rIxMK+8e3EPnZwYsSui1Bia2YSMZ9FrCYFZ2RpjWFL5+FsO431i8enT
703GoLa09PYEOtCbK8B7wBjU/8Y83I3zN77rgabwF2MQlimrP452ee/KPfTT
GKIoqfcH0WY6FQ+tt5iAdWZdeBXmR+uKZRonnwlsPJosJIL5RNz95f5qrwlU
8bLnXUbLCOuzHAYTUFR78iYf87Gs//vgPxMTaExUCdmL+SqckVP1yMEEMqRX
amrR3P9GbeXDTMBPanpuHPN7gR51Q6QEr1+RXY3D9UDJEf1v+K4J1s8cD1Vc
L5+NO0wuPzGBwMJ9LAvo/vod81w0Exj+JTH733YaUX/xrjbTZlNYsLzwvGkn
jZA74rC9gdcUtJPGvxTi+i3fuGbqmJgpGDDJT8bi+s6PMM2c1TSFL2QfG1sB
GhFjPfHhQ4gppPyzISsL04jDnILRjX2mILfwovvNfhrx+MWzI8fHTUEvV+nB
PNYfxZiAPUo/TEGniadUEOvT3ukHL2+zmsH4j63+Jw/SiE2vrPgKNMwgNsZ5
NUCeRrxJTKo7cc0Mnhhbs//UoBFOBtw/XKvMIEZuIFqNoBETLHkS2o/MIMJn
7HYC4HwmVxSwvDODa79MhRj1Uyn17Znza81Bl+LGHIv19krGtiNVHuaQPz93
/JYVrs9XR8J/cByBnvwDv6kBmB899M1ib47AJ4kNXcqFNML4dn798rsjkJKu
E/vyCo3YHO/s+4p2BDwUs9jc8HycrkB/GvbpCAgesUmMv04jsrMHj7f8OQJj
Dl1Mb29hvCwGJtwkLeC+gMEu4zoacft137PLZy0g7ov7retvcb5uXAilpFuA
6h+DaqEuzIdoOyHtHAswz6si5XXTiLtSfScmr1iAk8Sra6k9NOJ+Sq+cSp0F
aNtW33UZpBGNhj1FPZ8swOd92Ne7n2lE5/PuKE4dS1DZa//1528a8W2leIlk
aAmRFU4GFn+xPsiEhdaaW8JFS6al8lUaoXV5q6+jsyVQXxXtd2AaIO5SrK2u
H7WEmYic3VkbBojzO3r3q5RZwtw7WmIkJ75uUnI9udISzu0/d6qEa4B4Exux
e6jGEoRW79l3cw8QG75t33a62RIIDrd0oW0DxLEmuzWvBiyBjXjinrtzgHD0
o/W6bbGCZwKO8WPCA0RE4U2Lu1utQPCMXC1dZIDIevffK2Y+K1Cxtgt6JzpA
vNTga7m51wpOHh71vC82QKhzO93+SVjBZmHFSYv9A4S9vqS4np4VhAdlDklL
DBBHo34XXzSxgu1RRodYJQeIys95FzUcrOBSZsfOGuxndj+in0kMtQLXY22i
dGm832zFKu2YFfhXdy7ly+D9xKL/k4qxgjYOsZ2OsgNExjmB4K4UKwjmElZu
lxsg1nq5OvLfsAKvbtq144oDhOClgz1B5VbwtHpHoYDSAKH6ZtW8qdoK6H77
3z9Gh6lc0fVutAKSrcy3GeUBYnzziExVnxV4DL3LFVcdIJL1rrqeH7IC6Qn3
49fRsqdIqSc+WgEt6SCbgNoAcfLn+Bf9GSsY3jYqw4z9254DJdsOLljB75P3
noeiX5J9dHh+W0GLIG3DMJp3YLJwZIM1PA8rSLulMUA0bi1/1brZGsSNxLrZ
NAcIb9PAlQpua8hXvNXsh77bNG3zn6A1NFtqXOUnBgiHlaozbnus4fAT7cxg
9BqFkGpdCWt4t3anVBPatPTnZm4la6i8ft/TDgaI+ZEa1WU1a5jrdWAqRF/m
i/Ad1rKGivNpxqPoibTlp7dMrcFGR3rCRWuASH/x8EeGlTVkBU6oXUArMp3Y
HelgDTvcpzVfo0+H/z2u420Nh26+t5HWHiDEKxvL9gdYg4nzgwAn9NsvMb0c
IdZwX65GIQ4dIazFvBhhDZcMXlffRO9yWitHj7KG8Ife4y/RLTlP3VpOW0PU
tZHXU2i/N3FpZWetgeN4XPAGnQGCk0XvUXq6NUyxV70URN/X2jgZnmMN16aM
xuXRzifatjtdtoagRYeHuuh1tUmHtYqsgY97xtgafWvaKHRfCcZj1rjIDX1E
fHPRlgpr8Hk7ct8Hvejx+vXPamsQm5g/F4guyEv/TauzBp7P+2Uo6MM95vub
Gqxhm7LYJcbrU+xcdiVPcb4GP3cw3p9h0B2X2m4NxgL8Lxj3Vz6dfTf0rTXU
1uhnMj5/+JH1iH2PNdzo+S2ph45b2MZODFoDd2jrJQW0hHSfmtioNUyfUBra
je7yvejH9sUaZD8NLG9EHyt2uPDjmzW8vaI98w3jI0jne943Zw0NBX9a3qCf
baPPNSzj+zsvRNxGB5gXCF1ftYZdZjObk9DcSa5mycw2IPwyP8kD/aBldxSV
1QaU/sbOKKFd/4zctOW0gYMCIVqb0OuVivvUt9vAsKf66X6cb8ube+Q3idhA
k8GdwSD08tgn95l9NnDZ/u8vefSVXaXpPQds4HRoMPcS5tO3c/unrh6ygUri
PRGOTow4eFXVwgZaPo/+McL8PLtlTf4VOxsQW+NpN4f5nXy9K5fZ1QYmytv1
ctHp3eGpb/xtgIOzZeEdro/zBx9FkuJs4E3HFpl9uH5yn6eGvki2Ab5d+5vu
4fq76OwaJJVpA18lmdk10PnJTJ6LBTZwpLZ/URfX67XP+mbJdTYQ+ik+RxbP
U9ejdxrONNjAyXL3m9dxvZfwfNWxfmYDljucb/Kgb2mnHxLssoE+1XVnvmL9
qC58v+fulA38klDWPyo/QDyx9fhNE7CFyC2n/FcPDBBN3+UWNffYgslDBR4d
dEsc849rEragnJrLHo/1rPVu6ecgZVvoO5vEyYT17jX7dBeThS1QuK3XD+wb
IAZbj5ftj7OFt6WXOrZhvV1SyrH5b8oWnn963PkF63e4rodH06wtcJ3Yu3sS
6/us1cGgjUu2oNq2+mCCA9cvtS3u/Do7WFSc/Tq2ZYAYuPXnXvUuO6CLCW59
tmmAeCzozT1lZgd7zql8IXD/iN2g9Nbxnh3MZDpPW8zQCLbePgP1KHsY1fqb
E9WO/cvk+Y07TttDrvcvfbc2GsH7x6r1R6I9ZASobtXG8+NekU6d0mx7eLCB
jYXlOZ6fKG2a3OX2oPPrFHNuE40I3/BQYYJmD8s8xkxPcD+lK10WylF2gOKC
702+JTRizND+A0XDARJet+fb36ARk87bCw11HID5bLmcIe7Pi6ez+P+ZOYDc
9aeFUsU0gvNt8nZ/sgNQKkSW/xTQCF2fE5vhvAOob8869+I8nr8uOC9/nXOA
Xa1hL4US8HoWyTjdXw4Q6Xy2kz8ezwPHfnFc+ecA/DsG9HnjsL9xyN1nudkR
+kSaC7edxv6Hr9P2gZgjXOL38RE5if14gU5tnL0j3K/9/TUxAs8b7Nxaw66O
8EesgDn/KPYTJ0deKXs7gsH6tjfV4TTCwi16fCrEEexn98SPhWL/JlS31SLF
EcKyc3rtg7G/uyYRKtDoCGXJF4fz8PxqwPPrb8QzR8hf+ZLyyodG3Ip7kdTZ
4Qi+5LJd/8g0Isjb6+qZPke4uMV2xs+bRszvLeycnHWEB4uxYbYk7J9ucUnf
F3WC2RsHbdOc8fzMN1LPIeEE/If89w/h+bc1uVLPT8YJ4uN0/h1EJwUYu+7S
cIIAI5b6fgeMz4H4tNO2TmBQzF5w2I5GCN5Z/mqW5ATmlis7Y/A8zCr2QEL9
nBOo1PZq/LLA+bgU6bf/vBMcPKordxT95szi53VXnaCXxetc6BEacdJufvTB
Aydwl8yVOmOG57VX94RKGp0gd/TLZza0rVaYW/YzJxijTkbkmuJ5XHKOHtTp
BH7hjbzVJng+Xp3pE5lwAt0BO/c/eP7uCKvazjntBKyi9S+y0fcnKDZ/fzpB
6n96zAfQ6d3fu/v+OQHzB58/XoZ4Piv5+jp1hzOERFz4NKVPIyT4yzcfF3CG
9h08PzPQ2zP8jX1EnSFs5d97FfT0f5NtWtLOYJlL2paO5/lC0y9PF/WcwaPn
bpiZLvaXLSVrx02c4es077Z16AhlslaXpTOoMzfEPzyM5wfhT43lrs7Aq9va
JYlWzb3+96KXM+xcW1X+BfvZvWxe6gn+ztAxRLe4gV6dH3voHuEM+3g41uxF
T/kVL5tGOYPBrvQNk9o0onfYQ1nttDP49nP33kZXto3UbEt3BuuBV6/V0a75
w1UdN9AJvcxULRphxFU4XVfuDBr58ypaaKUElwM3qp2B89b+Azxodir9VkyD
M+RwVB15gv32ynjeZOBTZ1B4HhJ9Af3ZwUncsd0ZDKdMvEPQjToDNxR6nCH3
Y4KHBPrWg0vjwoPOINFIhG1C5x5wEOUYdYbB0BjVKeznTxfzkv58doaigaLa
V2jKjv6iyW/O8OrSv7E7aMfUCx9653A+4jmac9F6THaCz5adYSJB0ewkWuBr
T14hswvIcosFW6K9Gm6UsrK5QOKfTWEa6IpzR+9FcLmAh/UePwn0Tw/dJ2M7
XEB1p735TrSqwraXZoIuoD5kKsqKjt3wqbd+jwt8U8wb+6NJI9r6a8b2SrrA
yJW55B9ojvK46SxZF1BSX9w5gbaNtl5ZVXYBy5XtaSPoAvM9GwI0XSBVf3R0
AD0uPM/Vd9gFuvUqtvWhpeafCugYuwDPbTnRHnRYa/b+KgsXuGKzcRPD9Rc9
FfntXYAKEi960WsD5LUSXfH9OZedGfcz1Fhn+tPLBVx1spo/oDM43tm7BbiA
YVzQ/Gd032ix18sQF0i3k1qYQQvWhFKVj7nA20OLzStocoJ21LWTLnCnrMxy
I473tj33WY54FwjMNi3Zhp6XGMs+keICm1bGH4uh1f9WX/mS6QKl3tbnldFn
3saWW110gSdtXyWM0R1XLeqeFLpgvWM/7o7mChd+KnnDBTYHqcdEou31fry5
UO4CP18uKWWgv0xlfA5+4AJx33feaUUfbHCfG2x0gbHXp/3H0RHnZFb1n7sA
/1JU+zrMF2aFzm1C3S4QbW/ko4823lAknNrvArck5YsC0Fn9wQeWh12g5Zdo
SCZaOJpDt/OrC7B7rH0zivY1/3BEfQ7j6UOy2oz5fEe4yrlsGe+vU+WpgtZs
NQs/td4Viq3nd5xHx18UPPWNzRVuL7nWPke/8p9Osed2hcWbWZ1LaEeO9Gsy
u13BWiUj2B3XU6T96+4RFVcI/H1yUhvXY6NEwbAJ4QrH4yNYY9Ab/gZOPdB1
hZ9HHqc8Rudc3bw209IVHGrWX1XD9X5nylhWK9AVPt4NKzPE+jAV1XHu6hVX
ELnxofMq1peK1vMVMzdcYeT7htpZNIXTo12jwhU26mVVA55vf1xbWjvwwBWS
IzzGP6KXO/ZEcHe7gu32B8+UsL5t2BnjfIbZDf52KHOxYb0UqZXf7+3nBt7K
sm8t8Tw8vrqqey/YDW78egsN6BKDDhJThBs0f0gyE7emEfvp7vkFp93gePHZ
g2ts8Ly6Lp2jN88Nrr45nHXfFuNnMbGg98YN2sxUjqo6Yj5FmHnk7HQHdvOP
lDMeNOJdgZRh/C53ePzr3Ycf6F/PWGUjdrvDxOP/gtxx/9Hd+mKNvZg73D+h
3a3hSSOGqogifll3iBp7FvjLi0ZsmZT5UGzgDkal0odDcL8LctrqUh3pDkxW
tAlz3A+zT/84XHzcHQ4F+xo8Rj+8+VYqOxrf/4rJX5xKI9Yvp/wJP+MOQq0v
Jv6hC3KY81XOucP0zs7kctxfX79eGHhS4g4R6/3Ff+J+fAD67d/0uMN6Mw45
+SgasSZXs3S13x2ob/UF8tDvv15fOEh3hw3938lro2lE1IWQrHNj7vCSZYHt
LbpjmvXVkRl38KjicnSPwfVWoEG8Y/GAnXpZM+7YH6j+vJa2brMH+KeyXmtA
bzFkpctzeMAGrc70nWdoRM1877GcbR4QxPF041v0OhPqXRsRD4iYOmMsg/1H
0UqxWL+aBzh8covqSMT+6MimcBbCA2R+mPfuPEsj9EuCW1S0PeC5+T8jX/S0
hbrbJQMPsP3sE702iUZo3Oy56GjjATfOZnVLJuP+/U/tS7K9B0y3H3sXhh63
LlZ85OQBe6XkxuvRqWuCu/lJHiC9TUVaL4VGDNixbB6ieAAHN03XIhX3l9sU
xy2hHnBN+E9BJjp2XU+ZxlEPuGlOWelEi1dd1S084QEZC+WPTNJwfW9Qi3E7
6wFtR2OMVNJpxNbaoLnRqx5Qxx/VPXwO62OaCR/9ugcIl6QPsGXQiMPektq9
pR6Q7Hj8tzI6YttkZsdtD5jl3ZuQhu4/6iV776EHLM+cqj6QievBVMfh9mMP
8FMvD7NCs+4ViS194gFSV54bH0Or9X7ozHuOlm9Xe4IuVHKixnV5QGPHGLd2
Fo2oY1e9ePK9B/AXDBx3R3d+5m061ucBrbXXF6PRTBd6OYKGPKArdn7/fTRf
cK2yzwjGZ6B0tBMtp5/j5vHRA3YIqN+eQnstWVTZTHoAhe94DH82jYh+K9Nn
/s0DemSG4uXQuaUc/wxnPODOZPYVA/QLu9dmmgse8GCFsjkUPSJdEaGy7AH9
lSZu8ejljSmFcr89wLlh9tkFtMQDg+m9TCQ4MGvd/hCtk7FvuzAzCSTnf/q1
o519N2jybySB80Xd3f3ocPjkvY2VBPsoYZOf0Gm8z9I4tpDg24bStjl0yWxx
7SZOEnDOb2pYRTe2xQ6t20qChdbnrZtycH8pcl+/uo0ETFzMn7eiZ48RB5Z5
SZDrOc0ngN5kIWgzx0+CHUcqvcXQIvv/Rn0TJMGUT1CrFFqViX79szAJrC7Y
aMijrWj1r0b2kGBdXsBLFXRg9aX5gX0kMDRoDNFAxyUd29UjQYJky/syWugC
D7vDbw+QQCboMcth9P1DSoHtMiS4anxoRRf9lmtbzlN5EuhcPb9eHz0x+fNR
gxIJTgqrSjK8pqX7Y90hEjyKORegh955uZrtrjoJXINXWxn3kwvNkK8gSNB1
bUZDG21kFOxUok2CE50vOzXRniJmZ4p0SdBc9jtGFR21IlV+2YAEScOJJoro
nG62dznGJND0G1KWRt++NbWSbkaCS33F2uLo1tPtIkkW+Dwm0UFC6GHHMqMz
1iTonuJ6uAO9JJcYGm1Hgqie9XvZ0Zxs5MuRjiRwk16tWYfWeiQ6FeBOAvLj
DLVvOD87zE/x2XmSoLqM89gH9PcxupE2mQQFjZWjXehLrLnlvIEk6NBq1axB
BxfODa4LJkFI8lf562hdOfPNMyEkeHAy3CEb/cOBJeh5JM6n0rVDwYx8/O5V
cOc4CTxHtBad0AWxza/zokmgsVbpiz7a8Obxg6FnSHD2OKe/APrq8rcZwXP4
fO8lOJ5g/kemGgqxZpHgYg9X8g20qVDJkYUcElR+kdVKQeOpsPrlZRL8ZeXw
tUZbXOgKPVZCArltFjVDuD73SR685nmTBOJUF6lG9N/G5HdmFTheLfuJAvTN
zzoKYndJUB/3QNYJzaR0f6GrgQSqnIEHXmN96Gvn3tvQRAJ1v5DJUvRtl2Db
sqckGGMr/RmLdogXrzvZToIX1zoX5dHV7y8fk+whwaGR4t5zWI88wmJ+x30j
gXWwzB5xrFfKG+mS1Bm8/85wm2WsZ1vyVJyd5kiwvU1t8gX6YcuPx7LLJFg2
XtLwRnNxe50cXucJFsbLTy9iPWy+Y8Ckwu8JsuuY08axvh4OO3CRJOgJbZ9r
6krQbYrc0mnCnhD06KK2L7qzftB5bJ8niN3OOz2J9Xv4GeVBqoIn6CoITI5j
fV/pzwkeNfWE6zuyZJvxvKrANDqUfMoTVCkvbwrg/lJq8V/90CdP8C05YEGL
pBHU3F6J7glPGLDkLE5CqwzK57V+9QT2atPBQ+gOr+kTVT88we7zhS2X8bz6
LdJTI/avJzzJlS10wP1RrtC0ac82L7C3Znvdi/tn45Rwa8BhL7iuMnDqfRCN
SJSOUXLX94KfBqHTcegj4fQSayMvSNOTi1BEj/7NTdQ44gU6lElabiD2d1yb
DTmcvcAyLZHPKQDXm/Liy7thXtB0LLB1Cvf7njMdXb+KvcCk/NqANPYDJktV
ZQdKvID70Y/NI9gvtPifj/G46QWKOQ8yMtCVFu4H2qu84Fmwxrk57C/O7l48
e/GxF7Qsj2XWY/+h+kgYlHu9gPNdxYKTG/ZfBzfuCKB5gc1oPp0Lva/42/dC
uheUnOCSaHOlETxJdXkbPnqBRGTPX0X0d1vTpZ4ZL1iKGr+93QX347ljleGb
vGHfSYOD37H/2U52jS/b7A17csXZb6FTaTrOdA5vOLwo7OOD/q+JnfXwdm/w
8pg7+xHPz5bp1723inoDixq9dNQe+xWJzl131b1h55TghkXsr/w99qXMBHuD
ateuujjszwozkv15wrwhtfU2YYXuevLd8FCEN3SwpluJoFUEa1jORHlDxIkF
wRY8f28chITtSd7QPUQ5woK+bu0Yq1HsDc5Fzieq8Lzdf6bBnXTDG/ry2L4m
oNnuCUFimTc8+N351RUdyvVltbMS3x/pU8SJ1noTFuX1yBvIWmv6j5tjPuqn
Raa89wbenv1V/ng+546ctb3T5w2hxr/VjdG6JVZKPQPeYMn1w1kKXcHMtyA4
6g0aXHctZ7EfPdFcEnr3uzc8vNzBF4OunN1k2TfrDRkF9ape6LHdQbJ/fnqD
kkX6N0O00Un5Wd0Vb8hm27F+B5pXrSmItoEME62y6x/g+d/EX9R0dRMZvOyM
q66iYy4lSIluIUPKra7JFPTnJZOvgVvJEDV/jIOE5tt3pyNzOxlUM1/9MkWb
2m69dX8nGTS174epomtqaL5rhMiw64wOzzb0xEd1AzFRMjTfS1Zdh+bfWrTP
aC8ZJp8dmPlhjOfZEPLnbCkynBJ1ZupCWxz86bnvEBlk3N43nkd3fHiza7s6
Gcx+S0gnobUzb/UwE2QQD8jkjTZm/L7soT92mAzRxTY2ZHTFDY01Xfr4uv2O
Mie0mN3Oh0+MyLDYcCfUAr29vlOi4AgZGhoKgzTR5wIqPqZYkSEmIjdfEc0i
cDb/uC0Z2KXNtA6gT73xtPFzIMPSencnMfSvGILd3pkMz3eSpwTQobL8L/Tc
yLAhaeX7dvTU2GKMIokMeqF13pxoum7lD25fMsxJbb3DjLZZSrrFFECGY2qf
Y//heeNNmbfnbBAZDmgata6g9Ry1dn2gkqHQiha1iH7CJtDzOowM9pcP3JhD
qzQspz2OwHhsH9GcQd+hvNcr/48M6/6uN/yG3i9059+lKDIUtLS1TKKLu1Ie
nI0hA8XvevkXNP8Zn5DI02Ro/8mz7jM6R0FHghxPBmav3LZx9ObPgh+tz5Ih
8PH13x/R8RdW8nRS8PP/PcpjeNWg11ounQx80vZlDEesVG8RzsTPN1sQYrx/
pjytlSOHDGRXjvWf0L4ufjGruWS4SBKxZnzeKLuuyvdLmH/Ot7ZMoB2bhH4M
5pOhwlxUdgrdHfLnZscVMihpbGpkjMdYtJ/0sJgM5xYS7jHG++z9Pf6yG2So
krzM+ROtnnDufW4ZGcZMr79nxKtWOSAtvpwM9Z4b/zHieXBSTy+8kgwt4WLn
GPEuvSzyj1RNhuSz7nGM+RAyWa2zqCFDUQnf8Cb0xb80KtSRIbO3No8DzVVV
u1+6ngzTu3Meb0Mnu2eOCTSQQTt5B+xCr+UOytvcRAZBgWIxUfR8+J4tU8/J
cG3AmkcOHbR3TWt/Gxn8ebR2qaI/9w2efPGSDI2Xys9oo/tUs2evd+Hzhw4F
WaOPfKPczH5PhneVxjMu6LYCI9LpPjJwkj1f+6Dr16x97zZEhgs7R/Oj0HJ3
h1LNRsgQ+m8mNRFd7vlQV+MjGcJlV3qz0Pmt1Dq+ScyX0JKjt9AxqR8u98yT
QSK24cUQuiRQp37dMhkU/o7mf0O/Mimlyf4mQ67Ghfe/0bxbgnnTmXygwcTI
hx/X79201fN67D7waWvDsiu6P4hUG87lA2PF1S1U9Kpp6/tiHh9wE3f8fBpt
zJ6+9R+fD8CFKqUy9Hi6QGbdPh+43hvzYRHNGhx755OED7D8qXdknLdlzT+9
3XrQB8J/nt4nhD7JcZudquADol/Mqo3QOzLUU8W1fKA7iSXsGqO+ZTolXnL0
AaUHg0UkrJfUkCclL1x84NT9o3Un0LkWoq0L7j4gqP+O4zz6I9dXZksfH6AX
xke3oaOyjp9mDfeBSyyaUnJYn6uyL0WfSPMB8aW0BQ6s3zy5fWEuTT5wh3+v
+XcLrAfL9wJtnvqA6wdnYMX94atjhrdpqw9QXw4b7UO37Da003jlAxLJ4mUe
aOrNelWBfh8IuZnt34d++biAaWjGB541phq14v5z+qPnOefdvnBd47lLuQ2e
P3XhrLWIL0hV8rW2ox3KdsWaiPlCZBS/1ATj+4SgnlB1SV8YXPf4+x7c74YX
9Wx3KfvCSLi+TCH6EKuEAN3MF/x6S9ees8PzhszsLaeTvqDQeCnPC/fPneZG
FYdjfcGMU7HsFFo76PrtA3G+0OTlk5ePzr5pf+dfki+k3uiRf49WEmmuvXYe
X+/z4NfG/Thqa1bT1wpf0NTfJM/rRCNuyH5rfl/lC/lmPe5y6Dfmek8b7uLr
/jaBJujdqSvPzz3wBWflqh2n0C3Mni/ln/nCkee7az6hNy7K954Y9AXD3cv5
N51xfDzpfV7DvtDJNevejLaXm+g3HfUF8zrar370LUr+4O4vvmDtqFS2EfsJ
ky/Mo0/n8P31a7+QXBjfb/V8ZWP1g12CP7M5sf94tCj9fX6zHxgcjA4WQ4/z
JE8PcfjBn/PiO1XRihaaP6q2+UFLkEwPCd3fXrJoJewHT5N2j1ejBR9FMuWr
+EHMcBufHvY78xsd/Z6p+cH2lTAJB3SHtXrXN00/SH276VcAOnJ6zVUNXT+w
9zvUlYHuFE6GDxZ+kMPqSOpDl1ACyzba+EFiz7zrBDr6kRmnjL0f6Ivz8v5C
S9hsHTnl6gcXj95t3OlOI86czY8RCfADYxGT93Zox56TX4wofnCyUKuCjJYR
8TAPC/ED06fymkfR9Ediu59F+oHEjrb0TLTSTGWjd5wfjJ8pGm5Fb1bP3Jue
6AfvJO/GvkOPnQ1Lv5/sB/3BtUMf0OdEVFw3ZvrBYZrhkyX0hE3z37ICP9Bz
MxTdg/1gY/E1764iP9A6djHxIPr8TPzrX9f8YO6G1TUVtHaSUYHRLT/YI8rN
ZILm7ZVaH3Ybzc+kY4OeFuEIyrvjB8dSDqm7ovMev1P/dt8PzCyVrIPRoZvu
X+ep9wM3s6+hkWgD24ubNRr84NOpZoMY9PyMMz3tqR/40kN3pqM71InD91v9
oHJUj+c8+mqScMVwux8od2xrzUObiX4+Id3pBzUO+WZl6D3Uto927/yg5JaD
WCV65fEt41O9fvA3lrh3D925Ke1eGc0PbvU6LT9Al9oG83fR/YDMWjvfgD55
zeLMrw9+MHnSoqwFbT0r/1X4ox98O6+89QV6TfJyfegkzr/cCvtbdG/vgEje
Nz9QOPHxSjf6tmhD8tMZPwj/Lj3Rg46jXpn7OucHvVOfvvSjHRtiHXkW/YC9
h+3KIFqG1atF/Re+vqVsyzB6g52ehPcfP5habJIfQdOviWel/cP4kdO5xtD3
ZllXatf6Q01QfulH9Jsn3mpl6/1hY+L46Dh6Kr0p6jKLPyQemx36hF7vyt+Y
yuYPhRm0vM9ooQMR/06y+0OtwEP+L2j1P50QwuUPhyhlLgzbvZQ87cnjD9md
TR4Mh15OeGqzwx8OZPOLM5zuN8pswOcPoczddxj3u6Wirqcq4A+vQv/+Znze
840XEqWE/OGGVN0mhkd6f7QJivqD7yneAcbz/rlhwsq11x9iHqsGMcbDe7TU
eN1+f3gSeegpY7zyh9emLUj6QxNTKp0RD7OtLm++HPSH47HJD+lo/7E6jgFZ
f2CfdnccQCdUc1u8UvCHy5pqT/oY+XEqKKtR2R+0/XUn3qMfm7e9u6PqD/t8
y3u60P2CotuuaeDzSF9KfMPIt+/RtucBX69TXe1AczT0X0jU8YeExUeHGPOt
55TOF2joD9eObVnzBE2SmHRyNfGH6zcVUxjnp+hfOgVHzP2hjfJ9sBZdc+HX
bkUbfwjoan9TjhZ+7yW26u4Pq/0SzIz8Vb/2hDzr6Q9pJRVPGfltH8pXNkbG
+WSZMjrLiC9np8SLQH9g5UqsPs6Il4maTMYxf8gc6v3kzIjXrtyQ0ydwPn83
T1oz4vV19m74SX94Vq9fx1iP/kklig5xOB5DprtqjPE+51ITyfCHtRl8B3cw
xpsTGMWTjfFVlE3awhiv14uGDbn+kGf2uGodY7xro+Frnj/k5N/1nsH6UKM5
oVtT6g//Po4de8aoH3WNR/Se+IPj4K1ob7R97dXlyBZ/mPP/XsuoXyL34opu
PvcHFeZHDw0Z7680mt38yh/sIWHPAXT/jd5z7/r9YXKYnvAD66FQzvQb9zl/
6K69NUllnD+pgqYnxAKw33tXY4r1+T8K00KFeAD4r5vbw6jn2oHj+cOSAVAY
v426F/3e59Y3LbkAqBg0v7yK+8Oyq1IqCxEAruffWN5Ga5mavTxvHwBqsnx3
mdHd+08a3kkJAFVFLuUruD+N3KR1lKcHwFNfs4ok9PR+RZPSzADY+LKNKxzN
KvHNrPBCALTwH71tgNaRcLROvRYA0kbzCj9wv6yRUHLzfRQAbz8MLBHoC5LT
4UJfA8DRTN+xD8+vzgdcizKMAoG5/fd6Fty/xf2UJaJNA4H3qUXEHO73P69z
1vgdCYSs/OA5Ojp519MX2raBcO7JeY676Ads4jPzHoFwmL9i0hm9deqHhsN/
gfBn5apPrTXWx5L4QeGyQLi+8U5pGPYbuWOu3uzlgWDv+0zFHe0hqDKzcjsQ
HuRUfTBBL5+fWvv+XiA0d78O3YveG28ukfAkENJY7e4MYP8S67nzv6neQFDK
DavTR6sI3d5+b30QjMiSChSxP6pOZt/4gSUIVr27N+9BSywEL7FuDoKtt7Zf
4Ubv6pDrJ3EHAetEyIFZ7K/WhD+4xL07CFzGO1cq0O0vnu4KVQmC2QsmZw6g
teXEthSqBQHlS6S6IPpxfsLfds0gkJUs4mf0Z5UhhsPCukFwUeiuyQ/s37L4
317psgiCkHrvmDq0Y/CAiGxAEMyIbdQ3Rr+jqW11oQTBBd6MUE20yeGCdUkh
QbDnukSrLFpzp/v4SGQQHN64/TMvWuTppxsZcUHwIuHI5knsF/MO6Oc+TgyC
3vbZE0NonotlCRPJQRBUdoOnG70hKMAHMoNA4Vd88yP01PYf4rMFQdCvn7c+
E+0Za7lz19UgcK6be5yApn+9t8ngehD8fWNZEIV+0xQxdeVWEJj+JdF80Xf9
/5Sb1wWBQbwG6KBPNG6UruoMAvHE093/sP9VLR9dvv4uCKwFZK8uo5cvPGq5
3BsEba/rsn+gw0OCbRPoQcDizTH+ER24py/aZSIIXJsVZDrQElzV+lZfcbwn
f/A/Q0/8TeYynMb47WGVbER792neUJgPAgEernt30a7JJa/Y1lBAuafFtwC9
K/JULtM6CnTIVARdRA94OrovrafA1cNHz2ejbTXY58fYKFAQ5WuajOaRmGjo
Z6fAqZywoXh09/aWxDdcFHCe3Z0RizafPcpfv4MCfjOyLv+h2YfMP1XxUaBd
7VbkUfSr9v1VNwQoYB3aXROCNrg2pJ0pSoG7LZ4X/NEbMuo2J+6lwMltT9V9
0M+iMnuj9lPgsqEDM+P7EbDV9feVpoDIPuZfLuhV7d0KrnJ4v5BUMSf0Y+lf
f60UKXDT82CYPVpl0+1MQo0CrYULVCv04kKCk6ImBb6MCglboGvG3MUktSjQ
dINtzoxxfnnM83C7PgWgpnqBcV6ZLZs+vdmIAhpMSuKM72Mqz7eZrDXF8Rlt
PqHPmI/TxduXzSlgbyI0rcuYj+Coke+WFGAZIMUeZsyHk+2tjzY4vk/PFHRM
Gb83yoTT7CmQ5qHMoo32UmTVfOtEgS6i/Dcwfq8UGd/43JUCKdxcHAyPsDd2
1XtQoGfHXm0CXfj7Qt4dLwpQK7NzNNHOEyHeJT4UcCzm3cAwf4+xdL4/BTKe
hOVqMOazWexXZhAFOLs9dRm+WPmvJZFKgb4bpdwM2+bRUqPDKFC3lm1VnTG/
Z+/ZhkVQgOx/eSPj9e7wNCG//yjwoFNXmuEMD58p1yh8PrOFcIbNzLRqrGPw
eTLj+xnerMZ/0ug0fv7GPgfG83TsW9CHeArIXXmxzPBZnrdcSmcpwPGGo5Yx
Hj2mm4OSKRTo9AtJZ4x3/fTpG8LpFJg9URunhaZu+tRjm0kBF+0Ndxjxou/R
35CaQ4HV6E9/GPE0gJtKzRcosOU5dwAj/jVObD6LlynQwndwRQ8tFBl0QbKQ
AvdA4pYBOjXr7Qv3qxjPw9+PM+bXqz1b/GUpBeJoa6MZ8985vmC/ppwCPzhF
Ko+g1dfYJylWUmAvZ92qJXqr8q6pKzUUqE9o/2vHON9anuTrqcN8+frzliN6
KmjEiPURBdJZOSIY+dly/Xp5eDPm8387yJ6M/99p2kC/+Qzzt505hYy+POi7
+cMLjOe7sdd+6BDuA0GGbyigxid9m8p4/lO1BwUHKRCN+zjj+8LUvB1uVsMU
YIs3fnGGUS/u/3fu7CgFvIfTvyWi337XmJ37QoGg++LJGYznc2qtfjFPAVFo
/FPMeL4I8bE/SxRYQ11DK2XMf1Yyt9xvCpSm1LypQB9oNwvLZwqG+YcBG+oY
8VbqUwhhDwapY6n5rxj1inuijk88GLhdptn/MPL5gNGEuWQwDH2Ycl7L+D7U
sII3/mAw1Fb8bWRBT8ZQ/5tRCAZa6p+GbeiL35dVn2kFw6//Sgpk0IttmxqD
nIJBzne1zA+9u2hyMds1GLR1eH9Q0QaR7dL1HsHwbNuM/jH0ZbGkqxt8g0HE
r1QoEa15miX+Sngw6GttibiBTlDbaNKVFgzGOxb9x9E7KpkHFJqCIdrshKsf
7gf57f9WormpEDRstzEG9x+rRUnmxa1UcOoN401Es4rab6Fso8K6sjixc+hj
UXd2u/JSIaU/Tv4K2lra47CmIBUolH+CT9Bbzrekre6nQpJByoFVxv9zuccL
xWhR4fht/cJI3C8V06r3L2lTIa7r9/eT6G8Ph+SCD1OBr42ikIB23Kqk66ZP
ha23n93IQSu3fvYjTKnA+9+5bdXoWUmDe//sqbBL5jLzBNpjiVXvFJUKNh6d
Uqa4f1PUTqzlDaVCRHRalhU6KuZrY1UYFWyruScc0Bc3vlL+EEGFtX43Pcjo
zh1p+zWjqcDBVZh6Ek2ocGz5k0QFxdeq1eVok6iY9uwUKuyOuryh2pLx/d5M
vGQajue3gNF9dIRB56pjBhUSu7ouN6Er7TNnH+ZiPAZj3N+jBf7b+j7yGhXm
1Nx8l9ESDWcyOG5QQUsrPvsPo99gmjcpLaFCu5VS+RrsT6yT3j/vvUmFPyEy
RSzo1Evn6xTvUMGcFFK0A315aH3462oq+IoWSfOjy4QjZLzvUaEqWKhcEP3s
pu3NnPtUOCrZRRZD/364I+/nYypseLx1RhbNsppol9JIhXTSzLACerv28lbR
JirUXMiuV0bLdfSnWj6lQrb0DwUNNLAbGk49o4K41dl3BNrM8uH6061U2JZ4
zUUb7T9w6WR1OxVuXxVW0EcfE2RVM3xJhYPvfU8ZohNIx5dGXlFhj6vkA2N0
8ZQjlbOTCtvFLKbMrRi/v7yUKuuiwkpe07gFujFUbZJ4R4V3Wm0djN83aCv8
pOBeKhRsSnSwQ7OeMmD71kcFlfbyz/Zo1fVHa3xpVLg0/s/DkREfjjcbSHQq
6I7oiLqgO3JWqoaH0LOEnysjHjv3OTh9oIJQfVSBG9p5z6ly6zEqWEY/7/Rg
xPtmhXXXRyowpb17S0I3HKT9Nf1EhYwy8QZP9PS99aUdn6lAJbde9EILHpI7
oj9BBR6XSpI3Iz6Nrr+eTuL8BI3xkdExOinF8JUK0xYBzQzfaaszbvhGhWtx
JrY+6BHT8flD01RIWJ9AY5jzHWfh/Rlcb/UCxr5oLXsNffkfVGhgkyhnOHTI
b7ZqjgrJ4rd/MVxMyr0kNU8FC65SJT9095cW7ZsLVNgvu4/E8Lqgma9iS1Qo
3KQexbDCHP/54mUq3L38KY5hr0gDzd0ruP7bxf7/es6f8C95v3E+Vzj///7n
sVczeP9SodK+9v/3X9zw5tD5VSo8fyiwwvj8vakrY1xrQkB/3rqCYVuufanp
TCGQPOxtynBCrpUi27oQGDFzGmKM7z7/qeFE5hC4yg/ODH8pqkhk3hACgvy7
Oxjx4d1Lk4ndGAK3RdftY9igfP3AX5YQuMa2FMqI7zEZuTPHWUPA6ub6Skb8
y2pdpZbYQoDn3aF+xvz0q6b0hG0JARW3wh+M+dvUVHdylj0Etu3RXGHMr38H
Z9ckVwiYVDvSGPN/2VzjOHlrCIwPLVYx8uPlez/Rjzwh8OjB7ghG/kh9aDlK
3xEC1ZH2XYz8cvaaEXTYGQKHmxLIDui0Sf62Hr4QUPoS85WRn9M/w/neCoTA
vkscz60Z+fHf1afGu0Pg8tlnOxn5bL76OrBNKATsd8e6MvL9Dsu+J82iIXCD
zeyBKWN+BWieNftD4JvLSKUuY36L12+RlQwBNraoeB30u31y929LhYDhcIWJ
FmM+5VJYSqVDoO+cyW119IKexu1LiiFw0abkoRya+VbZALtyCLStftwjg+bZ
wsMSpxICXNcWYg8w1vu7KRJFLQSyPYa5xNEUt4u8OlohwGTXlrwL/Tny55lv
JiEQMXd8ZS3j/gOu1R5mIfA38UP6P6xfzJodw73mIfCnPWU7o56JMF891GwZ
Amu8Jv7No90yzGbO24fAwkyi+md0f9lNR8IrBNJlLkS3or+wbTtb4x0Cimfr
LBm/Vy5STtXu9wmBqTV1uxrRPIp2nDz+IfCGrpxRiz7SzNw6ERwClVLNS9fQ
7TQ32awTIVBqt2aMUb/rWbezfMrC+Y3UnTyAFop/PvFfTgh8nl4UEkcn/Atv
Z88NgeLfXEdE0Jbz75JVLoXA6vT+89vRk0OZW1KvYDwWvZ6s4v7CW71lq3xF
CKhG/7v/Gh1ht14w9nkIuNuqGfmg5a7PywssY7w5vv6XiftdvZs704VfIbB3
8q9SClqH/9Ubzt84/1o6C3GM/TLrmh/zagisa/U+egwdccryytd1oZBUtz3R
Df3Q+Q5rPUco2PQEsR5Ew7bAUdt9oVAUE2v7Gvfrts6+yk7xUFD4IxzwAm2R
qhNlJIG2dohrRpPW8e/QPBAKl1ucn9ei4360m4jJh8LMxfuxhegXr/c9+KkZ
CosHmieoaLOEj+kZtqEwXnBDkA+tb5RuomQfCnH56hY85oz6f4iV7hAKF97z
pLGjZXPT4/e5hEL77k6hdWiekkNRjZ6h8GpbzoNv2F8MPj/n940aCj3fV+qa
0e+TVPdlhYZCZXNV3GP0K9NP48rhoZDanOxUh27sUXU/ExkKotFrxG+jiz99
suU7GQrHgic1L6F916sfNkgJhZGd6yLD0B7tn5mmU0NhjxrrLAXtmJb5JDsd
46NkFc74/dlk2xfVD5mhULrW9ooHWlosSzbiYijI3D0Tc4TRXx2eELx+IxTq
hyjBjH5rhiWbblgaCm/23C1m/D498Urj8kxZKPhQ34+Ko2nW2dvUKkLhe5pe
nDD6sZfm5u67oWDsIeu4FV0rPtkeWRMKtvkfv3OgK79lJwrcx3iufZ62GV0U
PrnW72EojOYrz61HX1LJaWJ/FAqWnW33Gf1h1h/NkzWPQ4FUkJPIOP8mN02q
OTaGAjdznhejnzwTl/Pr35NQ8GKmm/5C/w/thABG
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 299.99999387755105`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.692458444326649*^9, 3.692458541839537*^9}, 
   3.69297930722678*^9, {3.695823251724963*^9, 3.695823280235594*^9}, 
   3.702393158752817*^9}]
}, Closed]],

Cell["\<\
Here susceptible hosts are shown in red, exposed in green, infected in blue \
and recovered in purple.\
\>", "Text",
 CellChangeTimes->{{3.695823283434777*^9, 3.6958233183787756`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["SERIS with Coevolution", "Section",
 CellChangeTimes->{{3.692456998092336*^9, 3.692457003198347*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input"],

Cell["\<\
Using the same epidemiological framework as above we now incorporate \
host-parasite coevolution by introducing two hosts and two pathogen types as \
in the matching alleles model.  We find the equilibria of the resulting \
system and asses their stability.\
\>", "Text",
 CellChangeTimes->{{3.6918733821523523`*^9, 3.6918734840651813`*^9}, {
  3.691873517389087*^9, 3.69187360904733*^9}, {3.691873837406391*^9, 
  3.691873842144662*^9}, {3.692032910603894*^9, 3.692032968965597*^9}, {
  3.692033036095515*^9, 3.692033076936386*^9}, {3.6924570613714743`*^9, 
  3.692457128791651*^9}}],

Cell[CellGroupData[{

Cell["The Differential Equations", "Subsection",
 CellChangeTimes->{{3.692458662968171*^9, 3.6924586667259803`*^9}, 
   3.692968278975835*^9}],

Cell[TextData[{
 "We are interested in two host types, 1 and 2, that are born susceptible.  \
As above, upon infection hosts become exposed but not yet infectious, they \
progress through a series of exposed stages before becoming infectious.  They \
then experience a number of infectious stage before recovery and finally \
after progressing through a number of recovered stages return once again to \
the susceptible class.  Denoting the two susceptible host types by s[h,t] \
where h={1,2} let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"s", "[", 
      RowBox[{"h", ",", "t"}], "]"}]}], "=", 
    RowBox[{
     RowBox[{"f1", "[", 
      RowBox[{"h", ",", "t"}], "]"}], "."}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6924590972821903`*^9, 3.692459299082733*^9}, {
  3.6924595443647623`*^9, 3.6924595842210417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"h_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"b", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"h", ",", "t"}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"h", ",", "l", ",", "j", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"h", ",", "l", ",", "j", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"h", ",", "j", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"k", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"k", ",", "j", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}]}]}], 
     ")"}]}], "-", 
   RowBox[{"d", "*", 
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], 
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "nR", ",", "t"}], "]"}]}], "-", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"h", ",", "l"}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6899622715103984`*^9, 3.689962627838595*^9}, {
   3.6899627992888966`*^9, 3.6899631041733627`*^9}, {3.690140474662557*^9, 
   3.690140478000963*^9}, {3.6901429738489914`*^9, 3.690142974114192*^9}, 
   3.69030812006647*^9, 3.690739328562787*^9}],

Cell[TextData[{
 "Most parameters are as defined above. Here \[Beta][h,p] denotes the \
transmission rate of pathogen type p to host type h and \[Mu] is the rate at \
which pathogens mutate from type 1 to type 2.  Here e[h,p,c,t] denotes the \
density of hosts of type h exposed to pathogens of type p in stage exposed \
stage c at time t.  Similarly i[h,p,c,t] is the density of type h infectious \
hosts who carry pathogen p in infectious stage c at time t. Finally, r[h,c,t] \
is the density of recovered hosts of type h in stage c at time t.\n\nLet the \
differential equation for exposed stages be given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"e", "[", 
      RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], "=", 
    RowBox[{"f2", "[", 
     RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6924593130265303`*^9, 3.6924595368503323`*^9}, {
  3.692459588958313*^9, 3.692459643996461*^9}, {3.6924601633081636`*^9, 
  3.692460183067294*^9}, {3.6924602252007036`*^9, 3.692460249836113*^9}, {
  3.6924604051179943`*^9, 3.6924604081501675`*^9}, {3.6929682931134596`*^9, 
  3.692968301662275*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f2", "[", 
    RowBox[{"h_", ",", "p_", ",", "c_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"c", "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"h", ",", "t"}], "]"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]"}], ")"}], 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"h", ",", "p"}], "]"}], 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"i", "[", 
             RowBox[{"k", ",", "p", ",", "j", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], "+", 
         RowBox[{"\[Mu]", " ", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"h", ",", 
            RowBox[{"3", "-", "p"}]}], "]"}], " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"i", "[", 
             RowBox[{"k", ",", 
              RowBox[{"3", "-", "p"}], ",", "j", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}]}]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["nE", "\[Tau]E"]}], ")"}], " ", 
       RowBox[{"e", "[", 
        RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["nE", "\[Tau]E"], 
       RowBox[{"e", "[", 
        RowBox[{"h", ",", "p", ",", 
         RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["nE", "\[Tau]E"]}], ")"}], " ", 
       RowBox[{"e", "[", 
        RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6899622715103984`*^9, 3.689962627838595*^9}, {
   3.6899627992888966`*^9, 3.6899631041733627`*^9}, {3.690140474662557*^9, 
   3.690140478000963*^9}, {3.6901429738489914`*^9, 3.690142974114192*^9}, 
   3.69030812006647*^9, 3.690739328562787*^9, {3.6924603160509*^9, 
   3.692460316782942*^9}, {3.6924603483187456`*^9, 3.6924603598404045`*^9}}],

Cell[TextData[{
 "As above the ODE for the first exposed stage has a distinctly different \
form from the latter stages, this holds true for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["d", "dt"], 
    RowBox[{"i", "[", 
     RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["d", "dt"], 
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], TraditionalForm]]],
 " as well.\n\nLet ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"i", "[", 
      RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], "=", 
    RowBox[{"f3", "[", 
     RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"r", "[", 
      RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], "=", 
    RowBox[{"f4", "[", 
     RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.692459649554779*^9, 3.6924597729528365`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", 
   RowBox[{"h_", ",", "p_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nE", "\[Tau]E"], 
      RowBox[{"e", "[", 
       RowBox[{"h", ",", "p", ",", "nE", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], " ", 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "p", ",", 
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], " ", 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6899622715103984`*^9, 3.689962627838595*^9}, {
   3.6899627992888966`*^9, 3.6899631041733627`*^9}, {3.690140474662557*^9, 
   3.690140478000963*^9}, {3.6901429738489914`*^9, 3.690142974114192*^9}, 
   3.69030812006647*^9, 3.690739328562787*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f4", "[", 
   RowBox[{"h_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"h", ",", "l", ",", "nI", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nR", "\[Tau]R"], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", 
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6899622715103984`*^9, 3.689962627838595*^9}, {
   3.6899627992888966`*^9, 3.6899631041733627`*^9}, {3.690140474662557*^9, 
   3.690140478000963*^9}, {3.6901429738489914`*^9, 3.690142974114192*^9}, 
   3.69030812006647*^9, 3.690739328562787*^9}],

Cell[TextData[{
 "For simplicity we will assume a symmetric matching alleles model such that  \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "=", 
    RowBox[{
     RowBox[{"\[Beta]", "[", 
      RowBox[{"2", ",", "2"}], "]"}], "=", "X"}]}], TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Beta]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "=", 
    RowBox[{
     RowBox[{"\[Beta]", "[", 
      RowBox[{"2", ",", "1"}], "]"}], "=", "Y"}]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.692460431074479*^9, 3.692460523451763*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "X"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "X"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "Y"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6924605534604793`*^9, 3.6924605793739614`*^9}}],

Cell[CellGroupData[{

Cell["List of Differential Equations", "Subsubsection",
 CellChangeTimes->{{3.6924598650911064`*^9, 3.6924598721875124`*^9}}],

Cell["\<\
A complete list of the differential equations above is given by:\
\>", "Text",
 CellChangeTimes->{{3.692459875010674*^9, 3.692459887106366*^9}, 
   3.692968304142679*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ODEs", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nE", ",", "nI", ",", "nR", ",", "odes", ",", "h", ",", "p", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"odes", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"odes", ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"h", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          " ", 
          RowBox[{"f1", "[", 
           RowBox[{"h", ",", "t"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"p", "=", "1"}], ",", 
          RowBox[{"p", "\[LessEqual]", "2"}], ",", 
          RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"c", "=", "1"}], ",", 
             RowBox[{"c", "\[LessEqual]", "nE"}], ",", 
             RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"odes", ",", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"e", "[", 
                   RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                  "t"}], "]"}], "\[Equal]", " ", 
                RowBox[{"f2", "[", 
                 RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"p", "=", "1"}], ",", 
          RowBox[{"p", "\[LessEqual]", "2"}], ",", 
          RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"c", "=", "1"}], ",", 
             RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
             RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"odes", ",", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"i", "[", 
                   RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                  "t"}], "]"}], "\[Equal]", " ", 
                RowBox[{"f3", "[", 
                 RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}], 
              "]"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"c", "=", "1"}], ",", 
          RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
          RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"odes", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", "t"}], "]"}], 
             "\[Equal]", " ", 
             RowBox[{"f4", "[", 
              RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"odes", "=", 
      RowBox[{"odes", "/.", "\[Beta]sub"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.692459888388439*^9, 3.6924598999801025`*^9}, {
   3.6924599351731153`*^9, 3.6924601445190887`*^9}, {3.6924602004692893`*^9, 
   3.692460201695359*^9}, {3.6924605855663157`*^9, 3.692460588743497*^9}, 
   3.692883254124092*^9, {3.692884640249374*^9, 3.6928846499939313`*^9}}],

Cell["A list of the variables is given by:", "Text",
 CellChangeTimes->{{3.692461743386539*^9, 3.692461751017976*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vars", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nE", ",", "nI", ",", "nR", ",", "vars", ",", "h", ",", "p", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"vars", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"vars", ",", 
         RowBox[{"s", "[", 
          RowBox[{"h", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nE"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"vars", ",", 
             RowBox[{"e", "[", 
              RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], "]"}]}], 
          "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"vars", ",", 
             RowBox[{"i", "[", 
              RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], "]"}]}], 
          "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"vars", ",", 
           RowBox[{"r", "[", 
            RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "vars"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6924617577503605`*^9, 3.6924618781452465`*^9}, {
  3.692881282655707*^9, 3.6928812865867124`*^9}, {3.6928813478057995`*^9, 
  3.6928814015948753`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria", "Subsection",
 CellChangeTimes->{{3.6924606313569345`*^9, 3.692460633146037*^9}}],

Cell["\<\
As with the SEIRS model without coevolution at equilibrium we can express the \
each exposed, infected, and recovered class in terms of the first exposed \
class only.  This will allow us to reduce the system of equations down to 6, \
2 susceptible equations (2 host types) and the first 4 exposed equations (2 \
host and 2 pathogen types).  The density of exposed (ee[h,p,c]), infected \
(ie[h,p,c]) and recovered (re[h,c]) stages at equilibrium as a function of \
the first exposed stage ee1[h,p] are given by:\
\>", "Text",
 CellChangeTimes->{{3.6924606762745037`*^9, 3.692460896643108*^9}, {
  3.6929683148229046`*^9, 3.692968319551713*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"re", "[", 
   RowBox[{"h_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nR", 
      RowBox[{"nR", "+", 
       RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nI", "\[Tau]I"], 
     RowBox[{"(", 
      FractionBox["\[Tau]R", 
       RowBox[{"nR", "+", 
        RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
    RowBox[{"nI", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nE", "\[Tau]E"], 
     RowBox[{"(", 
      FractionBox["\[Tau]I", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nE", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
    RowBox[{"nE", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"ee1", "[", 
      RowBox[{"h", ",", "1"}], "]"}], "+", 
     RowBox[{"ee1", "[", 
      RowBox[{"h", ",", "2"}], "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.692460898318204*^9, 3.69246091013688*^9}, {
  3.6924613240575547`*^9, 3.6924613430806427`*^9}}],

Cell["for c={1,2...nR},", "Text",
 CellChangeTimes->{{3.690814625335209*^9, 3.690814670549795*^9}, 
   3.6924536633477345`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ie", "[", 
   RowBox[{"h_", ",", "p_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nE", "\[Tau]E"], 
     RowBox[{"(", 
      FractionBox["\[Tau]I", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nE", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
    RowBox[{"nE", "-", "1"}]], 
   RowBox[{"ee1", "[", 
    RowBox[{"h", ",", "p"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6908146305075045`*^9, 3.690814640787092*^9}, 
   3.6908146777452064`*^9, {3.6908149132566767`*^9, 3.690814935712961*^9}, {
   3.691859132967345*^9, 3.691859136881569*^9}, {3.692453609345646*^9, 
   3.692453615956024*^9}, {3.6924536841129227`*^9, 3.6924537136796136`*^9}, {
   3.6924613684370933`*^9, 3.692461385076045*^9}}],

Cell["for c={1,2...nI} and,", "Text",
 CellChangeTimes->{{3.6908146804703627`*^9, 3.6908146986224003`*^9}, {
  3.6917710602134132`*^9, 3.691771081982546*^9}, {3.6924536577314134`*^9, 
  3.692453666178897*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ee", "[", 
   RowBox[{"h_", ",", "p_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", ">", "1"}], ",", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["nE", 
        RowBox[{"nE", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
      RowBox[{"c", "-", "1"}]], 
     RowBox[{"ee1", "[", 
      RowBox[{"h", ",", "p"}], "]"}]}], ",", 
    RowBox[{"ee1", "[", 
     RowBox[{"h", ",", "p"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6924536698491063`*^9, 3.692453701045891*^9}, {
  3.692453736782935*^9, 3.692453750353711*^9}, {3.692461388872262*^9, 
  3.692461403464096*^9}}],

Cell["for c={1,2...nE}.", "Text",
 CellChangeTimes->{{3.692461415123763*^9, 3.6924614183789496`*^9}}],

Cell[TextData[{
 "We can express the 2 susceptible differential equations and the first stage \
exposed odes in terms of the susceptible class and first exposed stage only \
by defining\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "nE"], 
     RowBox[{"e", "[", 
      RowBox[{"h", ",", "p", ",", "j", ",", "t"}], "]"}]}], "=", 
    RowBox[{"zE", " ", 
     RowBox[{"e", "[", 
      RowBox[{"h", ",", "p", ",", "1", ",", "t"}], "]"}]}]}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "nE"], 
     RowBox[{"i", "[", 
      RowBox[{"h", ",", "p", ",", "j", ",", "t"}], "]"}]}], "=", 
    RowBox[{"zI", " ", 
     RowBox[{"e", "[", 
      RowBox[{"h", ",", "p", ",", "1", ",", "t"}], "]"}]}]}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     OverscriptBox[
      SubscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}]], "nE"], 
     RowBox[{"r", "[", 
      RowBox[{"h", ",", "j", ",", "t"}], "]"}]}], "=", 
    RowBox[{"zR", "(", " ", 
     RowBox[{
      RowBox[{"e", "[", 
       RowBox[{"h", ",", "1", ",", "1", ",", "t"}], "]"}], "+", " ", 
      RowBox[{"e", "[", 
       RowBox[{"h", ",", "2", ",", "1", ",", "t"}], "]"}]}], ")"}]}], 
   TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "nR", ",", "t"}], "]"}], "=", "znR"}], 
   TraditionalForm]]],
 "( e[h,1,1,t]+ e[h,2,1,t])\nand solving for zE, zI, zR and znR."
}], "Text",
 CellChangeTimes->{{3.6924614383070893`*^9, 3.6924615270581656`*^9}, 
   3.69296832365552*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zsub", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zE", "\[Rule]", " ", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ee", "[", 
          RowBox[{"h", ",", "p", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nE"}], "}"}]}], "]"}], 
       RowBox[{"ee1", "[", 
        RowBox[{"h", ",", "p"}], "]"}]]}], ",", 
     RowBox[{"zI", "\[Rule]", " ", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ie", "[", 
          RowBox[{"h", ",", "p", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}], 
       RowBox[{"ee1", "[", 
        RowBox[{"h", ",", "p"}], "]"}]]}], ",", 
     RowBox[{"zR", "\[Rule]", " ", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"re", "[", 
          RowBox[{"h", ",", "j"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nR"}], "}"}]}], "]"}], 
       RowBox[{
        RowBox[{"ee1", "[", 
         RowBox[{"h", ",", "1"}], "]"}], "+", 
        RowBox[{"ee1", "[", 
         RowBox[{"h", ",", "2"}], "]"}]}]]}], ",", 
     RowBox[{"znR", "\[Rule]", " ", 
      FractionBox[
       RowBox[{"re", "[", 
        RowBox[{"h", ",", "nR"}], "]"}], 
       RowBox[{
        RowBox[{"ee1", "[", 
         RowBox[{"h", ",", "1"}], "]"}], "+", 
        RowBox[{"ee1", "[", 
         RowBox[{"h", ",", "2"}], "]"}]}]]}]}], "}"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6899642268915977`*^9, 3.689964249262037*^9}, {
  3.6899643812027626`*^9, 3.689964408816811*^9}, {3.6899645078146105`*^9, 
  3.6899645651321115`*^9}, {3.6899646047727814`*^9, 3.6899646218392115`*^9}, {
  3.689964701387601*^9, 3.689964732838256*^9}, {3.6901430591553817`*^9, 
  3.6901430896406455`*^9}, {3.692461599215293*^9, 3.6924616283209577`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"zE", "\[Rule]", 
    FractionBox[
     RowBox[{"nE", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]E"}], "-", 
      RowBox[{
       SuperscriptBox["nE", "nE"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], 
        RowBox[{"1", "-", "nE"}]]}]}], 
     RowBox[{"\[Delta]", " ", "\[Tau]E"}]]}], ",", 
   RowBox[{"zI", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nE", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nE", 
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "nE"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nI", 
            RowBox[{"nI", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
      RowBox[{"\[Delta]", " ", "\[Tau]E"}]]}]}], ",", 
   RowBox[{"zR", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nE", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nE", 
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "nE"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nI", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nR", 
            RowBox[{"nR", "+", 
             RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], ")"}]}], 
      RowBox[{"d", " ", "\[Tau]E"}]]}]}], ",", 
   RowBox[{"znR", "\[Rule]", 
    FractionBox[
     RowBox[{"nE", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nE", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "nE"}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"], " ", 
      "\[Tau]R", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nR", 
         RowBox[{"nR", "+", 
          RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], 
     RowBox[{"nR", " ", "\[Tau]E"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6924616342672977`*^9, 3.692880111081478*^9, 3.694454732004953*^9, 
   3.694466442021757*^9, {3.694522332814787*^9, 3.694522333317816*^9}, {
   3.6949856854286823`*^9, 3.694985710053091*^9}, 3.6950388012444315`*^9, 
   3.695480597050808*^9, 3.695661063683268*^9, 3.695740526747837*^9, 
   3.6957455804938955`*^9, 3.6957543313397465`*^9, 3.695823597047714*^9, 
   3.6960779522685995`*^9, 3.696708829102416*^9, 3.70239319070578*^9, 
   3.710684964441024*^9}]
}, Closed]],

Cell["The remaining equilibrium equations are given by:", "Text",
 CellChangeTimes->{{3.6924616540834312`*^9, 3.6924616649460526`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1e", "[", "h_", "]"}], ":=", 
  RowBox[{
   RowBox[{"b", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"se", "[", "h", "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ee1", "[", 
          RowBox[{"h", ",", "1"}], "]"}], "+", 
         RowBox[{"ee1", "[", 
          RowBox[{"h", ",", "2"}], "]"}]}], ")"}]}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"se", "[", "k", "]"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ee1", "[", 
               RowBox[{"k", ",", "1"}], "]"}], "+", 
              RowBox[{"ee1", "[", 
               RowBox[{"k", ",", "2"}], "]"}]}], ")"}]}]}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{"se", "[", "h", "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], "znR", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"h", ",", "1"}], "]"}], "+", 
      RowBox[{"ee1", "[", 
       RowBox[{"h", ",", "2"}], "]"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"se", "[", "h", "]"}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"h", ",", "l"}], "]"}], "zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"k", ",", "l"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2e", "[", 
   RowBox[{"h_", ",", "p_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"se", "[", "h", "]"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"h", ",", "p"}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"zI", " ", 
          RowBox[{"ee1", "[", 
           RowBox[{"k", ",", "p"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "+", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"h", ",", 
         RowBox[{"3", "-", "p"}]}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"zI", " ", 
          RowBox[{"ee1", "[", 
           RowBox[{"k", ",", 
            RowBox[{"3", "-", "p"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]", "+", 
      FractionBox["nE", "\[Tau]E"]}], ")"}], 
    RowBox[{"ee1", "[", 
     RowBox[{"h", ",", "p"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.689964151613417*^9, 3.6899641540158215`*^9}, {
   3.689964759561103*^9, 3.6899649541174*^9}, {3.6899650098045855`*^9, 
   3.6899650920462894`*^9}, {3.6899654819185886`*^9, 3.689965486328841*^9}, 
   3.6899656114529977`*^9, {3.6901145178974223`*^9, 3.6901145201945534`*^9}, {
   3.690143216665694*^9, 3.6901432275253134`*^9}, 3.6901432691935987`*^9, 
   3.6957446072702303`*^9}],

Cell["\<\
To solve for the equilibria is it convenient to find a list of expressions \
that must equal zero at equilibrium.\
\>", "Text",
 CellChangeTimes->{{3.692461683387107*^9, 3.692461713346821*^9}, 
   3.6929683294587307`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiList", "=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f1e", "[", "k", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f2e", "[", 
          RowBox[{"k", ",", "l"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], "]"}], "/.",
     "\[Beta]sub"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689965310754799*^9, 3.6899653362622576`*^9}, {
  3.692462608102998*^9, 3.692462609599084*^9}}],

Cell["The variables we are solving for are given by the list", "Text",
 CellChangeTimes->{{3.6924619015705867`*^9, 3.6924619117301674`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiVars", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"se", "[", "k", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ee1", "[", 
        RowBox[{"k", ",", "l"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.68996518472259*^9, 3.6899652039416895`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], ",", 
   RowBox[{"se", "[", "2", "]"}], ",", 
   RowBox[{"ee1", "[", 
    RowBox[{"1", ",", "1"}], "]"}], ",", 
   RowBox[{"ee1", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"ee1", "[", 
    RowBox[{"2", ",", "1"}], "]"}], ",", 
   RowBox[{"ee1", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6924619251559353`*^9, 3.6928801111814785`*^9, 3.6944547321765532`*^9, 
   3.694466442227769*^9, 3.694522333417821*^9, {3.6949856856836967`*^9, 
   3.694985710264103*^9}, 3.695038801400432*^9, 3.6954806018410816`*^9, 
   3.6956610638080683`*^9, 3.695740526882845*^9, 3.695744617328805*^9, 
   3.6957455806499043`*^9, 3.6957543410827675`*^9, 3.695823597165721*^9, 
   3.696077953425666*^9, 3.6967088292272162`*^9, 3.702393190762815*^9, 
   3.710684964677763*^9}]
}, Closed]],

Cell["\<\
Solving for these equilibria is unfortunately not as straightforward as using \
Solve however.  Instead we must break down the equilibria into the various \
possibilities. Specifically if we consider the four exposed types (ee1[1,1], \
ee1[1,2], ee1[2,1], ee1[2,2]) then at the equilibrium there may be either 0 \
infections types present, or 1,2,3, or 4 types present.\
\>", "Text",
 CellChangeTimes->{{3.692461940019786*^9, 3.6924621009309893`*^9}}],

Cell[CellGroupData[{

Cell["Option 1: No infections present (\[Infinity] number of solutions)", \
"Subsubsection",
 CellChangeTimes->{{3.692462107203348*^9, 3.692462114106743*^9}, {
  3.6924623184904327`*^9, 3.6924623251068115`*^9}}],

Cell["\<\
Because there are no infections present we have the following\
\>", "Text",
 CellChangeTimes->{{3.6924621408992753`*^9, 3.6924621715070257`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sub1", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"k", ",", "l"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.692462127330499*^9, 3.6924621386411467`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6924621955203996`*^9, 3.692880111211478*^9, 3.694454732238953*^9, 
   3.6944664422717714`*^9, 3.694522333481825*^9, {3.6949856857387*^9, 
   3.694985710320106*^9}, 3.695038801431632*^9, 3.695480607898428*^9, 
   3.6956610638392677`*^9, 3.6957405269268475`*^9, 3.695744621465042*^9, 
   3.695745580705907*^9, 3.6957543475031805`*^9, 3.6958235972037234`*^9, 
   3.696077957030872*^9, 3.696708829258416*^9, 3.702393190822319*^9, 
   3.710684964745471*^9}]
}, Closed]],

Cell["Simplifying the list of equilibrium expressions", "Text",
 CellChangeTimes->{{3.692462178362418*^9, 3.692462192154207*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquList1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"EquiList", "/.", "zsub"}], ")"}], "/.", "Sub1"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6899652954669247`*^9, 3.6899652992831426`*^9}, {
  3.6899653399324675`*^9, 3.6899653776916275`*^9}, {3.6899654616524296`*^9, 
  3.689965472116028*^9}, {3.689965517828643*^9, 3.6899655217408667`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"se", "[", "1", "]"}]}], " ", 
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"se", "[", "1", "]"}], "+", 
            RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"se", "[", "2", "]"}]}], " ", 
    RowBox[{"(", 
     RowBox[{"d", "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"se", "[", "1", "]"}], "+", 
            RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.689965322333461*^9, 3.6899653675910497`*^9}, {
   3.689965467025737*^9, 3.6899655228949327`*^9}, 3.6899656173963375`*^9, 
   3.69011641429489*^9, {3.6924621968584757`*^9, 3.6924622013227315`*^9}, 
   3.692880111251478*^9, 3.6944547323013535`*^9, 3.6944664423167744`*^9, 
   3.6945223335478287`*^9, {3.6949856858377056`*^9, 3.694985710373109*^9}, 
   3.6950388014784317`*^9, 3.6954806080274353`*^9, 3.6956610638860683`*^9, 
   3.6957405269738503`*^9, 3.695744622811119*^9, 3.6957455807629104`*^9, 
   3.695754347612381*^9, 3.6958235972447257`*^9, 3.696077957104876*^9, 
   3.6967088293052163`*^9, 3.702393190888776*^9, 3.710684964804881*^9}]
}, Closed]],

Cell["Solving expression 1 for se[2]", "Text",
 CellChangeTimes->{{3.692462210635264*^9, 3.6924622172346416`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolA", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EquList1", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6899655268111563`*^9, 3.6899655735078273`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"b", "-", "d", "-", 
     RowBox[{"b", " ", "\[Kappa]", " ", 
      RowBox[{"se", "[", "1", "]"}]}]}], 
    RowBox[{"b", " ", "\[Kappa]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.689965547236325*^9, 3.6899655739248514`*^9}, 
   3.6899656206135216`*^9, 3.690116414340893*^9, 3.692462223744014*^9, 
   3.6928801113014784`*^9, 3.694454732348153*^9, 3.694466442360777*^9, 
   3.694522333608832*^9, {3.694985685893709*^9, 3.69498571039511*^9}, 
   3.6950388015252323`*^9, 3.695480608074438*^9, 3.6956610639172688`*^9, 
   3.695740527044854*^9, 3.6957446243062043`*^9, 3.6957455808289146`*^9, 
   3.695754347674781*^9, 3.695823597282728*^9, 3.696077957151879*^9, 
   3.6967088293208165`*^9, 3.7023931909554863`*^9, 3.7106849648480263`*^9}]
}, Closed]],

Cell["\<\
Substituting back into the list of expressions we see that this satisfies all \
the equations\
\>", "Text",
 CellChangeTimes->{{3.692462239026888*^9, 3.692462263930312*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquList1", "/.", "SolA"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6899656614988604`*^9, 3.6899656750916376`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6899656643670244`*^9, 3.6899656755716653`*^9}, 
   3.6901164143848953`*^9, 3.692462265791419*^9, 3.6928801113414783`*^9, 
   3.694454732410554*^9, 3.694466442402779*^9, 3.6945223336708355`*^9, {
   3.6949856859487123`*^9, 3.694985710446113*^9}, 3.6950388015564327`*^9, 
   3.695480608125441*^9, 3.6956610639640684`*^9, 3.6957405271118584`*^9, 
   3.6957446259853*^9, 3.6957455808809175`*^9, 3.6957543477215815`*^9, 
   3.69582359731973*^9, 3.696077957189881*^9, 3.6967088293520164`*^9, 
   3.702393191073061*^9, 3.710684964900094*^9}]
}, Closed]],

Cell[TextData[{
 "Hence any solution that satisfies ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"b", "-", "d", "-", 
      RowBox[{"b", " ", "\[Kappa]", " ", 
       RowBox[{"se", "[", "1", "]"}]}]}], 
     RowBox[{"b", " ", "\[Kappa]"}]]}], "}"}]],
  CellChangeTimes->{{3.689965547236325*^9, 3.6899655739248514`*^9}, 
    3.6899656206135216`*^9}],
 " satisfies all the equations, this leads to an infinite number of possible \
solutions."
}], "Text",
 CellChangeTimes->{{3.689965637122466*^9, 3.689965654944485*^9}, {
  3.6924622720777783`*^9, 3.692462314714217*^9}, {3.6929683373523445`*^9, 
  3.692968341267951*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equilbrium1", "=", 
  RowBox[{
   RowBox[{"EquiVars", "/.", "Sub1"}], "/.", "SolA"}]}]], "Input",
 CellChangeTimes->{{3.692880484455572*^9, 3.692880524237629*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], ",", 
   FractionBox[
    RowBox[{"b", "-", "d", "-", 
     RowBox[{"b", " ", "\[Kappa]", " ", 
      RowBox[{"se", "[", "1", "]"}]}]}], 
    RowBox[{"b", " ", "\[Kappa]"}]], ",", "0", ",", "0", ",", "0", ",", "0"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.692880529548636*^9, 3.6944547324573536`*^9, 3.6944664424447813`*^9, 
   3.6945223337308393`*^9, {3.694985686002715*^9, 3.6949857104671144`*^9}, 
   3.695038801587632*^9, 3.695480608171444*^9, 3.6956610639952683`*^9, 
   3.695740527164861*^9, 3.695744627498387*^9, 3.69574558092992*^9, 
   3.6957543477839813`*^9, 3.695823597356732*^9, 3.6960779572348833`*^9, 
   3.6967088293832164`*^9, 3.702393191239317*^9, 3.710684964947832*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Option 2: Single infection type present (No solutions)", "Subsubsection",
 CellChangeTimes->{{3.692462333026264*^9, 3.692462351986349*^9}, {
  3.6924630156343074`*^9, 3.692463026906952*^9}}],

Cell["\<\
Although there are technically four possible single type infections that \
could be present at equilibria by taking advantage of the symmetry of the \
problem and relabeling type 1 and type 2 pathogens we have only two \
possibilities, ee1[1,1]\[NotEqual]0 and ee1[1,2]\[NotEqual]0.\
\>", "Text",
 CellChangeTimes->{{3.692462363499007*^9, 3.692462469107048*^9}, {
  3.69296834624436*^9, 3.692968362488989*^9}}],

Cell[TextData[StyleBox["Option 2a: ee1[1,1]\[NotEqual]0",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.692462484405923*^9, 3.6924625046270795`*^9}}],

Cell["\<\
We can simplify the equilibrium expressions given the assumptions of this \
option.\
\>", "Text",
 CellChangeTimes->{{3.6924625310025883`*^9, 3.692462563314436*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sub2a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6924625121325088`*^9, 3.69246252823743*^9}, 
   3.692462882878714*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList2a", "=", 
  RowBox[{
   RowBox[{"EquiList", "/.", "Sub2a"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6924625673046646`*^9, 3.6924625940211926`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"se", "[", "2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "d"}], "-", 
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{"se", "[", "1", "]"}], "+", 
            RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Tau]E", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"X", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
     "\[Tau]E"]}], ",", 
   RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "Y"}], " ", "zI", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}], ",", 
   RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.692462594556223*^9, 3.6924626139473324`*^9}, 
   3.692880111411479*^9, 3.6944547325665536`*^9, 3.694466442526786*^9, 
   3.6945223338608465`*^9, {3.6949856861027207`*^9, 3.6949857105541196`*^9}, 
   3.6950388018372326`*^9, 3.6954806082584486`*^9, 3.6956610640576687`*^9, 
   3.6957405272518663`*^9, 3.695744642048219*^9, 3.6957455810119247`*^9, 
   3.6957543478775816`*^9, 3.695823597426736*^9, 3.6960779643362894`*^9, 
   3.696708829461217*^9, 3.702393191366446*^9, 3.710684965039612*^9}]
}, Closed]],

Cell["\<\
Solving expression 6 for se[2] (note we know ee1[1,1] can not satisfy this \
equation as it is not 0) and substituting back into the list of expressions\
\>", "Text",
 CellChangeTimes->{{3.692462622234806*^9, 3.6924626587068925`*^9}, {
  3.6924627152341256`*^9, 3.692462721978511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EquiList2a", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924626649802513`*^9, 3.692462709165778*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692462689914677*^9, 3.6924627096388054`*^9}, 
   3.6924628012710466`*^9, 3.6928801114414787`*^9, 3.6944547326133537`*^9, 
   3.694466442578789*^9, 3.694522333932851*^9, {3.694985686244729*^9, 
   3.694985710575121*^9}, 3.6950388018840327`*^9, 3.6954806083074512`*^9, 
   3.6956610641044683`*^9, 3.695740527299869*^9, 3.6957446489356127`*^9, 
   3.6957455810609274`*^9, 3.6957543479399815`*^9, 3.6958235974637384`*^9, 
   3.6960779643812923`*^9, 3.696708829492417*^9, 3.702393191488501*^9, 
   3.710684965081378*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiList2a", "/.", "subse2"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6924627293729343`*^9, 3.6924627352682714`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
   ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Tau]E", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"X", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
     "\[Tau]E"]}], ",", 
   RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692462731711068*^9, 3.692462735818303*^9}, 
   3.6924628030511484`*^9, 3.6928801114714785`*^9, 3.694454732675754*^9, 
   3.694466442621792*^9, 3.6945223339938545`*^9, {3.6949856864807425`*^9, 
   3.694985710599122*^9}, 3.6950388019152327`*^9, 3.6954806083694553`*^9, 
   3.6956610641356688`*^9, 3.6957405273548717`*^9, 3.695744677174228*^9, 
   3.6957455811119304`*^9, 3.6957543479867816`*^9, 3.6958235975047407`*^9, 
   3.696077964425295*^9, 3.696708829539217*^9, 3.702393191608029*^9, 
   3.710684965127017*^9}]
}, Closed]],

Cell["Solving expression 4 for se[1].", "Text",
 CellChangeTimes->{{3.6924627389154797`*^9, 3.692462757986571*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList2a", "/.", "subse2"}], ")"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924626649802513`*^9, 3.692462709165778*^9}, {
  3.692462784598093*^9, 3.692462799476944*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692462689914677*^9, 3.6924627096388054`*^9}, {
   3.692462797012803*^9, 3.692462805321278*^9}, 3.692880111511479*^9, 
   3.694454732738154*^9, 3.694466442663794*^9, 3.6945223340548573`*^9, {
   3.6949856886108646`*^9, 3.6949857106211233`*^9}, 3.6950388019620333`*^9, 
   3.695480608419458*^9, 3.6956610641668687`*^9, 3.6957405274108753`*^9, 
   3.695744683824609*^9, 3.695745581159933*^9, 3.695754348049182*^9, 
   3.695823597541743*^9, 3.696077964470297*^9, 3.6967088295704165`*^9, 
   3.702393191724298*^9, 3.710684965183404*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquiList2a", "/.", "subse2"}], "/.", "subse1"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6924627293729343`*^9, 3.6924627352682714`*^9}, {
  3.6924628071493826`*^9, 3.692462809308506*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", "\[Kappa]", " ", 
          RowBox[{"ee1", "[", 
           RowBox[{"1", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", "0", 
   ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]E"]}], ",", "0", ",", "0", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692462731711068*^9, 3.692462735818303*^9}, 
   3.6924628097175293`*^9, 3.692880111541479*^9, 3.6944547328161545`*^9, 
   3.6944664427067966`*^9, 3.6945223342078667`*^9, {3.6949856938971667`*^9, 
   3.694985710645125*^9}, 3.6950388019932327`*^9, 3.6954806084824615`*^9, 
   3.695661064213669*^9, 3.6957405274758787`*^9, 3.695744696119312*^9, 
   3.695745581209936*^9, 3.695754348111582*^9, 3.695823597588745*^9, 
   3.6960779645133*^9, 3.696708829601617*^9, 3.702393191791417*^9, 
   3.710684965231434*^9}]
}, Closed]],

Cell["\<\
Expression 3 is satisfied only when ee1[1,1]=0 which is not allowed hence \
there are no possible equilibria of this type.\
\>", "Text",
 CellChangeTimes->{{3.6924628164669156`*^9, 3.692462849378798*^9}}],

Cell[TextData[StyleBox["Option 2b: ee1[1,2]\[NotEqual]0",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.692462484405923*^9, 3.6924625046270795`*^9}, {
  3.692462877371399*^9, 3.6924628782804513`*^9}}],

Cell["\<\
We can simplify the equilibrium expressions given the assumptions of this \
option.\
\>", "Text",
 CellChangeTimes->{{3.6924625310025883`*^9, 3.692462563314436*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sub2b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6924625121325088`*^9, 3.69246252823743*^9}, {
  3.692462882878714*^9, 3.692462894781395*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList2b", "=", 
  RowBox[{
   RowBox[{"EquiList", "/.", "Sub2b"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6924625673046646`*^9, 3.6924625940211926`*^9}, {
  3.692462906829084*^9, 3.692462908205163*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"se", "[", "2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "d"}], "-", 
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], "+", 
            RowBox[{"se", "[", "1", "]"}], "+", 
            RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Tau]E", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
     "\[Tau]E"]}], ",", 
   RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "X"}], " ", "zI", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.692462594556223*^9, 3.6924626139473324`*^9}, 
   3.6924629088451996`*^9, 3.692880111611479*^9, 3.6944547329097548`*^9, 
   3.694466442784801*^9, 3.694522334301872*^9, {3.694985694086178*^9, 
   3.6949857106981277`*^9}, 3.6950388020712333`*^9, 3.695480608572467*^9, 
   3.6956610642760687`*^9, 3.695740527566884*^9, 3.6957447100631094`*^9, 
   3.6957455812879405`*^9, 3.695754348205182*^9, 3.6958235976627493`*^9, 
   3.6960779645903044`*^9, 3.6967088296640167`*^9, 3.7023931919166937`*^9, 
   3.710684965316175*^9}]
}, Closed]],

Cell["\<\
Solving expression 6 for se[2] and substituting back into the list of \
expressions\
\>", "Text",
 CellChangeTimes->{{3.692462622234806*^9, 3.6924626587068925`*^9}, {
   3.6924627152341256`*^9, 3.692462721978511*^9}, 3.692462928867345*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EquiList2b", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924626649802513`*^9, 3.692462709165778*^9}, 
   3.6924629342536526`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692462689914677*^9, 3.6924627096388054`*^9}, 
   3.6924628012710466`*^9, 3.6924629350676994`*^9, 3.692880111641479*^9, 
   3.6944547329721546`*^9, 3.6944664428298035`*^9, 3.6945223343588753`*^9, {
   3.694985694197184*^9, 3.6949857107191286`*^9}, 3.695038802102433*^9, 
   3.6954806086244698`*^9, 3.6956610643228693`*^9, 3.6957405276158867`*^9, 
   3.6957447157264333`*^9, 3.6957455813339434`*^9, 3.6957543482519817`*^9, 
   3.6958235977107525`*^9, 3.696077964635307*^9, 3.696708829695217*^9, 
   3.702393192055971*^9, 3.710684965367435*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiList2b", "/.", "subse2"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6924627293729343`*^9, 3.6924627352682714`*^9}, {
  3.692462937516839*^9, 3.692462939068928*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
   ",", 
   RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Tau]E", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
     "\[Tau]E"]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692462731711068*^9, 3.692462735818303*^9}, 
   3.6924628030511484`*^9, 3.692462939578957*^9, 3.692880111671479*^9, 
   3.6944547330345545`*^9, 3.6944664428958073`*^9, 3.694522334421879*^9, {
   3.6949856943771944`*^9, 3.6949857107431307`*^9}, 3.695038802149233*^9, 
   3.6954806086824727`*^9, 3.6956610643540688`*^9, 3.69574052766789*^9, 
   3.695744717220519*^9, 3.695745581383946*^9, 3.6957543483143826`*^9, 
   3.6958235977527547`*^9, 3.6960779648113165`*^9, 3.6967088297264175`*^9, 
   3.702393192139743*^9, 3.710684965410478*^9}]
}, Closed]],

Cell["Solving expression 3 for se[1].", "Text",
 CellChangeTimes->{{3.6924627389154797`*^9, 3.692462757986571*^9}, 
   3.692462973051872*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList2b", "/.", "subse2"}], ")"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924626649802513`*^9, 3.692462709165778*^9}, {
  3.692462784598093*^9, 3.692462799476944*^9}, {3.692462955661877*^9, 
  3.692462975485011*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692462689914677*^9, 3.6924627096388054`*^9}, {
   3.692462797012803*^9, 3.692462805321278*^9}, {3.6924629577459965`*^9, 
   3.6924629767130814`*^9}, 3.692880111701479*^9, 3.6944547331593547`*^9, 
   3.69446644294381*^9, 3.6945223344808817`*^9, {3.6949856966713257`*^9, 
   3.694985710765132*^9}, 3.6950388021804333`*^9, 3.6954806087334757`*^9, 
   3.6956610644008694`*^9, 3.695740527711892*^9, 3.695744728296152*^9, 
   3.6957455814319487`*^9, 3.6957543483767824`*^9, 3.695823597788757*^9, 
   3.696077964854319*^9, 3.696708829757617*^9, 3.702393192223692*^9, 
   3.710684965467676*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquiList2b", "/.", "subse2"}], "/.", "subse1"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6924627293729343`*^9, 3.6924627352682714`*^9}, {
   3.6924628071493826`*^9, 3.692462809308506*^9}, 3.692462982949438*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", "\[Kappa]", " ", 
          RowBox[{"ee1", "[", 
           RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}], ",", "0", 
   ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]E"]}], ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.694985710789133*^9, 3.6950388022116337`*^9, 
  3.6954806087944794`*^9, 3.6956610644320693`*^9, 3.6957405277608953`*^9, 
  3.6957447301542587`*^9, 3.695745581487952*^9, 3.6957543484391823`*^9, 
  3.695823597830759*^9, 3.6960779650293293`*^9, 3.6967088297888174`*^9, 
  3.702393192273901*^9, 3.710684965538992*^9}]
}, Closed]],

Cell["\<\
Expression 4 can only be satisfied when ee1[1,2]=0 which is not allowed, \
hence there are no equilibria of this type.\
\>", "Text",
 CellChangeTimes->{{3.6924629878667192`*^9, 3.692463012218112*^9}, 
   3.6929683749066105`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Option 3: Two infection types present (No solutions)", "Subsubsection",
 CellChangeTimes->{{3.6924630354984436`*^9, 3.6924630424588413`*^9}, {
  3.692473683963501*^9, 3.692473687866724*^9}}],

Cell["\<\
By relabeling 1s and 2s there are 4 possible ways to choose 2 solutions a) \
{ee1[1,1]\[NotEqual]0, ee1[1,2]\[NotEqual]0} b) {ee1[1,1]\[NotEqual]0, \
ee1[2,1]\[NotEqual]0} c) {ee1[1,1]\[NotEqual]0, ee1[2,2]\[NotEqual]0} or d) \
{ee1[1,2]\[NotEqual]0, ee1[2,1]\[NotEqual]0}\
\>", "Text",
 CellChangeTimes->{{3.6924631806987486`*^9, 3.6924632585402007`*^9}}],

Cell[TextData[{
 StyleBox["Option 3a:",
  FontWeight->"Bold"],
 " {ee1[1,1]\[NotEqual]0, ee1[1,2]\[NotEqual]0}"
}], "Text",
 CellChangeTimes->{{3.6924632685147715`*^9, 3.6924632828755927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sub3a", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.692470480232258*^9, 3.692470490629853*^9}, {
  3.6924706260245967`*^9, 3.692470628141718*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList3a", "=", 
  RowBox[{"EquiList", "/.", "Sub3a"}]}]], "Input",
 CellChangeTimes->{{3.6924704958341503`*^9, 3.69247051348516*^9}, 
   3.6924717623505907`*^9, {3.6957447859264483`*^9, 3.6957447869175053`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "+", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ee1", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "+", 
          RowBox[{"ee1", "[", 
           RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "d"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"se", "[", "2", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6924705078318367`*^9, 3.6924705141441975`*^9}, 
   3.692471763539659*^9, 3.692880111781479*^9, 3.694454733284155*^9, 
   3.6944664430428157`*^9, 3.6945223346098895`*^9, 3.694985710874138*^9, 
   3.6950388023208337`*^9, 3.695480608857483*^9, 3.6956610644788694`*^9, 
   3.6957405278699017`*^9, {3.6957447723906746`*^9, 3.6957447874625363`*^9}, 
   3.695745581595958*^9, 3.6957543485171824`*^9, 3.695823597875762*^9, 
   3.6960779650893326`*^9, 3.696708829835617*^9, 3.702393192360571*^9, 
   3.71068496560826*^9}]
}, Closed]],

Cell["Solving equation 6 for ee1[1,2]", "Text",
 CellChangeTimes->{{3.692470520883583*^9, 3.6924705351794004`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sub12", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EquiList3a", "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924705889574766`*^9, 3.6924706111587467`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ee1", "[", 
    RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"Y", " ", "\[Mu]", " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], 
    RowBox[{"X", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6924705988530426`*^9, 3.6924706118917885`*^9}, 
   3.692880111921479*^9, 3.6944547334713554`*^9, 3.694466443207825*^9, 
   3.6945223348239017`*^9, 3.694985710967143*^9, 3.695038802461234*^9, 
   3.6954806089384875`*^9, 3.6956610645880694`*^9, 3.6957405280049095`*^9, {
   3.6957447737757535`*^9, 3.695744789851673*^9}, 3.695745581643961*^9, 
   3.695754348626383*^9, 3.6958235979107637`*^9, 3.6960779651353354`*^9, 
   3.6967088298668175`*^9, 3.7023931924065123`*^9, 3.7106849656488333`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquiList", "/.", "Sub3a"}], "/.", "sub12"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.692470620989309*^9, 3.692470635037112*^9}, 
   3.6924707616863565`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"Y", " ", "\[Mu]"}], 
         RowBox[{"X", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    FractionBox[
     RowBox[{"zI", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["X", "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["Y", "2"], " ", "\[Mu]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}]]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"se", "[", "1", "]"}]}], "X"], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"Y", " ", "\[Mu]"}], 
           RowBox[{"X", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"Y", " ", "\[Mu]"}], 
              RowBox[{"X", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"se", "[", "2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "d"}], "-", 
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "-", 
      FractionBox[
       RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}]], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"Y", " ", "\[Mu]"}], 
                RowBox[{"X", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{"se", "[", "1", "]"}], "+", 
            RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Delta]"}], "-", 
      FractionBox["nE", "\[Tau]E"], "+", 
      FractionBox[
       RowBox[{"zI", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["X", "2"], "-", 
          RowBox[{
           SuperscriptBox["X", "2"], " ", "\[Mu]"}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}]]}], ")"}], " ", 
        RowBox[{"se", "[", "1", "]"}]}], "X"]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Mu]", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nE", " ", "Y"}], "+", 
        RowBox[{"\[Tau]E", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Y", " ", "\[Delta]"}], "-", 
           RowBox[{
            SuperscriptBox["X", "2"], " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["Y", "2"], " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Tau]E"}]]}], ",", 
   FractionBox[
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "\[Mu]"}]}], ")"}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "\[Mu]"}]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692470623019425*^9, 3.6924706358791604`*^9}, 
   3.6928801120614796`*^9, 3.6944547336273556`*^9, 3.694466443343833*^9, 
   3.694522334985911*^9, 3.6949857111221523`*^9, 3.695038802601634*^9, 
   3.6954806091555*^9, 3.6956610647128696`*^9, 3.6957405281969204`*^9, 
   3.6957447948439584`*^9, 3.695745582048984*^9, 3.6957543490163836`*^9, 
   3.6958235982967863`*^9, 3.6960779655723605`*^9, 3.696708830225618*^9, 
   3.702393192653059*^9, 3.710684965989826*^9}]
}, Closed]],

Cell["Solving equation 5 for se[2]", "Text",
 CellChangeTimes->{{3.6924706405884295`*^9, 3.6924706770435147`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subs2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EquiList", "/.", "Sub3a"}], "/.", "sub12"}], ")"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924706598385305`*^9, 3.6924706891502075`*^9}, {
  3.695744829822959*^9, 3.695744830680008*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.692470668413021*^9, 3.6924706896562366`*^9}, 
   3.6928801120914793`*^9, 3.6944547336897554`*^9, 3.6944664433878355`*^9, 
   3.6945223350489144`*^9, 3.6949857112671604`*^9, 3.6950388026328344`*^9, 
   3.695480609208503*^9, 3.69566106480647*^9, 3.6957405282469234`*^9, {
   3.6957448037654686`*^9, 3.695744831321045*^9}, 3.695745582094987*^9, 
   3.6957543490787835`*^9, 3.69582359836979*^9, 3.6960779656523647`*^9, 
   3.696708830288018*^9, 3.702393192735772*^9, 3.710684966031856*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"EquiList", "/.", "Sub3a"}], "/.", "sub12"}], "/.", "subs2"}], 
   ")"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.695744842285672*^9, 3.6957448526782665`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"Y", " ", "\[Mu]"}], 
         RowBox[{"X", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    FractionBox[
     RowBox[{"zI", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["X", "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["Y", "2"], " ", "\[Mu]"}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}]]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"se", "[", "1", "]"}]}], "X"], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"Y", " ", "\[Mu]"}], 
           RowBox[{"X", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"Y", " ", "\[Mu]"}], 
              RowBox[{"X", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
   ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Delta]"}], "-", 
      FractionBox["nE", "\[Tau]E"], "+", 
      FractionBox[
       RowBox[{"zI", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["X", "2"], "-", 
          RowBox[{
           SuperscriptBox["X", "2"], " ", "\[Mu]"}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}]]}], ")"}], " ", 
        RowBox[{"se", "[", "1", "]"}]}], "X"]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[Mu]", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nE", " ", "Y"}], "+", 
        RowBox[{"\[Tau]E", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Y", " ", "\[Delta]"}], "-", 
           RowBox[{
            SuperscriptBox["X", "2"], " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["Y", "2"], " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
            RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Tau]E"}]]}], ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.695744843797758*^9, 3.6957448534933133`*^9}, 
   3.695745582270997*^9, 3.6957543492503843`*^9, 3.695823598530799*^9, 
   3.696077965828375*^9, 3.696708830428418*^9, 3.702393192837916*^9, 
   3.710684966167941*^9}]
}, Closed]],

Cell["Solving equation 4 for se[1]", "Text",
 CellChangeTimes->{{3.6924707044440823`*^9, 3.692470714578662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subs1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"EquiList", "/.", "Sub3a"}], "/.", "sub12"}], "/.", 
         "subs2"}], ")"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.692470724477228*^9, 3.692470750276704*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"Y", " ", 
     RowBox[{"(", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["X", "2"], "-", 
       SuperscriptBox["Y", "2"]}], ")"}], " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Tau]E"}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.692470735249844*^9, 3.6924707506007223`*^9}, 
   3.69288011220248*^9, 3.694454733798956*^9, 3.694466443487841*^9, 
   3.694522335276928*^9, 3.6949857114121685`*^9, 3.6950388027108345`*^9, 
   3.6954806093195095`*^9, 3.69566106486887*^9, 3.695740528348929*^9, 
   3.6957448763876224`*^9, 3.6957455823169994`*^9, 3.695754349312784*^9, 
   3.6958235985728016`*^9, 3.6960779658723774`*^9, 3.6967088304596186`*^9, 
   3.702393192891168*^9, 3.7106849662099123`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EquiList", "/.", "Sub3a"}], "/.", "sub12"}], "/.", "subs2"}], "/.",
     "subs1"}], ")"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.692470769741817*^9, 3.6924707757501607`*^9}, {
  3.692470808560037*^9, 3.6924708100241213`*^9}, {3.6957448869752283`*^9, 
  3.6957448911104646`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"d", " ", "Y", " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["X", "2"]}], "+", 
        SuperscriptBox["Y", "2"]}], ")"}], " ", "zI", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Tau]E"}]], "-", 
    FractionBox[
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["X", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", "\[Mu]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["X", "2"], "-", 
        SuperscriptBox["Y", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Tau]E"}]], 
    "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"Y", " ", "\[Mu]"}], 
         RowBox[{"X", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"Y", " ", 
         RowBox[{"(", 
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["X", "2"], "-", 
           SuperscriptBox["Y", "2"]}], ")"}], " ", "zI", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Tau]E"}]], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"Y", " ", "\[Mu]"}], 
           RowBox[{"X", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"Y", " ", 
            RowBox[{"(", 
             RowBox[{"nE", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["X", "2"], "-", 
              SuperscriptBox["Y", "2"]}], ")"}], " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", "\[Tau]E"}]], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"Y", " ", "\[Mu]"}], 
              RowBox[{"X", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}]]}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["X", "3"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "+", 
        RowBox[{
         SuperscriptBox["X", "2"], " ", "Y", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
        RowBox[{"X", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"]}], "-", 
        RowBox[{
         SuperscriptBox["Y", "3"], " ", 
         SuperscriptBox["\[Mu]", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["X", "2"], "-", 
        SuperscriptBox["Y", "2"]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], " ", "\[Tau]E"}]]}],
    ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6924707706768703`*^9, 3.692470776210187*^9}, 
   3.692470811161186*^9, 3.692880113132481*^9, 3.694454734750558*^9, 
   3.6944664443988934`*^9, 3.694522336224982*^9, 3.6949857123362217`*^9, 
   3.695038803631236*^9, 3.6954806102715635`*^9, 3.6956610657736716`*^9, 
   3.695740529325985*^9, 3.695744892235529*^9, 3.6957455829080334`*^9, 
   3.695754349889985*^9, 3.695823599133834*^9, 3.6960779665214148`*^9, 
   3.696708831005619*^9, 3.702393193244532*^9, 3.7106849666718693`*^9}]
}, Closed]],

Cell["\<\
Expression 3 can only be satisfied ee1[1,1]=0 which is not allowed for the \
option.\
\>", "Text",
 CellChangeTimes->{{3.6924708193236527`*^9, 3.6924708578908587`*^9}, {
  3.692471083882785*^9, 3.692471087450989*^9}, {3.69247112226698*^9, 
  3.692471133834642*^9}}],

Cell[TextData[{
 StyleBox["Option 3b: ",
  FontWeight->"Bold"],
 " {ee1[1,1]\[NotEqual]0, ee1[2,1]\[NotEqual]0}"
}], "Text",
 CellChangeTimes->{{3.692471141740094*^9, 3.6924711472674103`*^9}, {
  3.6924714049171467`*^9, 3.692471407956321*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sub3b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.692470480232258*^9, 3.692470490629853*^9}, {
  3.6924706260245967`*^9, 3.692470628141718*^9}, {3.6924714189819517`*^9, 
  3.6924714219181194`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", "Sub3b"}]], "Input",
 CellChangeTimes->{{3.6924704958341503`*^9, 3.69247051348516*^9}, 
   3.692471425493324*^9, {3.6924717502468987`*^9, 3.692471755702211*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "2", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "2", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{"X", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{"X", " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "+", 
    RowBox[{"Y", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}]}], ",", 
   RowBox[{"Y", " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"zI", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6924705078318367`*^9, 3.6924705141441975`*^9}, 
   3.6924714263603735`*^9, {3.6924717510899467`*^9, 3.6924717561372356`*^9}, 
   3.6928801132124815`*^9, 3.694454734937758*^9, 3.6944664445749035`*^9, 
   3.6945223365159984`*^9, 3.6949857124642286`*^9, 3.695038803756036*^9, 
   3.695480610431573*^9, 3.6956610658516717`*^9, 3.695740529449992*^9, 
   3.695744917534976*^9, 3.6957455831910496`*^9, 3.6957543500147853`*^9, 
   3.695823599181836*^9, 3.696077966578418*^9, 3.6967088310524197`*^9, 
   3.7023931933193607`*^9, 3.710684966754634*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"subs2", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EquiList", "/.", "Sub3b"}], ")"}], "[", 
        RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.692471437317*^9, 3.692471486494813*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"EquiList", "/.", "Sub3b"}], "/.", "subs2"}], ")"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.692471491837118*^9, 3.692471497213426*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"2", ",", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}], "+", 
            RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "+", 
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"2", ",", "1"}], "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6924714977624574`*^9, 3.6928801133024817`*^9, 
  3.694454735046958*^9, 3.694466444671909*^9, 3.6945223366650066`*^9, 
  3.694985712569235*^9, 3.6950388038604383`*^9, 3.695480610543579*^9, 
  3.695661066179272*^9, 3.6957405295609984`*^9, 3.695744924405369*^9, 
  3.695745583291055*^9, 3.6957543501239853`*^9, 3.695823599277842*^9, 
  3.6960779667134256`*^9, 3.69670883114602*^9, 3.702393193437174*^9, 
  3.7106849668598337`*^9}]
}, Closed]],

Cell["\<\
Equation 5 can only be satisfied when ee1[2,1]=0 which is not allowed under \
this option\
\>", "Text",
 CellChangeTimes->{{3.6924715041148205`*^9, 3.6924715369466987`*^9}, {
  3.6924717069154205`*^9, 3.692471714042828*^9}}],

Cell[TextData[{
 StyleBox["Option 3c: ",
  FontWeight->"Bold"],
 " {ee1[1,1]\[NotEqual]0, ee1[2,2]\[NotEqual]0}"
}], "Text",
 CellChangeTimes->{{3.692471141740094*^9, 3.6924711472674103`*^9}, {
  3.6924714049171467`*^9, 3.692471407956321*^9}, {3.6924717261165185`*^9, 
  3.692471728955681*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sub3c", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.692470480232258*^9, 3.692470490629853*^9}, {
  3.6924706260245967`*^9, 3.692470628141718*^9}, {3.6924714189819517`*^9, 
  3.6924714219181194`*^9}, {3.692471739622291*^9, 3.6924717436535215`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", "Sub3c"}]], "Input",
 CellChangeTimes->{{3.6924717716931252`*^9, 3.6924717718131323`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "2", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], "+", 
       RowBox[{"se", "[", "2", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6924717721681523`*^9, 3.6928801133424816`*^9, 
  3.6944547351093583`*^9, 3.6944664447299123`*^9, 3.6945223367270107`*^9, 
  3.694985712639239*^9, 3.695038803907239*^9, 3.695480610624584*^9, 
  3.6956610662260723`*^9, 3.695740529625002*^9, 3.695744933458887*^9, 
  3.695745583339058*^9, 3.6957543501863856`*^9, 3.695823599399849*^9, 
  3.6960779667744293`*^9, 3.6967088311928196`*^9, 3.7023931935214233`*^9, 
  3.710684966942327*^9}]
}, Closed]],

Cell["Solving expression 6 for se[2]", "Text",
 CellChangeTimes->{{3.6924717837158127`*^9, 3.692471793123351*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subs2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList", "/.", "Sub3c"}], ")"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.69247179677956*^9, 3.6924718311015234`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], 
    RowBox[{"zI", " ", "\[Tau]E", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], "-", 
       RowBox[{"X", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6924718081772118`*^9, 3.692471831477545*^9}, 
   3.692471901779566*^9, 3.6928801133824816`*^9, 3.6944547351717587`*^9, 
   3.694466444775915*^9, 3.694522336770013*^9, 3.6949857126912413`*^9, 
   3.695038803938439*^9, 3.695480610683587*^9, 3.695661066288472*^9, 
   3.695740529677005*^9, 3.695744944564522*^9, 3.69574558337706*^9, 
   3.6957543502487855`*^9, 3.695823599444852*^9, 3.6960779668194313`*^9, 
   3.6967088312240195`*^9, 3.70239319357487*^9, 3.71068496698328*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"EquiList", "/.", "Sub3c"}], "/.", "subs2"}], ")"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6924718364048266`*^9, 3.692471844989318*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nE", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
            RowBox[{"ee1", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], 
           RowBox[{"zI", " ", "\[Tau]E", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Y", " ", "\[Mu]", " ", 
               RowBox[{"ee1", "[", 
                RowBox[{"1", ",", "1"}], "]"}]}], "-", 
              RowBox[{"X", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
               RowBox[{"ee1", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"2", ",", "2"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"], "-", 
      FractionBox[
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
       RowBox[{"zI", " ", "\[Tau]E", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y", " ", "\[Mu]", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "-", 
          RowBox[{"X", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"X", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}], 
       RowBox[{"\[Tau]E", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y", " ", "\[Mu]", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "-", 
          RowBox[{"X", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR", "+", 
         FractionBox[
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], 
          RowBox[{
           RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", "\[Tau]E", " ", 
            RowBox[{"ee1", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], "+", 
           RowBox[{"X", " ", "zI", " ", "\[Tau]E", " ", 
            RowBox[{"ee1", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "-", 
           RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", "\[Tau]E", " ", 
            RowBox[{"ee1", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"2", ",", "2"}], "]"}]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nE", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
              RowBox[{"ee1", "[", 
               RowBox[{"2", ",", "2"}], "]"}]}], 
             RowBox[{"zI", " ", "\[Tau]E", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Y", " ", "\[Mu]", " ", 
                 RowBox[{"ee1", "[", 
                  RowBox[{"1", ",", "1"}], "]"}]}], "-", 
                RowBox[{"X", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
                 RowBox[{"ee1", "[", 
                  RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], "+", 
            RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "-", 
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"2", ",", "2"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Y"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}], 
    RowBox[{"\[Tau]E", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "-", 
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.692471838243932*^9, 3.6924718464344006`*^9}, 
   3.6924719028096247`*^9, 3.6928801142624826`*^9, 3.69445473607656*^9, 
   3.694466445652965*^9, 3.6945223376670647`*^9, 3.6949857135912933`*^9, 
   3.6950388048276405`*^9, 3.695480611590639*^9, 3.695661067162074*^9, 
   3.695740530698063*^9, 3.6957449492907925`*^9, 3.695745584341115*^9, 
   3.695754351200387*^9, 3.6958236004049063`*^9, 3.69607796783849*^9, 
   3.6967088321288214`*^9, 3.702393194088849*^9, 3.710684967847497*^9}]
}, Closed]],

Cell["Solving expression 4 for se[1]", "Text",
 CellChangeTimes->{{3.6924718555319204`*^9, 3.692471863107354*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subs1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EquiList", "/.", "Sub3c"}], "/.", "subs2"}], ")"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924718759180865`*^9, 3.6924718955272083`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6924718906609297`*^9, 3.6924719042207055`*^9}, 
   3.692880114322483*^9, 3.6944547362013597`*^9, 3.6944664457909727`*^9, 
   3.694522337779071*^9, 3.694985713695299*^9, 3.6950388049212403`*^9, 
   3.695480611707646*^9, 3.695661067255674*^9, 3.695740530794069*^9, 
   3.6957449548531103`*^9, 3.6957455844181194`*^9, 3.695754351278387*^9, 
   3.6958236004789104`*^9, 3.6960779679194946`*^9, 3.6967088322848215`*^9, 
   3.702393194183074*^9, 3.710684967890951*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EquiList", "/.", "Sub3c"}], "/.", "subs2"}], "/.", "subs1"}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.6924719108850865`*^9, 3.6924719189415474`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"2", ",", "2"}], "]"}]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nE", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
              RowBox[{"ee1", "[", 
               RowBox[{"2", ",", "2"}], "]"}]}], 
             RowBox[{"zI", " ", "\[Tau]E", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Y", " ", "\[Mu]", " ", 
                 RowBox[{"ee1", "[", 
                  RowBox[{"1", ",", "1"}], "]"}]}], "-", 
                RowBox[{"X", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
                 RowBox[{"ee1", "[", 
                  RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"ee1", "[", 
     RowBox[{"2", ",", "2"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"], "-", 
      FractionBox[
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
       RowBox[{"zI", " ", "\[Tau]E", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y", " ", "\[Mu]", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "-", 
          RowBox[{"X", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"X", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}], 
       RowBox[{"\[Tau]E", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Y", " ", "\[Mu]", " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "-", 
          RowBox[{"X", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zE", "+", "zI", "+", "zR", "+", 
         FractionBox[
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], 
          RowBox[{
           RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", "\[Tau]E", " ", 
            RowBox[{"ee1", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}], "+", 
           RowBox[{"X", " ", "zI", " ", "\[Tau]E", " ", 
            RowBox[{"ee1", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], "-", 
           RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", "\[Tau]E", " ", 
            RowBox[{"ee1", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}]}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ee1", "[", 
              RowBox[{"2", ",", "2"}], "]"}]}], "+", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nE", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
              RowBox[{"ee1", "[", 
               RowBox[{"2", ",", "2"}], "]"}]}], 
             RowBox[{"zI", " ", "\[Tau]E", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Y", " ", "\[Mu]", " ", 
                 RowBox[{"ee1", "[", 
                  RowBox[{"1", ",", "1"}], "]"}]}], "-", 
                RowBox[{"X", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
                 RowBox[{"ee1", "[", 
                  RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"1", ",", "1"}], "]"}]}], ",", "0", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"nE", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"2", ",", "2"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Y"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}], 
    RowBox[{"\[Tau]E", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "-", 
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ")"}]}]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6924719135392385`*^9, 3.6924719199956074`*^9}, 
   3.6928801148824835`*^9, 3.694454736778561*^9, 3.6944664463420043`*^9, 
   3.6945223383391027`*^9, 3.694985714274332*^9, 3.6950388054828415`*^9, 
   3.695480612287679*^9, 3.695661067801675*^9, 3.6957405313691015`*^9, 
   3.6957449566222115`*^9, 3.6957455850711565`*^9, 3.695754351917989*^9, 
   3.6958236011599493`*^9, 3.6960779685965333`*^9, 3.696708832893223*^9, 
   3.7023931945351133`*^9, 3.7106849684553432`*^9}]
}, Closed]],

Cell["\<\
Expression 3 can only be satisfied when ee1[1,1]=0 which is not allowed.\
\>", "Text",
 CellChangeTimes->{{3.6924719320592976`*^9, 3.6924719606109304`*^9}}],

Cell[TextData[{
 StyleBox["Option 3d: ",
  FontWeight->"Bold"],
 " {ee1[1,2]\[NotEqual]0, ee1[2,1]\[NotEqual]0}"
}], "Text",
 CellChangeTimes->{{3.692471141740094*^9, 3.6924711472674103`*^9}, {
  3.6924714049171467`*^9, 3.692471407956321*^9}, {3.6924717261165185`*^9, 
  3.692471728955681*^9}, {3.6924719867884283`*^9, 3.692471997628048*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sub3d", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.692470480232258*^9, 3.692470490629853*^9}, {
  3.6924706260245967`*^9, 3.692470628141718*^9}, {3.6924714189819517`*^9, 
  3.6924714219181194`*^9}, {3.692471739622291*^9, 3.6924717436535215`*^9}, {
  3.6924719989661245`*^9, 3.6924720033103733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", "Sub3d"}]], "Input",
 CellChangeTimes->{{3.692472007942638*^9, 3.6924720081166477`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "2", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "2", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "+", 
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "+", 
      RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6924720083896637`*^9, 3.6928801149224834`*^9, 
  3.6944547368409615`*^9, 3.6944664463980074`*^9, 3.6945223383931055`*^9, 
  3.694985714348336*^9, 3.6950388055296416`*^9, 3.695480612354683*^9, 
  3.695661067864075*^9, 3.6957405314281054`*^9, 3.695744973736191*^9, 
  3.69574558512916*^9, 3.6957543519803886`*^9, 3.6958236012219534`*^9, 
  3.6960779686695375`*^9, 3.6967088329400225`*^9, 3.702393194608667*^9, 
  3.710684968510565*^9}]
}, Closed]],

Cell["Solving expression 6 for se[2]", "Text",
 CellChangeTimes->{{3.6924720120838747`*^9, 3.692472020059331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subs2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList", "/.", "Sub3d"}], ")"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924720228954935`*^9, 3.692472042006586*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6924720309699554`*^9, 3.692472042338605*^9}, 
   3.6928801149524837`*^9, 3.694454736872161*^9, 3.6944664465400157`*^9, 
   3.694522338435108*^9, 3.6949857143983393`*^9, 3.695038805576442*^9, 
   3.6954806124086857`*^9, 3.695661067895275*^9, 3.6957405314761076`*^9, 
   3.6957449768083663`*^9, 3.695745585174163*^9, 3.695754352011589*^9, 
   3.6958236012649555`*^9, 3.696077968728541*^9, 3.696708832986823*^9, 
   3.7023931946764507`*^9, 3.7106849685618553`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"EquiList", "/.", "Sub3d"}], "/.", "subs2"}], ")"}]], "Input",
 CellChangeTimes->{{3.6924720474448977`*^9, 3.692472048604964*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "\[Tau]R"], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"2", ",", "1"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ee1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Y", " ", "zI", " ", "\[Mu]", " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "+", 
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
       RowBox[{"ee1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
    RowBox[{"se", "[", "1", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
     RowBox[{"ee1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"X", " ", "zI", " ", "\[Mu]", " ", 
        RowBox[{"ee1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nE", "\[Tau]E"]}], ")"}]}], " ", 
    RowBox[{"ee1", "[", 
     RowBox[{"2", ",", "1"}], "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.69247204888698*^9, 3.692880114982484*^9, 
  3.6944547369189615`*^9, 3.69446644661602*^9, 3.6945223384781103`*^9, 
  3.6949857144483423`*^9, 3.6950388056076417`*^9, 3.6954806124626894`*^9, 
  3.6956610679420753`*^9, 3.695740531653118*^9, 3.695744979508521*^9, 
  3.6957455852191653`*^9, 3.6957543520583887`*^9, 3.6958236013049583`*^9, 
  3.6960779687955446`*^9, 3.6967088330180225`*^9, 3.702393194744282*^9, 
  3.710684968611528*^9}]
}, Closed]],

Cell["\<\
Expression 5 can only be satisfied when ee1[2,1]=0 which is not allowed under \
this condition\
\>", "Text",
 CellChangeTimes->{{3.692472054243286*^9, 3.692472070435212*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Option 4: Three infections present (No solutions)", "Subsubsection",
 CellChangeTimes->{{3.6924720828909245`*^9, 3.692472089067278*^9}, {
   3.6924736901258535`*^9, 3.6924737147472615`*^9}, 3.6933338134365673`*^9, {
   3.694522371055974*^9, 3.6945223773113317`*^9}}],

Cell["\<\
As with the SIR model, since the presence of three equilibrium types ensures \
that neither X nor Y is zero we know that it is impossible to have an \
equilibrium with only three infection types.\
\>", "Text",
 CellChangeTimes->{{3.693333816057372*^9, 3.693333856942445*^9}, {
   3.6933341884867754`*^9, 3.693334209689213*^9}, 3.6958226002777023`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Option 5: All infection types present (2 equilibria)", "Subsubsection",
 CellChangeTimes->{{3.692473462515835*^9, 3.6924734687951937`*^9}, 
   3.692473706482789*^9, {3.6945223802805014`*^9, 3.6945223877199273`*^9}}],

Cell["\<\
Given our assumption of a perfectly symmetric \[Beta] matrix our system of \
equations has a lot of symmetry.  As a consequence if all infection types are \
present they must be so symmetrically such that ee1[1,1]=ee1[2,2]=eeX and \
ee1[1,2]=ee1[2,1]=eeY and se[1]=se[2]=sequ.  \
\>", "Text",
 CellChangeTimes->{{3.692473621322918*^9, 3.6924736816593695`*^9}, {
  3.6924737319852476`*^9, 3.6924737359154725`*^9}, {3.6924741693472633`*^9, 
  3.6924742079404707`*^9}, {3.6924742708960714`*^9, 3.6924742831967754`*^9}, {
  3.69296839611088*^9, 3.692968408934102*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sub5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "eeX"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "eeX"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "eeY"}], ",", 
     RowBox[{
      RowBox[{"ee1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "eeY"}], ",", 
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", "sequ"}], ",", 
     RowBox[{
      RowBox[{"se", "[", "2", "]"}], "\[Rule]", "sequ"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.69247421089664*^9, 3.6924742949204454`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", "Sub5"}]], "Input",
 CellChangeTimes->{{3.692474252419015*^9, 3.6924742659577894`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "d"}], " ", "sequ"}], "-", 
    RowBox[{"sequ", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"eeX", " ", "X", " ", "zI"}], "+", 
       RowBox[{"eeY", " ", "X", " ", "zI"}], "+", 
       RowBox[{"eeX", " ", "Y", " ", "zI"}], "+", 
       RowBox[{"eeY", " ", "Y", " ", "zI"}]}], ")"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{"sequ", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eeX", "+", "eeY"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "sequ"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"eeX", "+", "eeY"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}]}], ")"}], " ", 
        "\[Kappa]"}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"eeX", "+", "eeY"}], ")"}], " ", "nR", " ", "znR"}], 
     "\[Tau]R"]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "d"}], " ", "sequ"}], "-", 
    RowBox[{"sequ", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"eeX", " ", "X", " ", "zI"}], "+", 
       RowBox[{"eeY", " ", "X", " ", "zI"}], "+", 
       RowBox[{"eeX", " ", "Y", " ", "zI"}], "+", 
       RowBox[{"eeY", " ", "Y", " ", "zI"}]}], ")"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{"sequ", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"eeX", "+", "eeY"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "sequ"}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"eeX", "+", "eeY"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}]}], ")"}], " ", 
        "\[Kappa]"}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"eeX", "+", "eeY"}], ")"}], " ", "nR", " ", "znR"}], 
     "\[Tau]R"]}], ",", 
   RowBox[{
    RowBox[{"sequ", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
       RowBox[{"Y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "-", 
    RowBox[{"eeX", " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nE", "\[Tau]E"]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"sequ", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "-", 
    RowBox[{"eeY", " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nE", "\[Tau]E"]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"sequ", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "-", 
    RowBox[{"eeY", " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nE", "\[Tau]E"]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"sequ", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}]}], "+", 
       RowBox[{"Y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"eeX", " ", "zI"}], "+", 
          RowBox[{"eeY", " ", "zI"}]}], ")"}], " ", "\[Mu]"}]}], ")"}]}], "-", 
    RowBox[{"eeX", " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nE", "\[Tau]E"]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.692474257350297*^9, 3.6924742672208614`*^9}, 
   3.6924742978956156`*^9, 3.6928801505275345`*^9, 3.6944547369813614`*^9, 
   3.6944664466760235`*^9, 3.6945223385311136`*^9, 3.694985714502345*^9, 
   3.695038805654442*^9, 3.695480637409116*^9, 3.6956610680044756`*^9, 
   3.695740531720122*^9, 3.695745000390715*^9, 3.6957455852701683`*^9, 
   3.6957543710236254`*^9, 3.695823601360961*^9, 3.6960779688625484`*^9, 
   3.696708833064823*^9, 3.702393194893664*^9, 3.7023932963481293`*^9, 
   3.710684968691165*^9}]
}, Closed]],

Cell["Solving expression 6 for sequ", "Text",
 CellChangeTimes->{{3.692474301227806*^9, 3.69247432069992*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subsequ", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList", "/.", "Sub5"}], ")"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", "sequ"}], 
    "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6924743247231503`*^9, 3.69247436073421*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"sequ", "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"eeX", " ", 
      RowBox[{"(", 
       RowBox[{"nE", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"eeX", "+", "eeY"}], ")"}], " ", "zI", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "X"}], "+", 
        RowBox[{"X", " ", "\[Mu]"}], "-", 
        RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", "\[Tau]E"}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6924743554599085`*^9, 3.6924743612622404`*^9}, 
   3.6928801505675344`*^9, 3.6944547370281615`*^9, 3.694466446806031*^9, 
   3.6945223385771165`*^9, 3.694985714559348*^9, 3.6950388056856422`*^9, 
   3.695480637450118*^9, 3.6956610680512753`*^9, 3.6957405318111267`*^9, 
   3.6957450039539185`*^9, 3.695745585312171*^9, 3.6957543722584286`*^9, 
   3.695823601405964*^9, 3.6960779689455533`*^9, 3.696708833111623*^9, 
   3.702393194959895*^9, 3.702393296395686*^9, 3.710684968733231*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"EquiList", "/.", "Sub5"}], "/.", "subsequ"}], ")"}], "//", 
  "Factor"}]], "Input",
 CellChangeTimes->{{3.6924743676136036`*^9, 3.6924743788052435`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["eeX", "3"], " ", "nR", " ", 
               SuperscriptBox["X", "2"], " ", 
               SuperscriptBox["zI", "2"], " ", "znR", " ", 
               SuperscriptBox["\[Tau]E", "2"]}], "+", 
              RowBox[{"3", " ", 
               SuperscriptBox["eeX", "2"], " ", "eeY", " ", "nR", " ", 
               SuperscriptBox["X", "2"], " ", 
               SuperscriptBox["zI", "2"], " ", "znR", " ", 
               SuperscriptBox["\[Tau]E", "2"]}], "+", 
              TemplateBox[{"600"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, 
                 FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                 RoundingRadius -> 7]& )]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"eeX", "+", "eeY"}], ")"}], "2"], " ", 
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "X"}], "+", 
                 RowBox[{"X", " ", "\[Mu]"}], "-", 
                 RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
              SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], ")"}]}], ",", 
           FractionBox[
            RowBox[{
             RowBox[{
              SuperscriptBox["eeX", "3"], " ", "nR", " ", 
              SuperscriptBox["X", "2"], " ", 
              SuperscriptBox["zI", "2"], " ", "znR", " ", 
              SuperscriptBox["\[Tau]E", "2"]}], "+", 
             TemplateBox[{"601"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )]}], 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"eeX", "+", "eeY"}], ")"}], "2"], " ", 
             SuperscriptBox["zI", "2"], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "X"}], "+", 
                RowBox[{"X", " ", "\[Mu]"}], "-", 
                RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
             SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}]], ",", "0", ",", 
           RowBox[{"-", 
            FractionBox[
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )], 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, 
                FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                RoundingRadius -> 7]& )]]}], ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, 
                  FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                  RoundingRadius -> 7]& )], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"nE", "+", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, 
                   FrameMargins -> {{1, 1}, {1, 2}}, FrameStyle -> None, 
                   RoundingRadius -> 7]& )]}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "X"}], "+", 
                RowBox[{"X", " ", "\[Mu]"}], "-", 
                RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", "\[Tau]E"}]]}], 
           ",", "0"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{38.0244140625, {1., 5.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{34.41015625, {0., 5.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 60, 18858303142472689826, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{38.0029296875, {0., 5.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 60, 18858303142472689826, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{28.40234375, {0., 5.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 60, 18858303142472689826, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{48.8115234375, {0., 5.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[60]]], "Output",
 CellChangeTimes->{{3.692474369777727*^9, 3.692474379575288*^9}, 
   3.6928801510675354`*^9, 3.694454737512762*^9, 3.6944664472290554`*^9, 
   3.6945223390461435`*^9, 3.6949857150073743`*^9, 3.6950388061068425`*^9, 
   3.6954806378931437`*^9, 3.6956610685192766`*^9, 3.6957405322751536`*^9, 
   3.695745007092098*^9, 3.695745585782198*^9, 3.695823601887991*^9, 
   3.6960779694345813`*^9, 3.696708833626424*^9, 3.702393195163527*^9, 
   3.702393296587839*^9, 3.710684969074801*^9}]
}, Closed]],

Cell["Solving expression 5 for eeY", "Text",
 CellChangeTimes->{{3.692474392483026*^9, 3.692474399459425*^9}, {
  3.6924744505553474`*^9, 3.69247445199543*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subY", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EquiList", "/.", "Sub5"}], "/.", "subsequ"}], ")"}], "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", "0"}], ",", "eeY"}], 
     "]"}], "//", "Simplify"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.692474404884735*^9, 3.6924744556296377`*^9}, {
  3.6945231015477557`*^9, 3.69452310424291*^9}, {3.695754374133833*^9, 
  3.695754375257035*^9}, {3.6958236288455334`*^9, 3.695823630901651*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"eeY", "\[Rule]", 
   FractionBox[
    RowBox[{"eeX", " ", 
     RowBox[{"(", 
      RowBox[{"Y", "+", 
       RowBox[{"X", " ", "\[Mu]"}], "-", 
       RowBox[{"Y", " ", "\[Mu]"}]}], ")"}]}], 
    RowBox[{"X", "-", 
     RowBox[{"X", " ", "\[Mu]"}], "+", 
     RowBox[{"Y", " ", "\[Mu]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6924744395507183`*^9, 3.692474456042661*^9}, 
   3.692880151127535*^9, 3.6944547376375628`*^9, 3.694466447297059*^9, 
   3.694522339181151*^9, 3.6945231048309436`*^9, 3.6949857151323814`*^9, 
   3.695038806247243*^9, 3.6954806379731483`*^9, 3.695661068628476*^9, 
   3.695740532354158*^9, 3.695745012336398*^9, 3.695745585891204*^9, 
   3.695754375896636*^9, 3.695823602015999*^9, {3.696077969519586*^9, 
   3.69607797657999*^9}, 3.696708833720024*^9, 3.702393195246708*^9, 
   3.7023932966449747`*^9, 3.7106849691442957`*^9}]
}, Closed]],

Cell["Solving equation 2 for eeX", "Text",
 CellChangeTimes->{{3.6924744809230843`*^9, 3.692474495515919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subX", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"EquiList", "/.", "Sub5"}], "/.", "subsequ"}], "/.", 
             "subY"}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "//", "Factor"}], "//", 
         "Numerator"}], ")"}], "\[Equal]", "0"}], ",", "eeX"}], "]"}], "//", 
    "Flatten"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.692474461580978*^9, 3.692474501934286*^9}, 
   3.6924745440786967`*^9, {3.692474624446294*^9, 3.692474640422207*^9}, 
   3.6924746932392282`*^9, {3.692475034536749*^9, 3.692475055438945*^9}, {
   3.6928802022546077`*^9, 3.69288020396461*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"eeX", "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nR", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "+", "Y"}], ")"}], "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "znR", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
            RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", 
          SuperscriptBox["\[Tau]E", "2"]}], "+", 
         RowBox[{"nE", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"nE", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"nE", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"nE", " ", 
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Kappa]", " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Kappa]", " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["Y", "3"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["Y", "4"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["Y", "3"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], "5"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"X", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
               RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["nR", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
               SuperscriptBox["znR", "2"], " ", 
               SuperscriptBox["\[Tau]E", "2"]}], "-", 
              RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]E", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"nE", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]E"}]}], ")"}], " ", 
               "\[Tau]R"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["nE", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"8", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}], "-", 
                 RowBox[{"2", " ", "nE", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]E"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}], "-", 
                    "\[Delta]"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], 
                   ")"}], " ", 
                  SuperscriptBox["\[Tau]E", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "b", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"X", "+", "Y"}], ")"}], "4"], " ", 
         SuperscriptBox["zI", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]",
          " ", 
         SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], ")"}]}], ")"}]}]}],
    ",", 
   RowBox[{"eeX", "\[Rule]", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nR", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "+", "Y"}], ")"}], "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "znR", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
            RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", 
          SuperscriptBox["\[Tau]E", "2"]}], "+", 
         RowBox[{"nE", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"nE", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Kappa]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"nE", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "+", 
         RowBox[{"nE", " ", 
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", "\[Tau]E", " ", 
          "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Kappa]", " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", "zI", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Mu]", " ", 
          "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Kappa]", " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "nE", " ", 
          SuperscriptBox["Y", "3"], " ", "zI", " ", "zR", " ", "\[Kappa]", 
          " ", "\[Mu]", " ", "\[Tau]E", " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"3", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["X", "2"], " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"8", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["Y", "4"], " ", "zE", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "3"], " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
          SuperscriptBox["X", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["X", "3"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"2", " ", "X", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{
          SuperscriptBox["Y", "4"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zE", " ", "zI", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["Y", "3"], " ", "zE", " ", "zI", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["Y", "3"], " ", 
          SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
          "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "3"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["X", "2"], " ", "Y", " ", "zI", " ", "zR", " ", 
          "\[Delta]", " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", "X", " ", 
          SuperscriptBox["Y", "2"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["Y", "3"], " ", "zI", " ", "zR", " ", "\[Delta]", 
          " ", "\[Kappa]", " ", "\[Mu]", " ", 
          SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], "5"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"X", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
               RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
            SuperscriptBox["\[Tau]E", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["nR", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
               SuperscriptBox["znR", "2"], " ", 
               SuperscriptBox["\[Tau]E", "2"]}], "-", 
              RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]E", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"nE", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]E"}]}], ")"}], " ", 
               "\[Tau]R"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["nE", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"8", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}], "-", 
                 RowBox[{"2", " ", "nE", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                    "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]E"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
                    "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}]}], "-", 
                    "\[Delta]"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], 
                   ")"}], " ", 
                  SuperscriptBox["\[Tau]E", "2"]}]}], ")"}], " ", 
               SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", "b", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"X", "+", "Y"}], ")"}], "4"], " ", 
         SuperscriptBox["zI", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]",
          " ", 
         SuperscriptBox["\[Tau]E", "2"], " ", "\[Tau]R"}], ")"}]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.692474463448085*^9, 3.6924744751847563`*^9}, 
   3.6924745353301964`*^9, 3.6924745781676464`*^9, 3.6924746365299845`*^9, 
   3.6924746677197685`*^9, 3.692474732690485*^9, {3.692475037440915*^9, 
   3.692475056295994*^9}, 3.6928801866635857`*^9, 3.6928835574174395`*^9, 
   3.694454772296074*^9, 3.6944664822380576`*^9, 3.6945223739301386`*^9, {
   3.694985747559236*^9, 3.694985757386798*^9}, 3.6950388413895054`*^9, 
   3.6954806726961346`*^9, 3.6956611026883364`*^9, 3.6957405689612517`*^9, 
   3.6957450537367663`*^9, 3.6957450940500717`*^9, {3.6957456096755643`*^9, 
   3.6957456261495066`*^9}, 3.695754409730302*^9, {3.6958236263623915`*^9, 
   3.6958236443804216`*^9}, 3.696077974023844*^9, 3.696078013283089*^9, 
   3.6967088659808807`*^9, 3.702393206098257*^9, 3.7023933985127687`*^9, 
   3.7106850643785257`*^9, 3.710685171055287*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Biological Validity of Endemic Equilibria", "Subsubsection",
 CellChangeTimes->{{3.6954806181630154`*^9, 3.695480628890629*^9}}],

Cell["\<\
As we have done in the previous epidemiological models we can identify the \
conditions under which only one of these endemic equilibria is biologically \
valid and ensure that in all cases where this is not true that neither \
equilibria are biologically valid.\
\>", "Text",
 CellChangeTimes->{{3.694985559057454*^9, 3.694985658184124*^9}, {
  3.695480649426803*^9, 3.695480716994668*^9}, {3.695822606821077*^9, 
  3.6958226186617537`*^9}}],

Cell[TextData[StyleBox["Condition for only one biologically valid equilibrium",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.695480723011012*^9, 3.695480733074588*^9}}],

Cell[TextData[{
 "At the endemic equilibrium eeX must satisfy the following quadratic.  By \
dividing through by the coefficient of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["eeX", "2"], TraditionalForm]]],
 " we have ensured that the quadratic is upward facing."
}], "Text",
 CellChangeTimes->{{3.694985664791502*^9, 3.694985676047146*^9}, {
  3.6949858053195395`*^9, 3.6949858100408096`*^9}, {3.695480802802576*^9, 
  3.6954808528834405`*^9}, {3.6958226207898755`*^9, 3.6958226316054945`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quad", "[", "eeXs_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EquiList", "/.", "Sub5"}], "/.", "subsequ"}], "/.", 
          "subY"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], 
      RowBox[{"Simplify", "[", 
       RowBox[{"Coefficient", "[", 
        RowBox[{
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"EquiList", "/.", "Sub5"}], "/.", "subsequ"}], "/.", 
             "subY"}], ")"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
         SuperscriptBox["eeX", "2"]}], "]"}], "]"}]], ",", "eeX", ",", 
     "Simplify"}], "]"}], "/.", 
   RowBox[{"eeX", "\[Rule]", "eeXs"}]}]}]], "Input",
 CellChangeTimes->{{3.6945225503972316`*^9, 3.6945225700973587`*^9}, {
   3.6945226142278824`*^9, 3.6945226214492955`*^9}, {3.6949857723026514`*^9, 
   3.694985803277423*^9}, {3.695480856416642*^9, 3.6954808881364565`*^9}, 
   3.6957547465240574`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quad", "[", "eeX", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["eeX", "2"], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
       RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{"nE", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]E"}], "-", 
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]E"}], "-", 
      RowBox[{"2", " ", "b", " ", "\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"nE", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"2", " ", "b", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X", "+", "Y"}], ")"}], "4"], " ", 
    SuperscriptBox["zI", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox["\[Tau]E", "2"]}]], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"eeX", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
        RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "znR", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", 
          RowBox[{"X", " ", "\[Mu]"}], "+", 
          RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", "\[Tau]E"}], "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", 
          RowBox[{"X", " ", "\[Mu]"}], "+", 
          RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", "\[Tau]E", " ", 
        "\[Tau]R"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}]}], "-", 
          RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", "\[Tau]R"}], 
       "-", 
       RowBox[{"4", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", 
          RowBox[{"X", " ", "\[Mu]"}], "+", 
          RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}], ")"}], " ", "\[Tau]R"}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", "b", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"zE", "+", "zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
     " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", 
        RowBox[{"X", " ", "\[Mu]"}], "+", 
        RowBox[{"Y", " ", "\[Mu]"}]}], ")"}], "2"], " ", "\[Tau]E", " ", 
     "\[Tau]R"}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.695745145550018*^9, 3.695745641756399*^9, 
  3.695754757800688*^9, 3.695823645361478*^9, 3.69607801434415*^9, 
  3.6967088669012823`*^9, 3.7106851718973217`*^9}]
}, Closed]],

Cell["\<\
If the Y-intercept of this quadratic is negative than the one equilibrium is \
guaranteed to be negative (biologically invalid) and one positive \
(biologically valid).  We solve for the critical value of b for which the \
Y-intercept is 0\
\>", "Text",
 CellChangeTimes->{{3.6954809057714653`*^9, 3.6954809667309523`*^9}, 
   3.6958226340376334`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcrit", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Simplify", "[", 
         RowBox[{
          RowBox[{"Quad", "[", "0", "]"}], "/.", "zsub"}], "]"}], ")"}], 
       "\[Equal]", "0"}], ",", "b"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6945226663318624`*^9, 3.6945226918113203`*^9}, {
  3.6945228767879*^9, 3.694522896526029*^9}, {3.69452351807658*^9, 
  3.6945235359956045`*^9}, {3.694985818914317*^9, 3.6949858525392404`*^9}, {
  3.695039920080455*^9, 3.695039920392455*^9}, {3.6954809779985967`*^9, 
  3.695481016677809*^9}, {3.6956685263014646`*^9, 3.6956685280165625`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", "\[Rule]", 
   FractionBox[
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{"X", "+", "Y"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox["nE", 
        RowBox[{"nE", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nI", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
    RowBox[{
     RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"X", "+", "Y"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nE", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
       ")"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.69452268254379*^9, 3.69452269233535*^9}, 
   3.6945228977480993`*^9, {3.69452351983368*^9, 3.6945235387477617`*^9}, {
   3.694985826899774*^9, 3.694985856338458*^9}, 3.695038846849515*^9, 
   3.6950399336535306`*^9, {3.6954810016679506`*^9, 3.6954810171948385`*^9}, 
   3.695661105792742*^9, 3.6956685309707317`*^9, 3.69574057207043*^9, 
   3.6957451716815124`*^9, 3.6957456433784924`*^9, 3.695754765622103*^9, 
   3.6958236470055723`*^9, 3.6960780160792494`*^9, 3.6967088685080853`*^9, 
   3.7106851736546803`*^9}]
}, Closed]],

Cell["\<\
When b is greater than this critical value the Y-intercept will be negative \
and hence only a single endemic equilibrium will be biologically valid.  \
Below we show that when b is less than this critical value the slope of the \
quadratic at eeX=0 is positive and hence both endemic equilibria are \
biologically invalid.\
\>", "Text",
 CellChangeTimes->{{3.6954811083710537`*^9, 3.695481205762624*^9}, {
  3.695822636037748*^9, 3.6958226373338223`*^9}}],

Cell["\<\
Numerical demonstration that both equilibria are not biologically valid\
\>", "Text",
 CellChangeTimes->{{3.6954807898098326`*^9, 3.695480794547104*^9}},
 FontWeight->"Bold"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Slope", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Quad", "[", "eeX", "]"}], ",", "eeX"}], "]"}], "/.", 
      RowBox[{"eeX", "\[Rule]", "0"}]}], "/.", "zsub"}], "//", "Simplify"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.695481409950303*^9, 3.695481436044795*^9}, {
  3.6954814681496315`*^9, 3.695481469397703*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nEs", ",", "nIs", ",", "nRs", ",", "\[Tau]Es", ",", "\[Tau]Is", ",", 
     "\[Tau]Rs", ",", "bs", ",", "ds", ",", "\[Delta]s", ",", "Xs", ",", "Ys",
      ",", "\[Mu]s", ",", "c", ",", "parsSub"}], "}"}], ",", 
   RowBox[{
    RowBox[{"NegList", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"PosList", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"c", "=", "1"}], ",", 
      RowBox[{"c", "\[LessEqual]", "5000"}], ",", 
      RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Drawing", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nEs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"nIs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"nRs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]Es", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "40"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Tau]Is", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "40"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Tau]Rs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"20", ",", "100"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ds", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.001", ",", "0.01"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Delta]s", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"ds", ",", 
            RowBox[{"ds", "+", "0.1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Xs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.5"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"Ys", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", 
            RowBox[{"Xs", "-", "0.01"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Mu]s", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "10"}]], ",", 
            SuperscriptBox["10", 
             RowBox[{"-", "4"}]]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nE", "\[Rule]", "nEs"}], ",", 
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]E", "\[Rule]", "\[Tau]Es"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "1"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"X", "\[Rule]", "Xs"}], ",", 
          RowBox[{"Y", "\[Rule]", "Ys"}], ",", 
          RowBox[{"\[Mu]", "\[Rule]", "\[Mu]s"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"ds", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"d", " ", 
                 RowBox[{"(", 
                  RowBox[{"X", "+", "Y"}], ")"}], " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   FractionBox["nE", 
                    RowBox[{"nE", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["nI", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
                  ")"}]}], 
                RowBox[{
                 RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"X", "+", "Y"}], ")"}], " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox["nE", 
                    RowBox[{"nE", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["nI", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
                   ")"}]}]}]], "/.", "parsSub"}], ",", "0"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nE", "\[Rule]", "nEs"}], ",", 
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]E", "\[Rule]", "\[Tau]Es"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "bs"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"X", "\[Rule]", "Xs"}], ",", 
          RowBox[{"Y", "\[Rule]", "Ys"}], ",", 
          RowBox[{"\[Mu]", "\[Rule]", "\[Mu]s"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       RowBox[{"test", "=", 
        RowBox[{"(", 
         RowBox[{"Slope", "/.", "parsSub"}], ")"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"test", "<", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"NegList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nEs", ",", "nIs", ",", "nRs", ",", "\[Tau]Es", ",", "\[Tau]Is", 
             ",", "\[Tau]Rs", ",", "bs", ",", "ds", ",", "\[Delta]s", ",", 
             "Xs", ",", "Ys", ",", "\[Mu]s", ",", "test"}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"PosList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nEs", ",", "nIs", ",", "nRs", ",", "\[Tau]Es", ",", "\[Tau]Is", 
             ",", "\[Tau]Rs", ",", "bs", ",", "ds", ",", "\[Delta]s", ",", 
             "Xs", ",", "Ys", ",", "\[Mu]s", ",", "test"}], "}"}]}], "]"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6954739882968082`*^9, 3.695474145231785*^9}, {
   3.695474190864395*^9, 3.6954744387925754`*^9}, {3.6954744874593587`*^9, 
   3.695474611627461*^9}, {3.6954746463904495`*^9, 3.6954746772542143`*^9}, 
   3.695475238660325*^9, 3.695475274987403*^9, {3.695475382680563*^9, 
   3.695475574457532*^9}, {3.695475708039172*^9, 3.6954758034486294`*^9}, {
   3.6954759346751347`*^9, 3.695475948103903*^9}, {3.6954776077708306`*^9, 
   3.6954777507000055`*^9}, {3.695477858382165*^9, 3.6954779203807106`*^9}, {
   3.69547800254541*^9, 3.6954780602337103`*^9}, {3.6954812548904343`*^9, 
   3.695481345959643*^9}, {3.695481382435729*^9, 3.6954814079611893`*^9}, {
   3.6954814587200923`*^9, 3.6954815611369505`*^9}, {3.695745184315235*^9, 
   3.6957451893615236`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["NegList"], "Input",
 CellChangeTimes->{{3.695481441929132*^9, 3.6954814430681973`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.6954814439642487`*^9, {3.695481556786701*^9, 3.695481566112235*^9}, 
   3.6954816133639374`*^9, 3.6956611129487753`*^9, 3.6957405798338737`*^9, 
   3.6957451986420546`*^9, {3.695745646823689*^9, 3.6957456703570347`*^9}, 
   3.695754780053939*^9, 3.6958236504787703`*^9, 3.6960780196344523`*^9, 
   3.696708871784091*^9, 3.7106851796113873`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "PosList", "]"}]], "Input",
 CellChangeTimes->{{3.6954814451273146`*^9, 3.695481449484564*^9}}],

Cell[BoxData["5000"], "Output",
 CellChangeTimes->{
  3.6954814499705915`*^9, {3.695481557602748*^9, 3.6954815670062857`*^9}, 
   3.69548161341194*^9, 3.6956611129833765`*^9, 3.6957405798788767`*^9, 
   3.695745199457101*^9, {3.695745646862691*^9, 3.6957456711900826`*^9}, 
   3.695754781537972*^9, 3.695823650511772*^9, 3.6960780196854553`*^9, 
   3.696708871815291*^9, 3.7106851797771177`*^9}]
}, Closed]],

Cell["\<\
Hence for these 5000 randomly chosen parameter conditions the slope at eeX=0 \
is always positive and hence both equilibria are either negative or complex.\
\>", "Text",
 CellChangeTimes->{{3.695481570314475*^9, 3.6954816058825097`*^9}, {
  3.6958226434451714`*^9, 3.6958226458773108`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium List", "Subsubsection",
 CellChangeTimes->{{3.692880604524744*^9, 3.6928806117767544`*^9}}],

Cell["\<\
Given the equilibrium expressions for the susceptible and first exposed class \
we now use the expressions for the later classes to make a complete \
substitution list at equilibrium. The variable num is 1 for the disease free \
equilibrium and 2 for the equilibrium with all disease types present.\
\>", "Text",
 CellChangeTimes->{{3.6928806167617617`*^9, 3.6928807107818947`*^9}, {
  3.69288077067098*^9, 3.692880817791047*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Vars", "[", 
   RowBox[{"2", ",", "2", ",", "3"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
     RowBox[{"se", "[", "1", "]"}]}], ",", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
     RowBox[{"se", "[", "2", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6928808532040973`*^9, 3.692880887453146*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], ",", 
   RowBox[{"s", "[", 
    RowBox[{"2", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"1", ",", "1", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"1", ",", "1", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"1", ",", "2", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"1", ",", "2", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"2", ",", "1", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"2", ",", "1", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"2", ",", "2", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"e", "[", 
    RowBox[{"2", ",", "2", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"1", ",", "1", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"1", ",", "1", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"1", ",", "2", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"1", ",", "2", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"2", ",", "1", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"2", ",", "1", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"2", ",", "2", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"i", "[", 
    RowBox[{"2", ",", "2", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"1", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"1", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"1", ",", "3", ",", "t"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"2", ",", "1", ",", "t"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"2", ",", "2", ",", "t"}], "]"}], ",", 
   RowBox[{"r", "[", 
    RowBox[{"2", ",", "3", ",", "t"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.692880858608105*^9, 3.6928843054872265`*^9, 
  3.6944547728108745`*^9, 3.6944664827410865`*^9, 3.6945223744901705`*^9, 
  3.6950388468963146`*^9, 3.695661113030176*^9, 3.6957405799288793`*^9, 
  3.6957454841523848`*^9, 3.6957456469026937`*^9, 3.695823650553775*^9, 
  3.696078019746459*^9, 3.696708871862091*^9, 3.702393210073285*^9, 
  3.7023933986560783`*^9, 3.702393447690115*^9, 3.7106851846424713`*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiSub", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_", ",", "num_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nE", ",", "nI", ",", "nR", ",", "equSub"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"equSub", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
            RowBox[{"se", "[", "1", "]"}]}], ",", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", 
            RowBox[{"se", "[", "2", "]"}]}]}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"e", "[", 
             RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}], "\[Rule]", 
            " ", 
            RowBox[{"ee", "[", 
             RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "nE"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"i", "[", 
             RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}], "\[Rule]", 
            " ", 
            RowBox[{"ie", "[", 
             RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "nI"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"k", ",", "j", ",", "t"}], "]"}], "\[Rule]", 
            RowBox[{"re", "[", 
             RowBox[{"k", ",", "j"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"num", "\[Equal]", "1"}], ",", 
       RowBox[{"equSub", "=", 
        RowBox[{
         RowBox[{"equSub", "/.", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ee1", "[", 
               RowBox[{"k", ",", "l"}], "]"}], "\[Rule]", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}], "/.", 
         RowBox[{
          RowBox[{"se", "[", "2", "]"}], "->", 
          FractionBox[
           RowBox[{"b", "-", "d", "-", 
            RowBox[{"b", " ", "\[Kappa]", " ", 
             RowBox[{"se", "[", "1", "]"}]}]}], 
           RowBox[{"b", " ", "\[Kappa]"}]]}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"num", "\[Equal]", "2"}], ",", 
       RowBox[{"equSub", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"equSub", "/.", "Sub5"}], "/.", "subsequ"}], "/.", 
           "subY"}], "/.", 
          RowBox[{"subX", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/.", "zsub"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "equSub"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6928807448319435`*^9, 3.6928807672889752`*^9}, {
   3.6928808222780533`*^9, 3.6928808456930866`*^9}, {3.6928810109433208`*^9, 
   3.6928810861334286`*^9}, {3.6928811221314793`*^9, 3.692881234608639*^9}, {
   3.692881470896974*^9, 3.692881552683091*^9}, {3.692881595381152*^9, 
   3.6928816020811615`*^9}, 3.692881641607218*^9, {3.6928817143283205`*^9, 
   3.6928817934514337`*^9}, {3.6928834262539377`*^9, 3.692883439515696*^9}, {
   3.6957545917212954`*^9, 3.6957545941401014`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subsection",
 CellChangeTimes->{{3.6924755251328096`*^9, 3.6924755270509195`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Jmtrx", "[", 
    RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ct", ",", "h", ",", "p", ",", "c", ",", "k", ",", "l", ",", "j", ",", 
       "nE", ",", "nI", ",", "nR", ",", "jmtrx"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nE", "=", "nEs"}], ";", 
      RowBox[{"nI", "=", "nIs"}], ";", 
      RowBox[{"nR", "=", "nRs"}], ";", 
      RowBox[{"jmtrx", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"ii", ",", "1", ",", 
           RowBox[{"2", "+", 
            RowBox[{"4", "nE"}], "+", 
            RowBox[{"4", "nI"}], "+", 
            RowBox[{"2", "nR"}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Suscetible", " ", "equation", " ", "h"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"h", "=", "1"}], ",", 
        RowBox[{"h", "\[LessEqual]", "2"}], ",", 
        RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", "2"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{
             RowBox[{"jmtrx", "[", 
              RowBox[{"[", "h", "]"}], "]"}], ",", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"f1", "[", 
                RowBox[{"h", ",", "t"}], "]"}], ",", 
               RowBox[{"s", "[", 
                RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", "2"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"l", "=", "1"}], ",", 
             RowBox[{"l", "\[LessEqual]", "2"}], ",", 
             RowBox[{"l", "++"}], ",", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"jmtrx", "[", 
                  RowBox[{"[", "h", "]"}], "]"}], ",", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"f1", "[", 
                    RowBox[{"h", ",", "t"}], "]"}], ",", 
                   RowBox[{"e", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                  "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", "2"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"l", "=", "1"}], ",", 
             RowBox[{"l", "\[LessEqual]", "2"}], ",", 
             RowBox[{"l", "++"}], ",", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
               RowBox[{"j", "++"}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"jmtrx", "[", 
                  RowBox[{"[", "h", "]"}], "]"}], ",", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"f1", "[", 
                    RowBox[{"h", ",", "t"}], "]"}], ",", 
                   RowBox[{"i", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                  "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "\[LessEqual]", "2"}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"j", "=", "1"}], ",", 
             RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
             RowBox[{"j", "++"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"jmtrx", "[", 
                RowBox[{"[", "h", "]"}], "]"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"f1", "[", 
                  RowBox[{"h", ",", "t"}], "]"}], ",", 
                 RowBox[{"r", "[", 
                  RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
              "]"}]}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Exposed", " ", "equation", " ", "h"}], ",", "p", ",", "c"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"h", "=", "1"}], ",", 
        RowBox[{"h", "\[LessEqual]", "2"}], ",", 
        RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"p", "=", "1"}], ",", 
           RowBox[{"p", "\[LessEqual]", "2"}], ",", 
           RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"c", "=", "1"}], ",", 
              RowBox[{"c", "\[LessEqual]", "nE"}], ",", 
              RowBox[{"c", "++"}], ",", 
              RowBox[{
               RowBox[{"ct", "=", 
                RowBox[{"2", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"p", "-", "1"}], ")"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"h", "-", "1"}], ")"}]}]}], ")"}], "nE"}], "+", 
                 "c"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{
                   RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                   RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f2", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"l", "=", "1"}], ",", 
                   RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                   RowBox[{"l", "++"}], ",", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f2", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"l", "=", "1"}], ",", 
                   RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                   RowBox[{"l", "++"}], ",", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f2", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"j", "=", "1"}], ",", 
                   RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
                   RowBox[{"j", "++"}], ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f2", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Infected", " ", "equation", " ", "h"}], ",", "p", ",", "c"}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"h", "=", "1"}], ",", 
        RowBox[{"h", "\[LessEqual]", "2"}], ",", 
        RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"p", "=", "1"}], ",", 
           RowBox[{"p", "\[LessEqual]", "2"}], ",", 
           RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"c", "=", "1"}], ",", 
              RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
              RowBox[{"c", "++"}], ",", 
              RowBox[{
               RowBox[{"ct", "=", 
                RowBox[{"2", "+", 
                 RowBox[{"4", "nE"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"p", "-", "1"}], ")"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"h", "-", "1"}], ")"}]}]}], ")"}], "nI"}], "+", 
                 "c"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"AppendTo", "[", 
                  RowBox[{
                   RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                   RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f3", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"s", "[", 
                    RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"l", "=", "1"}], ",", 
                   RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                   RowBox[{"l", "++"}], ",", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f3", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"l", "=", "1"}], ",", 
                   RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                   RowBox[{"l", "++"}], ",", 
                   RowBox[{"For", "[", 
                    RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f3", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"k", "=", "1"}], ",", 
                 RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                 RowBox[{"k", "++"}], ",", 
                 RowBox[{"For", "[", 
                  RowBox[{
                   RowBox[{"j", "=", "1"}], ",", 
                   RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
                   RowBox[{"j", "++"}], ",", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f3", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Recovered", " ", "equation", " ", "h"}], ",", "c"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"h", "=", "1"}], ",", 
        RowBox[{"h", "\[LessEqual]", "2"}], ",", 
        RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{
            RowBox[{"ct", "=", 
             RowBox[{"2", "+", 
              RowBox[{"4", "nE"}], "+", 
              RowBox[{"4", "nI"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"h", "-", "1"}], ")"}], "nR"}], "+", "c"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "2"}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"jmtrx", "[", 
                 RowBox[{"[", "ct", "]"}], "]"}], ",", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"f4", "[", 
                   RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                  RowBox[{"s", "[", 
                   RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "2"}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"l", "=", "1"}], ",", 
                RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                RowBox[{"l", "++"}], ",", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
                  RowBox[{"j", "++"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f4", "[", 
                    RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "2"}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"l", "=", "1"}], ",", 
                RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                RowBox[{"l", "++"}], ",", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
                  RowBox[{"j", "++"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"f4", "[", 
                    RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                    "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "2"}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", "1"}], ",", 
                RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
                RowBox[{"j", "++"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"jmtrx", "[", 
                   RowBox[{"[", "ct", "]"}], "]"}], ",", 
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"f4", "[", 
                    RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
                 "]"}]}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"jmtrx", "=", 
       RowBox[{"jmtrx", "/.", "\[Beta]sub"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6927200199052*^9, 3.692720047618785*^9}, {
  3.692720088899146*^9, 3.692720112154476*^9}, {3.692720310410816*^9, 
  3.69272035331627*^9}, {3.6927203886612916`*^9, 3.692720501807763*^9}, {
  3.692720549255477*^9, 3.6927205637023034`*^9}, {3.692721014356079*^9, 
  3.6927210326881275`*^9}, {3.692721116905945*^9, 3.6927211945593863`*^9}, {
  3.6927213982780385`*^9, 3.6927216375997267`*^9}, {3.6927217452048817`*^9, 
  3.6927217589146657`*^9}, {3.692721789172396*^9, 3.6927217977568874`*^9}, {
  3.6927218491818285`*^9, 3.692721877307437*^9}, {3.6927219140945415`*^9, 
  3.6927219142545505`*^9}, {3.6928819486526537`*^9, 3.6928819513626575`*^9}, {
  3.692882117433893*^9, 3.6928821442699313`*^9}}],

Cell[CellGroupData[{

Cell["Disease Free Equilibrium", "Subsubsection",
 CellChangeTimes->{{3.692880238198659*^9, 3.6928802492156744`*^9}, {
  3.6928804404015093`*^9, 3.6928804523645267`*^9}}],

Cell["\<\
As with the previous models we can write the Jacobian matrix evaluated at the \
disease free equilibrium in a general form as given by:\
\>", "Text",
 CellChangeTimes->{{3.694464030233811*^9, 3.694464057377363*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ectr", "[", 
    RowBox[{"h_", ",", "p_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"nE", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", "-", "1"}], ")"}], "2"}], "+", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ")"}]}], "+", "c", "+", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ictr", "[", 
    RowBox[{"h_", ",", "p_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"nI", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", "-", "1"}], ")"}], "2"}], "+", 
       RowBox[{"(", 
        RowBox[{"p", "-", "1"}], ")"}]}], ")"}]}], "+", "c", "+", 
    RowBox[{"4", "nE"}], "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rctr", "[", 
    RowBox[{"h_", ",", "c_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"nR", 
     RowBox[{"(", 
      RowBox[{"(", 
       RowBox[{"h", "-", "1"}], ")"}], ")"}]}], "+", "c", "+", 
    RowBox[{"4", "nE"}], "+", 
    RowBox[{"4", "nI"}], "+", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mtrx", "[", 
   RowBox[{"nEs_", ",", "nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nE", ",", "nI", ",", "nR", ",", "mtrx", ",", "h", ",", "p", ",", "c", 
      ",", "k", ",", "l", ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nE", "=", "nEs"}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", 
     RowBox[{"mtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"2", "+", 
           RowBox[{"4", "nE"}], "+", 
           RowBox[{"4", "nI"}], "+", 
           RowBox[{"2", "nR"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", 
          RowBox[{"2", "+", 
           RowBox[{"4", "nE"}], "+", 
           RowBox[{"4", "nI"}], "+", 
           RowBox[{"2", "nR"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Susceptible", " ", "Equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"h", "\[Equal]", "1"}], ",", 
            RowBox[{
             RowBox[{"mtrx", "[", 
              RowBox[{"[", 
               RowBox[{"h", ",", "k"}], "]"}], "]"}], "=", "A1"}], ",", 
            RowBox[{
             RowBox[{"mtrx", "[", 
              RowBox[{"[", 
               RowBox[{"h", ",", "k"}], "]"}], "]"}], "=", "A2"}]}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"l", "=", "1"}], ",", 
            RowBox[{"l", "\[LessEqual]", "2"}], ",", 
            RowBox[{"l", "++"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nE"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"h", "\[Equal]", "k"}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"ectr", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], "]"}], "]"}], 
                 "=", "B1"}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"ectr", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], "]"}], "]"}], 
                 "=", "B2"}]}], "]"}]}], "   ", "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"l", "=", "1"}], ",", 
            RowBox[{"l", "\[LessEqual]", "2"}], ",", 
            RowBox[{"l", "++"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"h", "\[Equal]", "k"}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"ictr", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], "]"}], "]"}], 
                 "=", 
                 RowBox[{"C1", "[", 
                  RowBox[{"h", ",", "l"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"ictr", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], "]"}], "]"}], 
                 "=", 
                 RowBox[{"C2", "[", 
                  RowBox[{"h", ",", "l"}], "]"}]}]}], "]"}]}], "  ", "]"}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"h", "\[Equal]", "k"}], ",", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{"h", ",", 
                  RowBox[{"rctr", "[", 
                   RowBox[{"k", ",", "j"}], "]"}]}], "]"}], "]"}], "=", 
               "B1"}], ",", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{"h", ",", 
                  RowBox[{"rctr", "[", 
                   RowBox[{"k", ",", "j"}], "]"}]}], "]"}], "]"}], "=", 
               "B2"}]}], "]"}]}], "   ", "]"}]}], "]"}], ";", 
        RowBox[{
         RowBox[{"mtrx", "[", 
          RowBox[{"[", 
           RowBox[{"h", ",", 
            RowBox[{"rctr", "[", 
             RowBox[{"h", ",", "nR"}], "]"}]}], "]"}], "]"}], "=", 
         RowBox[{"B1", "+", 
          FractionBox["nR", "\[Tau]R"]}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Exposed", " ", "Equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nE"}], ",", 
           RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"c", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ectr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ectr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}]}], "]"}], "]"}], 
               "=", "E2"}], ";", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"k", "=", "1"}], ",", 
                RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                RowBox[{"k", "++"}], ",", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"l", "=", "1"}], ",", 
                  RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                  RowBox[{"l", "++"}], ",", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"j", "=", "1"}], ",", 
                    RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
                    RowBox[{"j", "++"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"l", "\[Equal]", "p"}], ",", 
                    RowBox[{
                    RowBox[{"mtrx", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ectr", "[", 
                    RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                    RowBox[{"ictr", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], "]"}], "]"}], 
                    "=", 
                    RowBox[{"D1", "[", 
                    RowBox[{"h", ",", "l"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"mtrx", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ectr", "[", 
                    RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                    RowBox[{"ictr", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], "]"}], "]"}], 
                    "=", 
                    RowBox[{"D2", "[", 
                    RowBox[{"h", ",", "l"}], "]"}]}]}], "]"}]}], "  ", 
                   "]"}]}], "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ectr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ectr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}]}], "]"}], "]"}], 
               "=", "E2"}], ";", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ectr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ectr", "[", 
                   RowBox[{"h", ",", "p", ",", 
                    RowBox[{"c", "-", "1"}]}], "]"}]}], "]"}], "]"}], "=", 
               "E1"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Infected", " ", "Equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
           RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"c", "\[Equal]", "1"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ectr", "[", 
                   RowBox[{"h", ",", "p", ",", "nE"}], "]"}]}], "]"}], "]"}], 
               "=", "E1"}], ";", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}]}], "]"}], "]"}], 
               "=", "F2"}]}], "\[IndentingNewLine]", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}]}], "]"}], "]"}], 
               "=", "F2"}], ";", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "p", ",", 
                    RowBox[{"c", "-", "1"}]}], "]"}]}], "]"}], "]"}], "=", 
               "F1"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", "Recovered", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"c", "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"l", "=", "1"}], ",", 
              RowBox[{"l", "\[LessEqual]", "2"}], ",", 
              RowBox[{"l", "++"}], ",", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"rctr", "[", 
                   RowBox[{"h", ",", "c"}], "]"}], ",", 
                  RowBox[{"ictr", "[", 
                   RowBox[{"h", ",", "l", ",", "nI"}], "]"}]}], "]"}], "]"}], 
               "=", "F1"}]}], "]"}], ";", 
            RowBox[{
             RowBox[{"mtrx", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"rctr", "[", 
                 RowBox[{"h", ",", "c"}], "]"}], ",", 
                RowBox[{"rctr", "[", 
                 RowBox[{"h", ",", "c"}], "]"}]}], "]"}], "]"}], "=", 
             "G2"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"mtrx", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"rctr", "[", 
                 RowBox[{"h", ",", "c"}], "]"}], ",", 
                RowBox[{"rctr", "[", 
                 RowBox[{"h", ",", "c"}], "]"}]}], "]"}], "]"}], "=", "G2"}], 
            ";", 
            RowBox[{
             RowBox[{"mtrx", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"rctr", "[", 
                 RowBox[{"h", ",", "c"}], "]"}], ",", 
                RowBox[{"rctr", "[", 
                 RowBox[{"h", ",", 
                  RowBox[{"c", "-", "1"}]}], "]"}]}], "]"}], "]"}], "=", 
             "G1"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], 
     ";", 
     RowBox[{"(*", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"mtrx", "-", 
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "+", 
         RowBox[{"4", "nE"}], "+", 
         RowBox[{"4", "nI"}], "+", 
         RowBox[{"2", "nR"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6944593235656047`*^9, 3.694459431215762*^9}, 
   3.6944595654314384`*^9, {3.6944596377805767`*^9, 3.6944603214656816`*^9}, {
   3.6944603547925873`*^9, 3.6944606743718667`*^9}, 3.6944607355453653`*^9, {
   3.694460772635487*^9, 3.6944608383162436`*^9}, {3.6944608702430696`*^9, 
   3.69446087129513*^9}, {3.694460946879453*^9, 3.6944610290071507`*^9}, {
   3.6944611513671494`*^9, 3.6944612106955423`*^9}}],

Cell["\<\
The constant term of the characteristic polynomial of this Jacobian matrix is \
given by T[nE,nI,nR]\
\>", "Text",
 CellChangeTimes->{{3.694464084728928*^9, 3.6944640949455123`*^9}, {
  3.6944642227618227`*^9, 3.6944644933132973`*^9}, {3.6950372258291388`*^9, 
  3.6950372490213833`*^9}, {3.6958226504715734`*^9, 3.6958226525336914`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"nE_", ",", "nI_", ",", "nR_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"A1", "+", "A2"}], ")"}]}], " ", 
     SuperscriptBox["E2", 
      RowBox[{"2", "nE"}]], " ", 
     SuperscriptBox["F2", 
      RowBox[{"2", "nI"}]], " ", 
     SuperscriptBox["G2", 
      RowBox[{"2", "nR"}]]}], " ", ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["E2", 
       RowBox[{"2", "nE"}]], 
      SuperscriptBox["F2", 
       RowBox[{"2", "nI"}]]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"E1", " ", "E2"}], ")"}], "nE"], 
      SuperscriptBox["F2", "nI"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"nE", "+", "nI", "-", "1"}]], 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["F1", "i"], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"-", "F2"}], ")"}], 
          RowBox[{"nI", "-", "1", "-", "i"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", 
          RowBox[{"nI", "-", "1"}]}], "}"}]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"D1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "+", 
        RowBox[{"D1", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "+", 
        RowBox[{"D1", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "+", 
        RowBox[{"D1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["E1", 
       RowBox[{"2", "nE"}]], 
      SuperscriptBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["F1", "i"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"-", "F2"}], ")"}], 
           RowBox[{"nI", "-", "1", "-", "i"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{"nI", "-", "1"}]}], "}"}]}], "]"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D1", "[", 
            RowBox[{"1", ",", "1"}], "]"}], "+", 
           RowBox[{"D1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D1", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "+", 
           RowBox[{"D1", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D2", "[", 
            RowBox[{"1", ",", "1"}], "]"}], "+", 
           RowBox[{"D2", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"D2", "[", 
            RowBox[{"1", ",", "2"}], "]"}], "+", 
           RowBox[{"D2", "[", 
            RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6944644493767843`*^9, 3.6944644556351423`*^9}, 
   3.6944679291378155`*^9, {3.695037052102522*^9, 3.695037079195778*^9}}],

Cell["The letters are given by:", "Text",
 CellChangeTimes->{{3.694467936074212*^9, 3.6944679415215235`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"letters", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"A1", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "b"}], " ", "\[Kappa]", " ", 
        RowBox[{"se", "[", "1", "]"}]}]}], ",", 
      RowBox[{"A2", "\[Rule]", 
       RowBox[{"d", "-", " ", 
        RowBox[{"b", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}]}]}], ",", 
      RowBox[{"G2", "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"d", "+", 
          FractionBox["nR", "\[Tau]R"]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"D1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"se", "[", "1", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"D2", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
       RowBox[{"\[Mu]", " ", 
        RowBox[{"se", "[", "1", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"D1", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"se", "[", "1", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"D2", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
       RowBox[{"\[Mu]", " ", 
        RowBox[{"se", "[", "1", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"D1", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"se", "[", "2", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"D2", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
       RowBox[{"\[Mu]", " ", 
        RowBox[{"se", "[", "2", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"D1", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Mu]"}], ")"}], " ", 
        RowBox[{"se", "[", "2", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"D2", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
       RowBox[{"\[Mu]", " ", 
        RowBox[{"se", "[", "2", "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}]}], ",", 
      RowBox[{"E1", "\[Rule]", 
       FractionBox["nE", "\[Tau]E"]}], ",", 
      RowBox[{"E2", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], "-", 
        FractionBox["nE", "\[Tau]E"]}]}], ",", 
      RowBox[{"F1", "\[Rule]", 
       FractionBox["nI", "\[Tau]I"]}], ",", 
      RowBox[{"F2", "\[Rule]", 
       RowBox[{
        RowBox[{"-", "\[Delta]"}], "-", 
        FractionBox["nI", "\[Tau]I"]}]}]}], "}"}], "/.", "\[Beta]sub"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.694467942886602*^9, 3.694468161771121*^9}, {
   3.6950372804292693`*^9, 3.6950372821140723`*^9}, {3.695039971456397*^9, 
   3.695039994216837*^9}, 3.695481670671215*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"T", "[", 
         RowBox[{"nE", ",", "nI", ",", "nR"}], "]"}], "/.", "letters"}], "/.",
        "\[Beta]sub"}], "/.", 
      RowBox[{
       RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
       FractionBox[
        RowBox[{"b", "-", "d"}], 
        RowBox[{"2", " ", "b", " ", "\[Kappa]"}]]}]}], "/.", 
     RowBox[{
      RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"b", "-", "d"}], 
       RowBox[{"2", " ", "b", " ", "\[Kappa]"}]]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"b", "\[Rule]", 
      FractionBox[
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nE", 
           RowBox[{"nE", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["nI", 
             RowBox[{"nI", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"X", "+", "Y"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nE", 
            RowBox[{"nE", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["nI", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
          ")"}]}]}]]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Element", "[", 
      RowBox[{"nE", ",", "Integers"}], "]"}], ",", 
     RowBox[{"Element", "[", 
      RowBox[{"nI", ",", "Integers"}], "]"}], ",", 
     RowBox[{"Element", "[", 
      RowBox[{"nR", ",", "Integers"}], "]"}], ",", 
     RowBox[{"nE", ">", "0"}], ",", 
     RowBox[{"nI", ">", "0"}], ",", 
     RowBox[{"nR", ">", "0"}], ",", 
     RowBox[{"\[Tau]E", ">", "0"}], ",", 
     RowBox[{"\[Tau]I", ">", "0"}], ",", 
     RowBox[{"\[Tau]R", ">", "0"}], ",", 
     RowBox[{"\[Delta]", ">", "0"}], ",", 
     RowBox[{"\[Mu]", ">", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69575706603693*^9, 3.695757108677369*^9}, {
  3.6960778900050383`*^9, 3.696077917452608*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.695757104574134*^9, 3.695757117833893*^9}, 
   3.695823659093263*^9, 3.6960779273591747`*^9, 3.6960780244937305`*^9, {
   3.7106851872139473`*^9, 3.710685193855296*^9}}]
}, Closed]],

Cell[TextData[{
 "Hence the disease free equilibrium is unstable whenever ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"b", "\[GreaterEqual]", 
    FractionBox[
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"X", "+", "Y"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nE", 
         RowBox[{"nE", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
     RowBox[{
      RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nE", 
          RowBox[{"nE", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]E"}]}]], ")"}], "nE"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nI", 
            RowBox[{"nI", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
        ")"}]}]}]]}], "}"}]],
  CellChangeTimes->{{3.69575706603693*^9, 3.695757108677369*^9}, {
   3.6960778900050383`*^9, 3.696077917452608*^9}}],
 " the same condition under which only one biologically valid endemic \
equilibrium exists."
}], "Text",
 CellChangeTimes->{{3.69607803252919*^9, 3.696078111816725*^9}, {
  3.71422828561404*^9, 3.714228287069625*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["All disease classes equilibrium", "Subsubsection",
 CellChangeTimes->{{3.692880238198659*^9, 3.6928802492156744`*^9}, {
  3.6928804404015093`*^9, 3.6928804523645267`*^9}, {3.6928822148040314`*^9, 
  3.6928822199140387`*^9}}],

Cell["\<\
We evaluate the stability of this equilibrium numerically for the given \
parameter combination Pars.\
\>", "Text",
 CellChangeTimes->{{3.6928818253874793`*^9, 3.69288184711151*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "0.02"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.01"}], ",", 
     RowBox[{"X", "\[Rule]", "0.5"}], ",", 
     RowBox[{"Y", "\[Rule]", "0.4"}], ",", 
     RowBox[{"\[Tau]E", "\[Rule]", "2"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "20"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      SuperscriptBox["10", 
       RowBox[{"-", "6"}]]}], ",", 
     RowBox[{"nE", "\[Rule]", "2"}], ",", 
     RowBox[{"nI", "\[Rule]", "10"}], ",", 
     RowBox[{"nR", "\[Rule]", "20"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6928818489515123`*^9, 3.6928819072135954`*^9}, {
  3.6928819615726724`*^9, 3.6928819688636827`*^9}, {3.6928822377480636`*^9, 
  3.6928822879251347`*^9}, {3.6928825185250187`*^9, 3.6928825213091774`*^9}, {
  3.692883069269519*^9, 3.692883077523991*^9}}],

Cell["\<\
In addition since there are an infinite number of possible equilibria we must \
also specify se[1], which we arbitrarily chose to be 0.4.\
\>", "Text",
 CellChangeTimes->{{3.692881979224697*^9, 3.69288203074477*^9}, 
   3.6929684289061375`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Jmtrx", "[", 
        RowBox[{"1", ",", "2", ",", "3"}], "]"}], "/.", 
       RowBox[{"EquiSub", "[", 
        RowBox[{"1", ",", "2", ",", "3", ",", "1"}], "]"}]}], "/.", "Pars"}], 
     "/.", 
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", "0.4"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "#1", "]"}], ">", 
     RowBox[{"Re", "[", "#2", "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6928816666972537`*^9, 3.6928816724182615`*^9}, {
  3.692881919936613*^9, 3.6928819364696364`*^9}, {3.692882032954774*^9, 
  3.6928820451177907`*^9}, {3.6928821648759604`*^9, 3.6928821789049807`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.2234095081597055`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.21550494897243153`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.019`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15099762766579528`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15099974089681464`"}], "-", 
    RowBox[{"4.488035525302311`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15099974089681464`"}], "+", 
    RowBox[{"4.488035525302311`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15100051820637117`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15100118616709646`"}], "-", 
    RowBox[{"2.0546443542724142`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.15100118616709646`"}], "+", 
    RowBox[{"2.0546443542724142`*^-6", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20999999429637983`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.21000000000000338`"}], "-", 
    RowBox[{"6.5269529550140895`*^-9", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.21000000000000338`"}], "+", 
    RowBox[{"6.5269529550140895`*^-9", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.21000000570362598`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.3914152156340385`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.3920279960410952`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5099999999999998`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5100000000000007`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.754089733338394`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.7613815121186093`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.692881673728264*^9, {3.6928819212966146`*^9, 3.6928819720736876`*^9}, {
   3.692882036674779*^9, 3.692882045527791*^9}, {3.692882158983952*^9, 
   3.692882179424981*^9}, 3.695823659260273*^9, {3.710685187330081*^9, 
   3.7106851956317377`*^9}}]
}, Closed]],

Cell["\<\
This equilibrium is stable with damped for this particular parameter \
condition.\
\>", "Text",
 CellChangeTimes->{{3.6928821921659994`*^9, 3.6928822020380135`*^9}, {
  3.6928822324470563`*^9, 3.6928822334870577`*^9}, {3.6958234924747334`*^9, 
  3.695823494618856*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subsection",
 CellChangeTimes->{{3.6924755321952133`*^9, 3.6924755361314387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "0.2"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.06"}], ",", 
     RowBox[{"X", "\[Rule]", "0.5"}], ",", 
     RowBox[{"Y", "\[Rule]", "0.35"}], ",", 
     RowBox[{"\[Tau]E", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "5"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "40"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.001"}], ",", 
     RowBox[{"nE", "\[Rule]", "1"}], ",", 
     RowBox[{"nI", "\[Rule]", "2"}], ",", 
     RowBox[{"nR", "\[Rule]", "3"}], ",", 
     RowBox[{"tmax", "\[Rule]", "2000"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6928833255331764`*^9, 3.6928833431171827`*^9}, 
   3.6928838725434637`*^9, 3.692884017341746*^9, {3.6928843189729977`*^9, 
   3.6928843215651464`*^9}, {3.6928844208458247`*^9, 
   3.6928844238299956`*^9}, {3.6928844565268655`*^9, 3.6928844590540104`*^9}, 
   3.692884805773842*^9, {3.692884861838048*^9, 3.6928848653502493`*^9}, {
   3.6944665982896953`*^9, 3.694466667001625*^9}, {3.6956611088367476`*^9, 
   3.6956611090707483`*^9}, {3.6956611847927036`*^9, 
   3.6956612197066126`*^9}, {3.6956612654628935`*^9, 3.695661275402111*^9}, {
   3.695661329060606*^9, 3.6956613511934457`*^9}, {3.695661381373149*^9, 
   3.6956613825743513`*^9}, {3.6956615099712143`*^9, 3.695661512467219*^9}, {
   3.695661897022646*^9, 3.6956618989414487`*^9}, 3.695661931378954*^9, 
   3.6956619651790147`*^9, 3.695661998209273*^9, {3.6956620411537905`*^9, 
   3.6956620908800783`*^9}, {3.695662207307124*^9, 3.6956622319717674`*^9}, {
   3.695662282241294*^9, 3.695662287217702*^9}, 3.6956623211401625`*^9, {
   3.695662354340443*^9, 3.6956623827530975`*^9}, {3.695662424428392*^9, 
   3.695662452480242*^9}, {3.6956624843439245`*^9, 3.695662497609556*^9}, 
   3.695662815533856*^9, {3.695662894598235*^9, 3.6956629555223417`*^9}, 
   3.6957405568775606`*^9, 3.695741064547598*^9, {3.695741359920492*^9, 
   3.6957413670809016`*^9}, {3.69574159660903*^9, 3.6957415995211964`*^9}, {
   3.695741659328617*^9, 3.695741660999713*^9}, 3.6957417174469414`*^9, {
   3.6957437295370264`*^9, 3.6957437663301306`*^9}, {3.6957437998490477`*^9, 
   3.695743800175067*^9}, 3.6957439411761312`*^9, 3.6957441216244526`*^9, {
   3.695745492952888*^9, 3.6957454968471107`*^9}, {3.6958235159940786`*^9, 
   3.6958235198392982`*^9}, 3.6958236723360205`*^9, {3.69670884854005*^9, 
   3.6967088697716875`*^9}, {3.696708913998765*^9, 3.696708915761568*^9}, {
   3.696709528661846*^9, 3.696709555447093*^9}, 3.6967096558918715`*^9, 
   3.6967118413355083`*^9, {3.7023938550851*^9, 3.702393855984364*^9}}],

Cell["\<\
To numerically integrate the system of equations we must specify the \
parameters and the initial conditions.  For initial conditions we will use \
the endemic equilibrium plus a small perturbation which is constrained to fit \
a particular inital host and pathogen allele frequency. If we want the inital \
host and pathogen allele frequencies to equal pH and pP respectively then we \
can choose perturbation factors \[Alpha]H and \[Alpha]P such that:\
\>", "Text",
 CellChangeTimes->{{3.6928825768253527`*^9, 3.6928826284093037`*^9}, {
  3.692882929993553*^9, 3.692882941153191*^9}, {3.692968434132147*^9, 
  3.6929684396701565`*^9}, {3.6967089942649064`*^9, 3.6967090774150524`*^9}, {
  3.714228306848638*^9, 3.7142283160167723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitEqus", "[", 
   RowBox[{"pH_", ",", "pP_", ",", "nE_", ",", "nI_", ",", "nR_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pP", "\[Equal]", 
        FractionBox[
         RowBox[{
          RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
          RowBox[{"i21", " ", "\[Alpha]P"}]}], 
         RowBox[{
          RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
          RowBox[{"i12", " ", "\[Alpha]H"}], "+", " ", 
          RowBox[{"i21", " ", "\[Alpha]P"}], "+", "i22"}]]}], ",", 
       RowBox[{"pH", "\[Equal]", 
        FractionBox[
         RowBox[{
          RowBox[{"s1", " ", "\[Alpha]H"}], "+", 
          RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
          RowBox[{"i12", " ", "\[Alpha]H"}], "+", 
          RowBox[{"r1", " ", "\[Alpha]H"}]}], 
         RowBox[{
          RowBox[{"s1", " ", "\[Alpha]H"}], "+", "s2", "+", 
          RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
          RowBox[{"i12", " ", "\[Alpha]H"}], "+", 
          RowBox[{"i21", " ", "\[Alpha]P"}], "+", "i22", "+", 
          RowBox[{"r1", " ", "\[Alpha]H"}], "+", "r2"}]]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s1", "\[Rule]", 
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "t"}], "]"}]}], ",", " ", 
       RowBox[{"s2", "\[Rule]", 
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "t"}], "]"}]}], ",", 
       RowBox[{"i11", "\[Rule]", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"1", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"1", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"i12", "\[Rule]", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"1", ",", "2", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"1", ",", "2", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"i21", "\[Rule]", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"2", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"2", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"i22", "\[Rule]", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"2", ",", "2", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nE"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"2", ",", "2", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}]}], ",", 
       RowBox[{"r1", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"1", ",", "c", ",", "t"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"r2", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"2", ",", "c", ",", "t"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}]}], "}"}]}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"nE", ",", "nI", ",", "nR", ",", "2"}], "]"}]}], "/.", 
   "Pars"}]}]], "Input",
 CellChangeTimes->{{3.696273664525631*^9, 3.6962738698533754`*^9}, {
   3.6962743467826543`*^9, 3.6962743676278467`*^9}, 3.6962747236392093`*^9, {
   3.696709131392147*^9, 3.6967092247497115`*^9}, {3.6967092576501694`*^9, 
   3.696709272798796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Alpha]Sub", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"InitEqus", "[", 
     RowBox[{"0.6", ",", "0.5", ",", 
      RowBox[{"nE", "/.", "Pars"}], ",", 
      RowBox[{"nI", "/.", "Pars"}], ",", 
      RowBox[{"nR", "/.", "Pars"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]H", ",", "\[Alpha]P"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.702393598249814*^9, 3.7023936817231503`*^9}, {
  3.7023937401349382`*^9, 3.70239374379814*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Solve","ratnz",
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"",2,94,4,18858303142472689826,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.702393622305456*^9, 3.702393683058949*^9}, {
   3.7023937370247793`*^9, 3.702393744472052*^9}, 3.702393860120851*^9, 
   3.7106852041217337`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]H", "\[Rule]", 
      RowBox[{"-", "0.7136761408368353`"}]}], ",", 
     RowBox[{"\[Alpha]P", "\[Rule]", 
      RowBox[{"-", "37.981397620767936`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Alpha]H", "\[Rule]", "1.5009875686597616`"}], ",", 
     RowBox[{"\[Alpha]P", "\[Rule]", "0.9318460842432472`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7023936226214933`*^9, 3.702393683081869*^9}, {
   3.702393737047367*^9, 3.702393744494359*^9}, 3.7023938601451063`*^9, 
   3.7106852041445713`*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inits", "[", 
   RowBox[{"nE_", ",", "nI_", ",", "nR_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"1", ",", "t"}], "]"}], 
            RowBox[{"(", "\[Alpha]H", ")"}]}]}], ",", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "t"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"h", ",", "p", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"e", "[", 
             RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], "*", 
            SuperscriptBox[
             RowBox[{"(", "\[Alpha]H", ")"}], 
             RowBox[{"Mod", "[", 
              RowBox[{"h", ",", "2"}], "]"}]], "*", 
            SuperscriptBox[
             RowBox[{"(", "\[Alpha]P", ")"}], 
             RowBox[{"Mod", "[", 
              RowBox[{"p", ",", "2"}], "]"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "nE"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"h", ",", "p", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"i", "[", 
             RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], "*", 
            SuperscriptBox[
             RowBox[{"(", "\[Alpha]H", ")"}], 
             RowBox[{"Mod", "[", 
              RowBox[{"h", ",", "2"}], "]"}]], "*", 
            SuperscriptBox[
             RowBox[{"(", "\[Alpha]P", ")"}], 
             RowBox[{"Mod", "[", 
              RowBox[{"p", ",", "2"}], "]"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"h", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"h", ",", "c", ",", "t"}], "]"}], "*", 
            SuperscriptBox[
             RowBox[{"(", "\[Alpha]H", ")"}], 
             RowBox[{"Mod", "[", 
              RowBox[{"h", ",", "2"}], "]"}]]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], "]"}], "]"}],
      "/.", 
     RowBox[{"EquiSub", "[", 
      RowBox[{"nE", ",", "nI", ",", "nR", ",", "2"}], "]"}]}], "/.", "Pars"}],
    "/.", 
   RowBox[{"\[Alpha]Sub", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.695661571630924*^9, 3.6956618297926874`*^9}, {
   3.695740624416424*^9, 3.695740674755303*^9}, {3.696713909803544*^9, 
   3.6967140043427105`*^9}, {3.6967140400521727`*^9, 3.696714266352171*^9}, {
   3.696714335433092*^9, 3.696714338069497*^9}, {3.6967147359223967`*^9, 
   3.696714762257243*^9}, 3.702393552084519*^9, 3.702393688229145*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nsol", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ODEs", "[", 
          RowBox[{
           RowBox[{"nE", "/.", "Pars"}], ",", 
           RowBox[{"nI", "/.", "Pars"}], ",", 
           RowBox[{"nR", "/.", "Pars"}]}], "]"}], "/.", "Pars"}], ",", 
        RowBox[{"Inits", "[", 
         RowBox[{
          RowBox[{"nE", "/.", "Pars"}], ",", 
          RowBox[{"nI", "/.", "Pars"}], ",", 
          RowBox[{"nR", "/.", "Pars"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"Vars", "[", 
       RowBox[{
        RowBox[{"nE", "/.", "Pars"}], ",", 
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"tmax", "/.", "Pars"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ssol", "[", 
    RowBox[{"h_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"h", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"esol", "[", 
    RowBox[{"h_", ",", "p_", ",", "c_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"e", "[", 
      RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isol", "[", 
    RowBox[{"h_", ",", "p_", ",", "c_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsol", "[", 
    RowBox[{"h_", ",", "c_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"h", ",", "c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6928830897336893`*^9, 3.692883186861245*^9}, {
  3.6928841469751606`*^9, 3.6928842287168355`*^9}, {3.6928843551670685`*^9, 
  3.6928843584122543`*^9}, {3.6928844652123623`*^9, 3.6928844713167114`*^9}, {
  3.6957436449291873`*^9, 3.6957436513455544`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SEIRSPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"ssol", "[", 
         RowBox[{"h", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"esol", "[", 
         RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", 
          RowBox[{"nE", "/.", "Pars"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"isol", "[", 
         RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", 
          RowBox[{"nI", "/.", "Pars"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"rsol", "[", 
         RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", 
          RowBox[{"nR", "/.", "Pars"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"tmax", "/.", "Pars"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", "Thick"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6928842354442205`*^9, 3.6928842502110653`*^9}, {
   3.6928844763319983`*^9, 3.692884482427347*^9}, {3.692884664707773*^9, 
   3.6928848527695293`*^9}, {3.6929793190494556`*^9, 
   3.6929793197884984`*^9}, {3.694466399682336*^9, 3.6944664226516495`*^9}, {
   3.694466518798149*^9, 3.694466523804435*^9}, {3.695662175318266*^9, 
   3.6956621790154724`*^9}, {3.695740913791975*^9, 3.695740948535962*^9}, 
   3.695741221329565*^9, 3.695823690103037*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJwd2Hk4VV0XAHBDlCFSkiQJCQkhJJxlSCJE5mQOmedZZhd5Ddd0r5kkmkOK
JKkkSaVCJeFKihClpOFb5/ur5/dczzl7r73W2uu03cXf/AQLExPTN1YmJvLf
6YXfh/Xd2QjzSzcj/bKmiKCzkUp6VQyCkC/TZQr4SERwfXHfXLVIzPoarK47
NUmo6m1tygn8Q7zxHRqlXftARLfXMq2qYgWx9uqL1iwfiDdvtM4R6Wvg/bqQ
H4veE4T6jwHj6MC1wMgtqMz5zCCepKtGvZXlAz/ha42bohnEn6Ik4+XKDdBW
NvBl9RYGIVv7VHTTRgFokUoNNuseJ+ybtnxTThcEfRelGxoJ40Rmp8dD8z9C
sCtWcsFab5xoe9ZYHBC4FUbu39I4uW6cmBn555v1YRvcjt7s4DYxRmQtnRUd
kN0Oim88553vjBG1f4w4P7iLwSbT6Mv0yjGifdXC4mKlOGiEqIkcp4wRA1y0
dyxvJeBvdXDYhuAxYna91kO+jZIQ8svRQcV1jGAXmrgqaroTPHuKwdR6jBDZ
nlEsny4FQ3Of1303GSNUpBSSte5Jg0n6z4CeQ2OEifyAr/EfGZDL8pSOOThG
uKvEWNurykLm2eW3d9CxmmLa3oG7AcyefjA3HCPy9bploi7IAW31bt9lfN5F
Iz/+9A/y0DHnnBprOUa4SHP+e5ytAFv9xG9ePo7rk30X/EJ2DygMiK919hgj
ohSuTr15tAcqL9oX+AThepWTjo+7K4LHnTjDS6dwvfulD36tVAKvzGO3jIvH
iPNav2/91FQGlg/vN4fU4/p1niowvVUGtYnQIPsWXP+hUCHejSrw/b7UqODb
MeKU9d0vsulqYFiSkr9TYpx4F2yb7xmoCaxtL2Xu3RknPMNlOQJ4tEC2Neq/
/S/GiW9R/2LDL2jB9h4PrcLJcYI78axH6gcC7vUYb37BzSBEuiO29stqw5/B
NdRqKwYxcWh80DJaG0KEm1RdPBnE+cdG1NePtGHD0uKrJ5EMQuWpyOoxdx1Q
eK8nkFfCIEwG7s/PVerCHyl7zkNvGETc++O2PEu60EtcOsKD+XZ1aumurJEe
sHDHXtBdZhB8K1J5J7/rQXsDx8XpjROEzqrOFYrhARDiZQ23FJ8ggtYec6ut
OAB/9265tFVhgni57b+9jEP6kOzvca/14ATBJi1ZzlyhD1JvhXnSzScIFcU7
7KLf9KEv6i+tzn6CcN9v46916CDw5xo8F3CfIIr0vg7alx+EVPr14Od+E0S3
cQZELx6EnjD90wNhE8RPK/F6uoEBpN/yDZI4NUFIO7Xx3SwzAMHc3/0tyROE
3UnLqIEFAzDXXblSkDFBnA6aHf928BAcMX1rcyN7gmiLphhtKDsEtEPUaJH8
CWImWbRpz8IhUGD6IfS4aILYmtUifOSgIbSKSv13u3iCMCkyT/ErNYSRp0Zp
S6UTxKnK6S+ZXw2ByXZga3j5BHGlPtnqgr4RXJmQvQkVE8Row9Y7j0qMQP/h
oqglmq+teefUvBHM/oqObca/13lgmsOufxjWxJcc9SibIIL7pn5KlByGN5lE
llfJBFEzmOCsO38Y3C5Y2d+jTRCvRoV6nA8YwzrrsWOhBRME++dGxfhiY/jo
pXQ6ORfjuXi4pHzOGB4fYCh+z5wgPH5/YL2tZwKRVwx+PKZMEDS2OJ+3dBN4
dlfr1dpEjCeP4KvlWRMo5F2j1hE9QSxvuqYpqGcKnziFLk6FTBAy2w1rVeim
kKW/Ues/3wnimAyDx3LWFBr4Lgg3nZgguja332rZfgTSXV1euB6fIH6IWUsM
hR0Bnfd63yKMJoicc2dsPKqOQNEvbdqM9gQhJTufufT4CKQ8/eDBpjZB2OxN
/86/3Qy2e3/iOoD503rwVpfZYzOYrYoqG1xiEOa9q1dGv5uBTntMn8k0g5g+
YiEfIGoOhs1Pdc+/ZxDCdl+KskLNwX8u58nubgYR67Pt5ONtR6HB6FMj0BmE
wFfvMjvDo5DwXSqu8T8GcTn05vNPIUdBYWV2Vj+RQYycMlNf03MUYLev9Wdv
BgG5SVwHQiyAie9OdJ82g3g4IqDFUop2iVspUsN6kT0fcOeeBRgJG9PPyjOI
4w+fvdq3wRKsUkTZSkSw/vjd1vxQt4S0SW3BdAEG4ePyQ73JxRLsewtHH/Iw
iKg/WyvlGixhqS1iszYTg2A2utY//doSLCav3I5bHifSaHps9cxWkGrT5LNp
cZxYNzmo6i5tBZZ7Boo5vowTRUreXuJmVlCYsyva+uM4IZLwt3Q0wgqahhWY
WcbHidq+3KdllVaw3o2ZwfFunNgtvIPlWLcV6NPqSv2HxommkzeVBeetwKf0
r7fSy3Fi/w0jj1ebrCHsIvsxy2fjROeq93QqYQ2LYWfUX/WOE4bmQb2mHtaw
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
/T/BBiZy
      "]]}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[1.],
      LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
AeaBQBA=
      "]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1999.9999591836736`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6928842508501015`*^9, 3.692884362835507*^9, {3.692884477804083*^9, 
   3.6928844827703667`*^9}, {3.692884661175571*^9, 3.692884669444044*^9}, {
   3.6928847828165283`*^9, 3.6928848700815196`*^9}, 3.694466423794715*^9, 
   3.694466484155167*^9, 3.6944665247224874`*^9, {3.6944666071492023`*^9, 
   3.6944666820214844`*^9}, 3.695661127602602*^9, 3.695661243135254*^9, 
   3.6956613115865755`*^9, {3.695661348759841*^9, 3.695661395289374*^9}, {
   3.6956618818428187`*^9, 3.6956619089098663`*^9}, {3.695661947160983*^9, 
   3.695661976115634*^9}, 3.6956620087797337`*^9, {3.6956620509350076`*^9, 
   3.6956620987268925`*^9}, 3.69566218332308*^9, {3.6956622210819483`*^9, 
   3.695662244360427*^9}, 3.695662299075723*^9, 3.6956623426550226`*^9, {
   3.695662374264683*^9, 3.695662393813517*^9}, {3.6956624417474227`*^9, 
   3.695662466491066*^9}, {3.6956624984363575`*^9, 3.695662510011578*^9}, 
   3.6956628270506763`*^9, {3.6956629046622524`*^9, 3.6956629254268894`*^9}, 
   3.695663010364439*^9, 3.695740743427231*^9, 3.6957409414255557`*^9, 
   3.6957410451884904`*^9, 3.6957411689865713`*^9, 3.6957412795148935`*^9, 
   3.695741470695828*^9, 3.6957415898136415`*^9, 3.6957416437197247`*^9, 
   3.6957416923645067`*^9, 3.6957418361677322`*^9, {3.69574375320438*^9, 
   3.695743774266585*^9}, 3.695743809164581*^9, 3.69574394972062*^9, 
   3.695744131318007*^9, 3.6957455103298817`*^9, 3.6957546537648244`*^9, {
   3.695823666088663*^9, 3.6958236887349586`*^9}, 3.7023937557615547`*^9, 
   3.7023938685031023`*^9, 3.710685206093203*^9}]
}, Closed]],

Cell["\<\
Here susceptible hosts are shown in red, exposed in green, infected in blue, \
and recovered in purple. \
\>", "Text",
 CellChangeTimes->{{3.694466461369864*^9, 3.694466585761979*^9}, 
   3.69446662267409*^9, {3.6958226627812777`*^9, 3.6958226732048736`*^9}, {
   3.6958235519881372`*^9, 3.695823575082458*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SEIRSPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ssol", "[", 
              RowBox[{"h", ",", "t"}], "]"}], "+", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"esol", "[", 
                RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"c", ",", "1", ",", 
                 RowBox[{"nE", "/.", "Pars"}]}], "}"}]}], "]"}], "+", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"isol", "[", 
                RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"c", ",", "1", ",", 
                 RowBox[{"nI", "/.", "Pars"}]}], "}"}]}], "]"}], "+", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"rsol", "[", 
                RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"c", ",", "1", ",", 
                 RowBox[{"nR", "/.", "Pars"}]}], "}"}]}], "]"}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ssol", "[", 
          RowBox[{"1", ",", "t"}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"esol", "[", 
            RowBox[{"1", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", 
             RowBox[{"nE", "/.", "Pars"}]}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"isol", "[", 
            RowBox[{"1", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", 
             RowBox[{"nI", "/.", "Pars"}]}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"rsol", "[", 
            RowBox[{"1", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", 
             RowBox[{"nR", "/.", "Pars"}]}], "}"}]}], "]"}]}], ")"}]}], ",", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"esol", "[", 
          RowBox[{"h", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", 
           RowBox[{"nE", "/.", "Pars"}]}], "}"}]}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"esol", "[", 
          RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", 
           RowBox[{"nE", "/.", "Pars"}]}], "}"}]}], "]"}]], ",", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"isol", "[", 
          RowBox[{"h", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", 
           RowBox[{"nI", "/.", "Pars"}]}], "}"}]}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"isol", "[", 
          RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", 
           RowBox[{"nI", "/.", "Pars"}]}], "}"}]}], "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"tmax", "/.", "Pars"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", "Green", "]"}], ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", "Thick"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Purple", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Thick", ",", "Bold", ",", "Black"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6928842354442205`*^9, 3.6928842502110653`*^9}, {
   3.6928844763319983`*^9, 3.692884482427347*^9}, {3.692884664707773*^9, 
   3.6928848527695293`*^9}, {3.6929793190494556`*^9, 
   3.6929793197884984`*^9}, {3.694466399682336*^9, 3.6944664226516495`*^9}, {
   3.694466518798149*^9, 3.694466523804435*^9}, {3.695662175318266*^9, 
   3.6956621790154724`*^9}, {3.695740913791975*^9, 3.695740948535962*^9}, 
   3.695741221329565*^9, 3.695823690103037*^9, {3.702393329472795*^9, 
   3.7023934329746027`*^9}, {3.7023937669819527`*^9, 3.702393841916067*^9}, {
   3.7023938819269648`*^9, 3.702393909601001*^9}, {3.710684945426547*^9, 
   3.7106849518222857`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 
      NCache[
       Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[1.],
      LineBox[CompressedData["
1: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
iYakgiIPLPkngaTD9qylRRp6I37oUEd8EnwvV/JdvUDD++3YmZgnSWBg/vef
6W8aIgcUkn6wJ0NqvKT2vgkaatx/vWWQJxmWFwI2d4/T0ORDPqHuVclg69Vb
7oW9L2wqo04kGca2OjZljdHQqExVHlU5GbwWJ4mlHzSkcdzhqZV1Mlik6UXT
RmmobojoK81Lhhy3E3aSTBoKU9uiSilIhtVF2koNQzS0K7g+9L/7yTCbvz/N
B7tIcEFa+WkypIUE7ng/SEPpcOo42ZgMvlt5cyMYNHSa1BqOHU+GswJXZwRo
NCTzvUXLdSYZ9L9IGdcN0FC31tnofX+S4Wp0ikYQtnkTufkvewr8p+b2/ks/
De1YWnH2gkgK9Icf463toyEuh95xZ70U+HPEJiW7h4YqC/yQ7h78PUeVvj12
4BQ/IWaUAj0dDldEsX/G7tP4bJUCfm3/VV/rpqH2F0UXDpxKAUNtHrXMLhrK
F7n8Z3t8CuRV3o4v76ChYyfETdampAA1ScAtAlvsYWnmWFoK/LCqbzfBTjQc
1blLTYHHnnqnettpyO+C9SXpkhSo08o04sA2/KTAwdudArfL+ec922joosjN
ZcuBFLCOEKvZhV1oLzN/bSgF+F+5bufGXjEkNqkwlgIj4YUr8j7R0Jl5nglZ
dgK2vksKHWjF+WfXe9ZyEgD21wIeYWfoR3535SGA5pkkegW7IZx95OEqAnw3
bdy/EVuJb6lfdz0BB4SaLANaaAiKyhzoYgTMjG/3sMA+ahnUHSFJwA1HrU2K
2HGpvz+/kyNgdHQ4+nMzDX2XmHp/ZAsBG+9t7N+N/XDLyMsLQMC344Vpik24
v6Z8bdF9BLhtfPCMC5vmfepp2X4C8j0TLg5/pCH+p4zH7GYEtCjkNN3FPq/X
V5hiS8AHytZObexYWqai5lECqquNaZLYeVeO3up0IMD4xddwduxPdR1U6eME
cHh4ZzV/oKHtFq3pD84SMMEwXHEe23QiWcjKC7//r4ND9tinKBbEtDcBjzR0
7Qyx0zveJ+y+SMCwgc0KSeyigLiVAwEEBMl171uBXSd+IOZKMAFGJl9EZ9/T
0C/n+ojGywQUpqCoFmx+tki2cxEEBFcwpSuxN93aG8YfRcAaqzLzh9h2I1VB
tvEElNbcPZeE/fK/svPMdALGGs4V2mC7XHJutr9OQE+z++sD2DyJbKqtmQTk
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
wvFq1nrs7Tf/9Q/lgtCzKz/0sf8HlesbjA==
      "]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
pMAo+j+pOowS
      "]]}, 
    {GrayLevel[0.5], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
JeP7/6fyZsWWgvJymXRy0khwXKvy8RPspyId2UMZJBCcDajZg11lWXU6IosE
tp+/d3+3oaD63Nx5sVwS5L65a5CB3TIQnd+cTwK2hI+i5tjtIm4GjkUkyJzz
u7Afu8fywl+2ByRgqnk4+NuaggZz1e6VPiRBCtn1XRU2XYRjhfaYBM+Dd0Wb
Y0d//Bpr84wE+xofbVHCFvIv2NnznAQXjmW67MB+Lu6Wp19BghmfM0+nr1HQ
mU5l2bdVJPguKN3ZhT0UwlqlWEOCXbVF7VXYBJkOzZJaEqzQxUvysLf1ZH0W
ricBj+auqwnY9yMdzVIbSCAFE78I2CcOHf21uYkE531YTl/H7u5b8wx6TwK6
VVeIObZz/IdVRisJSqIaYs5iMx0jxdt9JMFNqxPWetgZI9Z8lP9I0OD0hPMU
tsIduQLDDry+BCOjtLGb1ZYOvusiAWlQ4oMO9tXxplfHvmLLMveewZ5LT9Yu
6yHBuGNkhQl2PFzt2EslQd0/3stm2PvoUlfT+0jwQk+0wQG76u7cGNsgCb69
5Gf4Yhvp1nuHDJPgPsliKBb751zC+swoCfjP2KRlYwfnX0x0+IWftz9580vs
nYaiAr3jJNjhdU75M3bpEq3QeBLPbxyv1CQ2PKiWb6KR4GA5dHLg+f9+LrpG
eZoEqkd0lOSw3ddNTj2eJcEek4Sz57A3P9rTtf8PCVz1g8UDsXMuj1uQFklQ
UBr06B72h/Iw37AVEhxdG//ChNeHtaU+0/waCR5tlvFSxF7kEEi6zkQGCaWN
OidsCbsn985uJoNpAb95H3Ytd+Ch92xkYBI/WCKI1+f5Op1aVU4ypF0Mz7uC
Hc7f3y3GTYZOGWLoMPauxodWGTxkSJ49YCeN1/9Td5/JrXxksK98MOmN3d/K
ybIgSAa1CxxUbrx/lINUj7SKkSFrQ4DN2QGvZ6nNb05IkqGxt6DjPbb9l84z
5QfI0JfmJC+J92OanJP1XTkynNS6WjSFzRgkJ7seJ8NbB89TGXh/x9yy3TOs
QoZvnEm32J0pSFhF4aHpCTKsB6uYh2Drp76vVwcy8M/TEl1xfXig/YfOrU8G
x6VGfidcXwLcjpjUGJJBybT08xK2Psm93NaEDLesP3on3cDPG5vwrjQlA71u
IaTOHdeTxIG/5tfIkPg03BzhetbW2cJc7EuG6pT22HZcD7OWWe1M/MnQfJVd
5jaul25ims1LgWQQ33PtrnEABfH41sYa3CTDdu3sfmog7ge7yrfOJpBB8s6X
Kh5cj2mWd/lP5uP5LPk8uAnX9/rYHsKvQjIIFfq6TmOnPOOl3LlPhlkx6Qf9
uB8cY76TNVJKBvn7UoJv43B9uh+5L64Cj+dKbuu9WxTEPeUq0/2BDH5Zqg8m
cb85GqCh7vSHDJmDDt42xRSUvs067OciGW5AxEb8w//3r4i31stkiGdfe/qi
BK//z82aZutk8Ho55M6F++MJcQNdffYMCKr9pkt9RkE67ZdN5IQz4G8jeaWn
hoIuSXjZzGhnAL+X4qnLHRT0qiatyE03A8JZR7kaOilI0KTix8SZDPDLONMs
i/t7b+BfhxGjDJhYN1zd/I2CrnWEunRfzoBI1tzrX3opyCko0afCNQP+sRQP
to3h/dV5LyYgPQPm5zSZ+XDeuP+dYjRBwtdzdxY9Y8Z5aHCbwJXMDAjT4p43
ZKUiMbp/sXJuBvAut99N2kJFbRyGrYvFGcDORf6+bxsV8Wn/Yfd7nQEGc6bt
RJxvHlfqJHmNZACLP+3d0+NUNJD1K83lUCZ8DWu+dtGHirT2Jh3mPpoJnuIu
j0NwHisuPNr+UikTRt14Eh/4U5FnyU2ONdVMYOlynV0JpqJNVbvDk3UyIbc9
DNVGU9HBLqMbFWaZkH0k8nwkmYoC2apOr0dlwo9blQJStVTE7xu7mkrJBCm/
9Dxb9l7E4aV1zYtwF26Y+DwWud+LukMs98aKZkFi4Ihs9pU+VPnPtCjkQxaI
ecbm5nL3ows51/cddMyG6TyNpfuv+1GrIXVp+44c+JDI6HjpMYAW9zt+Knua
AxcmpB7QdwwidL3DVlo/F7g+N6333x9EVnUZl/rmcqFf4cVEgfIQUjkWrK2b
kgeKrZDJ/2II9QRryW5OzwO9o3K/BCqGkF8jB08zKQ9EWrq27KoaQi9MMgc1
s/PgDrddK+/rISTnUhmoXpwHrGe1lTfeDaH9+dPPlOrygK5yIC+3awhxcNgL
i0/kgblk/4G/00OoxOQg6+hkHmgwsxd3zw4hXfLc7wJ6HiR5ccw/nh9C0eIR
r/bO58H0v8Uly79DaF0977zQeh487eQvf74+hOa8KfE8fPmw/c2jb8lbhlFK
Tb5Hp0A+NFvIsvqyDaNDTNcvJe/Oh3eeBzIusw8jt9sL4tv25UP7IcKcMOcw
Gnu48y27bD5kvr7kV7BtGEUzqA9a5fKhvLTm283tw0j8WGFS7KF8+JJklGPF
PYysGw+ZbzqWD3v9R64K8Qyjdfa/0KScD6ri7aZ/sXNN6g9EquWD9rb3L7/s
HEYnyTHbNdXzoTK+LuAZ7zDq7Tdc2ED54Pi77F4i3zD6H1rPpeU=
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    Thickness[Large], Bold, 
    GrayLevel[0]],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1999.9999591836736`}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.702393759463397*^9, 3.7023937821580544`*^9}, {
   3.702393821036601*^9, 3.70239391139133*^9}, 3.710684952739909*^9, 
   3.7106852076898623`*^9}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{-1597, Automatic}, {Automatic, -281}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.350000023841858,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 264, 6, 198, "Title"],
Cell[846, 30, 624, 9, 41, "Text"],
Cell[CellGroupData[{
Cell[1495, 43, 123, 1, 85, "Section"],
Cell[1621, 46, 91, 2, 43, "Input"],
Cell[1715, 50, 555, 9, 69, "Text"],
Cell[CellGroupData[{
Cell[2295, 63, 116, 1, 59, "Subsection"],
Cell[CellGroupData[{
Cell[2436, 68, 110, 1, 46, "Subsubsection"],
Cell[2549, 71, 243, 5, 41, "Text"],
Cell[2795, 78, 851, 23, 43, "Input"],
Cell[3649, 103, 322, 7, 69, "Text"],
Cell[3974, 112, 338, 9, 43, "Input"],
Cell[4315, 123, 249, 5, 41, "Text"],
Cell[CellGroupData[{
Cell[4589, 132, 714, 22, 67, "Input"],
Cell[5306, 156, 2450, 61, 72, "Output"]
}, Closed]],
Cell[7771, 220, 174, 2, 41, "Text"],
Cell[CellGroupData[{
Cell[7970, 226, 452, 12, 64, "Input"],
Cell[8425, 240, 1367, 32, 43, "Output"]
}, Closed]],
Cell[9807, 275, 331, 11, 52, "Text"],
Cell[10141, 288, 1027, 31, 43, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[11205, 324, 178, 2, 46, "Subsubsection"],
Cell[11386, 328, 168, 3, 41, "Text"],
Cell[11557, 333, 775, 22, 43, "Input"],
Cell[12335, 357, 205, 4, 55, "Text"],
Cell[12543, 363, 434, 10, 58, "Input"],
Cell[12980, 375, 228, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[13233, 384, 1151, 31, 90, "Input"],
Cell[14387, 417, 2188, 65, 135, "Output"]
}, Closed]],
Cell[16590, 485, 372, 6, 55, "Text"],
Cell[CellGroupData[{
Cell[16987, 495, 726, 19, 86, "Input"],
Cell[17716, 516, 989, 28, 58, "Output"]
}, Closed]],
Cell[18720, 547, 486, 13, 108, "Text"],
Cell[19209, 562, 1058, 31, 58, "Input"],
Cell[20270, 595, 331, 6, 93, "Text"],
Cell[20604, 603, 1189, 35, 58, "Input"],
Cell[21796, 640, 312, 6, 93, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[22145, 651, 119, 1, 62, "Subsubsection"],
Cell[22267, 654, 622, 10, 129, "Text"],
Cell[22892, 666, 665, 16, 58, "Input"],
Cell[23560, 684, 150, 2, 55, "Text"],
Cell[CellGroupData[{
Cell[23735, 690, 360, 9, 86, "Input"],
Cell[24098, 701, 519, 11, 58, "Output"]
}, Closed]],
Cell[24632, 715, 297, 11, 70, "Text"],
Cell[24932, 728, 475, 11, 58, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[25444, 744, 117, 1, 62, "Subsubsection"],
Cell[25564, 747, 419, 7, 93, "Text"],
Cell[25986, 756, 608, 18, 58, "Input"],
Cell[26597, 776, 194, 4, 55, "Text"],
Cell[26794, 782, 885, 25, 58, "Input"],
Cell[27682, 809, 115, 1, 55, "Text"],
Cell[27800, 812, 324, 9, 58, "Input"],
Cell[CellGroupData[{
Cell[28149, 825, 124, 2, 58, "Input"],
Cell[28276, 829, 2259, 67, 97, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[30596, 903, 103, 1, 79, "Subsection"],
Cell[CellGroupData[{
Cell[30724, 908, 467, 13, 58, "Input"],
Cell[31194, 923, 1839, 57, 97, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[33070, 985, 390, 9, 58, "Input"],
Cell[33463, 996, 6408, 193, 440, "Output"]
}, Closed]],
Cell[39886, 1192, 743, 20, 102, "Text"],
Cell[CellGroupData[{
Cell[40654, 1216, 283, 7, 58, "Input"],
Cell[40940, 1225, 1618, 49, 132, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[42607, 1280, 97, 1, 79, "Subsection"],
Cell[42707, 1283, 151, 2, 55, "Text"],
Cell[42861, 1287, 1811, 52, 172, "Input"],
Cell[CellGroupData[{
Cell[44697, 1343, 672, 18, 72, "Subsubsection"],
Cell[45372, 1363, 293, 5, 93, "Text"],
Cell[CellGroupData[{
Cell[45690, 1372, 511, 15, 85, "Input"],
Cell[46204, 1389, 855, 24, 81, "Output"]
}, Closed]],
Cell[47074, 1416, 206, 5, 55, "Text"],
Cell[47283, 1423, 588, 15, 63, "Input"],
Cell[CellGroupData[{
Cell[47896, 1442, 611, 17, 85, "Input"],
Cell[48510, 1461, 582, 11, 58, "Output"]
}, Closed]],
Cell[49107, 1475, 409, 7, 93, "Text"],
Cell[CellGroupData[{
Cell[49541, 1486, 823, 22, 139, "Input"],
Cell[50367, 1510, 1001, 26, 81, "Output"]
}, Closed]],
Cell[51383, 1539, 591, 15, 94, "Text"],
Cell[51977, 1556, 843, 22, 163, "Input"],
Cell[CellGroupData[{
Cell[52845, 1582, 280, 8, 58, "Input"],
Cell[53128, 1592, 1033, 33, 82, "Output"]
}, Closed]],
Cell[54176, 1628, 284, 5, 93, "Text"],
Cell[CellGroupData[{
Cell[54485, 1637, 1000, 29, 105, "Input"],
Cell[55488, 1668, 26413, 485, 414, "Output"]
}, Closed]],
Cell[81916, 2156, 302, 5, 93, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[82255, 2166, 1787, 52, 137, "Subsubsection"],
Cell[84045, 2220, 255, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[84325, 2229, 423, 11, 58, "Input"],
Cell[84751, 2242, 349, 7, 58, "Output"]
}, Closed]],
Cell[85115, 2252, 144, 1, 55, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[85296, 2258, 1807, 52, 137, "Subsubsection"],
Cell[87106, 2312, 255, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[87386, 2321, 423, 11, 58, "Input"],
Cell[87812, 2334, 367, 8, 58, "Output"]
}, Closed]],
Cell[88194, 2345, 111, 1, 55, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[88342, 2351, 1762, 50, 140, "Subsubsection"],
Cell[90107, 2403, 255, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[90387, 2412, 449, 11, 58, "Input"],
Cell[90839, 2425, 394, 9, 58, "Output"]
}, Closed]],
Cell[91248, 2437, 125, 1, 55, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[91410, 2443, 1915, 55, 137, "Subsubsection"],
Cell[93328, 2500, 255, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[93608, 2509, 473, 11, 58, "Input"],
Cell[94084, 2522, 394, 8, 58, "Output"]
}, Closed]],
Cell[94493, 2533, 194, 4, 55, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[94736, 2543, 109, 1, 79, "Subsection"],
Cell[94848, 2546, 395, 11, 93, "Text"],
Cell[95246, 2559, 1463, 27, 63, "Input"],
Cell[96712, 2588, 440, 13, 70, "Text"],
Cell[97155, 2603, 513, 15, 58, "Input"],
Cell[97671, 2620, 1273, 38, 172, "Input"],
Cell[CellGroupData[{
Cell[98969, 2662, 1146, 30, 97, "Input"],
Cell[100118, 2694, 155656, 2559, 454, "Output"]
}, Closed]],
Cell[255789, 5256, 384, 7, 93, "Text"],
Cell[256176, 5265, 469, 14, 108, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[256694, 5285, 120, 1, 65, "Section"],
Cell[256817, 5288, 91, 2, 58, "Input"],
Cell[256911, 5292, 579, 10, 93, "Text"],
Cell[CellGroupData[{
Cell[257515, 5306, 164, 2, 79, "Subsection"],
Cell[257682, 5310, 1546, 42, 290, "Text"],
Cell[259231, 5354, 2362, 71, 202, "Input"],
Cell[261596, 5427, 871, 22, 157, "Text"],
Cell[262470, 5451, 1512, 41, 86, "Input"],
Cell[263985, 5494, 576, 11, 143, "Text"],
Cell[264564, 5507, 894, 19, 144, "Text"],
Cell[265461, 5528, 1436, 37, 86, "Input"],
Cell[266900, 5567, 246, 7, 68, "Text"],
Cell[267149, 5576, 586, 15, 108, "Text"],
Cell[267738, 5593, 1362, 36, 86, "Input"],
Cell[CellGroupData[{
Cell[269125, 5633, 108, 1, 62, "Subsubsection"],
Cell[269236, 5636, 161, 2, 55, "Text"],
Cell[269400, 5640, 2954, 78, 513, "Input"],
Cell[272357, 5720, 187, 2, 55, "Text"],
Cell[272547, 5724, 917, 28, 97, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[273513, 5758, 100, 1, 79, "Subsection"],
Cell[CellGroupData[{
Cell[273638, 5763, 127, 1, 62, "Subsubsection"],
Cell[273768, 5766, 671, 11, 166, "Text"],
Cell[274442, 5779, 1264, 39, 87, "Input"],
Cell[275709, 5820, 127, 2, 55, "Text"],
Cell[275839, 5824, 974, 27, 87, "Input"],
Cell[276816, 5853, 209, 3, 55, "Text"],
Cell[277028, 5858, 520, 15, 87, "Input"],
Cell[277551, 5875, 101, 1, 55, "Text"],
Cell[277655, 5878, 1330, 40, 245, "Text"],
Cell[CellGroupData[{
Cell[279010, 5922, 1044, 31, 130, "Input"],
Cell[280057, 5955, 2872, 85, 189, "Output"]
}, Closed]],
Cell[282944, 6043, 162, 3, 55, "Text"],
Cell[283109, 6048, 1129, 35, 157, "Input"],
Cell[CellGroupData[{
Cell[284263, 6087, 446, 13, 58, "Input"],
Cell[284712, 6102, 12064, 277, 585, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[296825, 6385, 238, 3, 62, "Subsubsection"],
Cell[297066, 6390, 381, 6, 129, "Text"],
Cell[297450, 6398, 198, 3, 55, "Text"],
Cell[297651, 6403, 492, 10, 94, "Text"],
Cell[298146, 6415, 1080, 28, 125, "Input"],
Cell[CellGroupData[{
Cell[299251, 6447, 129, 2, 58, "Input"],
Cell[299383, 6451, 1766, 51, 108, "Output"]
}, Closed]],
Cell[301164, 6505, 421, 7, 93, "Text"],
Cell[CellGroupData[{
Cell[301610, 6516, 465, 12, 58, "Input"],
Cell[302078, 6530, 898, 26, 117, "Output"]
}, Closed]],
Cell[302991, 6559, 686, 10, 166, "Text"],
Cell[303680, 6571, 198, 3, 55, "Text"],
Cell[303881, 6576, 368, 11, 58, "Input"],
Cell[304252, 6589, 6459, 155, 838, "Input"],
Cell[CellGroupData[{
Cell[310736, 6748, 101, 1, 58, "Input"],
Cell[310840, 6751, 182, 3, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[311059, 6759, 133, 2, 58, "Input"],
Cell[311195, 6763, 166, 2, 58, "Output"]
}, Closed]],
Cell[311376, 6768, 1105, 31, 133, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[312518, 6804, 164, 2, 62, "Subsubsection"],
Cell[312685, 6808, 641, 11, 129, "Text"],
Cell[313329, 6821, 2881, 75, 550, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[316247, 6901, 126, 1, 62, "Subsubsection"],
Cell[316376, 6904, 1681, 41, 259, "Text"],
Cell[CellGroupData[{
Cell[318082, 6949, 854, 27, 124, "Input"],
Cell[318939, 6978, 331, 10, 98, "Output"]
}, Closed]],
Cell[319285, 6991, 461, 14, 108, "Input"],
Cell[319749, 7007, 250, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[320024, 7016, 1622, 44, 135, "Input"],
Cell[321649, 7062, 4106, 80, 399, "Output"],
Cell[325758, 7144, 3321, 67, 414, "Output"],
Cell[329082, 7213, 4333, 83, 418, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[333476, 7303, 101, 1, 79, "Subsection"],
Cell[333580, 7306, 215, 5, 55, "Text"],
Cell[333798, 7313, 11973, 311, 1155, "Input"],
Cell[345774, 7626, 326, 6, 93, "Text"],
Cell[CellGroupData[{
Cell[346125, 7636, 105, 1, 62, "Subsubsection"],
Cell[346233, 7639, 189, 4, 55, "Text"],
Cell[346425, 7645, 1005, 34, 87, "Input"],
Cell[347433, 7681, 1168, 38, 103, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[348638, 7724, 109, 1, 62, "Subsubsection"],
Cell[348750, 7727, 759, 18, 94, "Text"],
Cell[349512, 7747, 2485, 72, 324, "Input"],
Cell[352000, 7821, 401, 7, 93, "Text"],
Cell[352404, 7830, 700, 23, 63, "Input"],
Cell[353107, 7855, 115, 1, 55, "Text"],
Cell[353225, 7858, 994, 27, 87, "Input"],
Cell[354222, 7887, 190, 2, 55, "Text"],
Cell[CellGroupData[{
Cell[354437, 7893, 1491, 40, 187, "Input"],
Cell[355931, 7935, 271, 4, 58, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[356251, 7945, 138, 2, 62, "Subsubsection"],
Cell[356392, 7949, 355, 7, 93, "Text"],
Cell[356750, 7958, 737, 17, 58, "Input"],
Cell[CellGroupData[{
Cell[357512, 7979, 545, 13, 58, "Input"],
Cell[358060, 7994, 1808, 41, 172, "Output"]
}, Closed]],
Cell[359883, 8038, 159, 3, 55, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[360091, 8047, 108, 1, 79, "Subsection"],
Cell[360202, 8050, 198, 4, 55, "Text"],
Cell[360403, 8056, 983, 21, 58, "Input"],
Cell[361389, 8079, 318, 6, 55, "Text"],
Cell[361710, 8087, 2874, 74, 626, "Input"],
Cell[364587, 8163, 1177, 31, 97, "Input"],
Cell[365767, 8196, 1143, 34, 172, "Input"],
Cell[CellGroupData[{
Cell[366935, 8234, 1702, 48, 135, "Input"],
Cell[368640, 8284, 93436, 1549, 457, "Output"]
}, Closed]],
Cell[462091, 9836, 194, 4, 55, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[462334, 9846, 107, 1, 65, "Section"],
Cell[462444, 9849, 91, 2, 58, "Input"],
Cell[462538, 9853, 594, 10, 93, "Text"],
Cell[CellGroupData[{
Cell[463157, 9867, 142, 2, 79, "Subsection"],
Cell[463302, 9871, 888, 20, 180, "Text"],
Cell[464193, 9893, 3661, 100, 278, "Input"],
Cell[467857, 9995, 1221, 23, 253, "Text"],
Cell[469081, 10020, 2407, 64, 286, "Input"],
Cell[471491, 10086, 1120, 37, 210, "Text"],
Cell[472614, 10125, 1248, 34, 157, "Input"],
Cell[473865, 10161, 1309, 37, 157, "Input"],
Cell[475177, 10200, 642, 22, 55, "Text"],
Cell[475822, 10224, 610, 18, 58, "Input"],
Cell[CellGroupData[{
Cell[476457, 10246, 125, 1, 62, "Subsubsection"],
Cell[476585, 10249, 180, 4, 55, "Text"],
Cell[476768, 10255, 4896, 121, 1080, "Input"],
Cell[481667, 10378, 118, 1, 55, "Text"],
Cell[481788, 10381, 3140, 84, 399, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[484977, 10471, 100, 1, 79, "Subsection"],
Cell[485080, 10474, 655, 10, 166, "Text"],
Cell[485738, 10486, 1331, 44, 87, "Input"],
Cell[487072, 10532, 127, 2, 55, "Text"],
Cell[487202, 10536, 1088, 30, 87, "Input"],
Cell[488293, 10568, 209, 3, 55, "Text"],
Cell[488505, 10573, 689, 20, 87, "Input"],
Cell[489197, 10595, 101, 1, 55, "Text"],
Cell[489301, 10598, 1741, 58, 319, "Text"],
Cell[CellGroupData[{
Cell[491067, 10660, 1922, 52, 170, "Input"],
Cell[492992, 10714, 3066, 89, 189, "Output"]
}, Closed]],
Cell[496073, 10806, 135, 1, 55, "Text"],
Cell[496211, 10809, 3481, 103, 311, "Input"],
Cell[499695, 10914, 231, 5, 55, "Text"],
Cell[499929, 10921, 787, 22, 58, "Input"],
Cell[500719, 10945, 140, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[500884, 10950, 651, 19, 58, "Input"],
Cell[501538, 10971, 882, 20, 58, "Output"]
}, Closed]],
Cell[502435, 10994, 461, 7, 129, "Text"],
Cell[CellGroupData[{
Cell[502921, 11005, 211, 3, 62, "Subsubsection"],
Cell[503135, 11010, 155, 3, 55, "Text"],
Cell[CellGroupData[{
Cell[503315, 11017, 442, 12, 58, "Input"],
Cell[503760, 11031, 922, 22, 58, "Output"]
}, Closed]],
Cell[504697, 11056, 129, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[504851, 11061, 403, 9, 58, "Input"],
Cell[505257, 11072, 1612, 41, 58, "Output"]
}, Closed]],
Cell[506884, 11116, 114, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[507023, 11121, 384, 11, 58, "Input"],
Cell[507410, 11134, 851, 16, 83, "Output"]
}, Closed]],
Cell[508276, 11153, 183, 4, 55, "Text"],
Cell[CellGroupData[{
Cell[508484, 11161, 161, 3, 58, "Input"],
Cell[508648, 11166, 673, 11, 58, "Output"]
}, Closed]],
Cell[509336, 11180, 698, 18, 103, "Text"],
Cell[CellGroupData[{
Cell[510059, 11202, 187, 4, 58, "Input"],
Cell[510249, 11208, 767, 16, 83, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[511065, 11230, 196, 2, 62, "Subsubsection"],
Cell[511264, 11234, 420, 7, 93, "Text"],
Cell[511687, 11243, 156, 2, 55, "Text"],
Cell[511846, 11247, 175, 4, 55, "Text"],
Cell[512024, 11253, 508, 16, 58, "Input"],
Cell[CellGroupData[{
Cell[512557, 11273, 195, 4, 58, "Input"],
Cell[512755, 11279, 3432, 95, 274, "Output"]
}, Closed]],
Cell[516202, 11377, 295, 5, 93, "Text"],
Cell[CellGroupData[{
Cell[516522, 11386, 344, 9, 58, "Input"],
Cell[516869, 11397, 647, 11, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[517553, 11413, 165, 3, 58, "Input"],
Cell[517721, 11418, 2317, 62, 184, "Output"]
}, Closed]],
Cell[520053, 11483, 115, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[520193, 11488, 456, 12, 58, "Input"],
Cell[520652, 11502, 663, 11, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[521352, 11518, 249, 6, 58, "Input"],
Cell[521604, 11526, 1435, 37, 82, "Output"]
}, Closed]],
Cell[523054, 11566, 214, 4, 55, "Text"],
Cell[523271, 11572, 207, 3, 55, "Text"],
Cell[523481, 11577, 175, 4, 55, "Text"],
Cell[523659, 11583, 531, 16, 58, "Input"],
Cell[CellGroupData[{
Cell[524215, 11603, 244, 5, 58, "Input"],
Cell[524462, 11610, 3458, 96, 222, "Output"]
}, Closed]],
Cell[527935, 11709, 249, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[528209, 11718, 372, 10, 58, "Input"],
Cell[528584, 11730, 673, 11, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[529294, 11746, 214, 4, 58, "Input"],
Cell[529511, 11752, 2338, 62, 184, "Output"]
}, Closed]],
Cell[531864, 11817, 141, 2, 55, "Text"],
Cell[CellGroupData[{
Cell[532030, 11823, 505, 13, 58, "Input"],
Cell[532538, 11838, 718, 12, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[533293, 11855, 272, 6, 58, "Input"],
Cell[533568, 11863, 1240, 34, 82, "Output"]
}, Closed]],
Cell[534823, 11900, 238, 5, 55, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[535098, 11910, 196, 2, 62, "Subsubsection"],
Cell[535297, 11914, 366, 6, 93, "Text"],
Cell[535666, 11922, 193, 5, 55, "Text"],
Cell[535862, 11929, 428, 13, 58, "Input"],
Cell[CellGroupData[{
Cell[536315, 11946, 238, 4, 58, "Input"],
Cell[536556, 11952, 5414, 156, 376, "Output"]
}, Closed]],
Cell[541985, 12111, 115, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[542125, 12116, 373, 10, 58, "Input"],
Cell[542501, 12128, 875, 19, 85, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[543413, 12152, 218, 6, 58, "Input"],
Cell[543634, 12160, 5912, 170, 527, "Output"]
}, Closed]],
Cell[549561, 12333, 114, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[549700, 12338, 489, 13, 58, "Input"],
Cell[550192, 12353, 617, 10, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[550846, 12368, 249, 7, 58, "Input"],
Cell[551098, 12377, 4075, 121, 367, "Output"]
}, Closed]],
Cell[555188, 12501, 112, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[555325, 12506, 482, 14, 58, "Input"],
Cell[555810, 12522, 979, 24, 93, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[556826, 12551, 386, 10, 58, "Input"],
Cell[557215, 12563, 5598, 165, 373, "Output"]
}, Closed]],
Cell[562828, 12731, 275, 6, 55, "Text"],
Cell[563106, 12739, 243, 6, 55, "Text"],
Cell[563352, 12747, 481, 14, 58, "Input"],
Cell[CellGroupData[{
Cell[563858, 12765, 202, 3, 58, "Input"],
Cell[564063, 12770, 5395, 156, 352, "Output"]
}, Closed]],
Cell[569473, 12929, 428, 13, 58, "Input"],
Cell[CellGroupData[{
Cell[569926, 12946, 215, 6, 58, "Input"],
Cell[570144, 12954, 3825, 110, 314, "Output"]
}, Closed]],
Cell[573984, 13067, 234, 5, 55, "Text"],
Cell[574221, 13074, 294, 7, 55, "Text"],
Cell[574518, 13083, 529, 14, 58, "Input"],
Cell[CellGroupData[{
Cell[575072, 13101, 131, 2, 58, "Input"],
Cell[575206, 13105, 5507, 159, 391, "Output"]
}, Closed]],
Cell[580728, 13267, 114, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[580867, 13272, 402, 11, 58, "Input"],
Cell[581272, 13285, 1223, 29, 86, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[582532, 13319, 217, 6, 58, "Input"],
Cell[582752, 13327, 8529, 238, 535, "Output"]
}, Closed]],
Cell[591296, 13568, 114, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[591435, 13573, 440, 12, 58, "Input"],
Cell[591878, 13587, 593, 10, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[592508, 13602, 224, 6, 58, "Input"],
Cell[592735, 13610, 7069, 193, 486, "Output"]
}, Closed]],
Cell[599819, 13806, 166, 3, 55, "Text"],
Cell[599988, 13811, 342, 7, 55, "Text"],
Cell[600333, 13820, 582, 15, 58, "Input"],
Cell[CellGroupData[{
Cell[600940, 13839, 129, 2, 58, "Input"],
Cell[601072, 13843, 5508, 159, 441, "Output"]
}, Closed]],
Cell[606595, 14005, 114, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[606734, 14010, 403, 11, 58, "Input"],
Cell[607140, 14023, 593, 10, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[607770, 14038, 181, 4, 58, "Input"],
Cell[607954, 14044, 4066, 116, 287, "Output"]
}, Closed]],
Cell[612035, 14163, 184, 4, 55, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[612256, 14172, 272, 3, 62, "Subsubsection"],
Cell[612531, 14177, 361, 6, 93, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[612929, 14188, 221, 2, 62, "Subsubsection"],
Cell[613153, 14192, 574, 9, 129, "Text"],
Cell[613730, 14203, 749, 22, 58, "Input"],
Cell[CellGroupData[{
Cell[614504, 14229, 128, 2, 58, "Input"],
Cell[614635, 14233, 5381, 160, 496, "Output"]
}, Closed]],
Cell[620031, 14396, 110, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[620166, 14401, 379, 11, 58, "Input"],
Cell[620548, 14414, 1028, 24, 85, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[621613, 14443, 218, 6, 58, "Input"],
Cell[621834, 14451, 13904, 333, 186, "Output"]
}, Closed]],
Cell[635753, 14787, 160, 2, 55, "Text"],
Cell[CellGroupData[{
Cell[635938, 14793, 601, 15, 58, "Input"],
Cell[636542, 14810, 901, 19, 85, "Output"]
}, Closed]],
Cell[637458, 14832, 110, 1, 55, "Text"],
Cell[CellGroupData[{
Cell[637593, 14837, 830, 22, 58, "Input"],
Cell[638426, 14861, 47618, 960, 1956, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[686093, 15827, 134, 1, 62, "Subsubsection"],
Cell[686230, 15830, 452, 8, 93, "Text"],
Cell[686685, 15840, 176, 2, 55, "Text"],
Cell[686864, 15844, 500, 10, 94, "Text"],
Cell[687367, 15856, 1185, 32, 183, "Input"],
Cell[CellGroupData[{
Cell[688577, 15892, 59, 1, 58, "Input"],
Cell[688639, 15895, 3790, 109, 221, "Output"]
}, Closed]],
Cell[692444, 16007, 361, 7, 93, "Text"],
Cell[CellGroupData[{
Cell[692830, 16018, 732, 16, 58, "Input"],
Cell[693565, 16036, 1716, 46, 121, "Output"]
}, Closed]],
Cell[695296, 16085, 466, 8, 129, "Text"],
Cell[695765, 16095, 184, 4, 55, "Text"],
Cell[695952, 16101, 415, 12, 58, "Input"],
Cell[696370, 16115, 8397, 202, 992, "Input"],
Cell[CellGroupData[{
Cell[704792, 16321, 101, 1, 58, "Input"],
Cell[704896, 16324, 414, 7, 58, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[705347, 16336, 133, 2, 58, "Input"],
Cell[705483, 16340, 395, 6, 58, "Output"]
}, Closed]],
Cell[705893, 16349, 300, 5, 93, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[706230, 16359, 109, 1, 62, "Subsubsection"],
Cell[706342, 16362, 440, 7, 129, "Text"],
Cell[CellGroupData[{
Cell[706807, 16373, 472, 14, 58, "Input"],
Cell[707282, 16389, 2374, 55, 172, "Output"]
}, Closed]],
Cell[709671, 16447, 4375, 110, 471, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[714095, 16563, 101, 1, 79, "Subsection"],
Cell[714199, 16566, 22011, 510, 1911, "Input"],
Cell[CellGroupData[{
Cell[736235, 17080, 170, 2, 62, "Subsubsection"],
Cell[736408, 17084, 225, 4, 55, "Text"],
Cell[736636, 17090, 16797, 425, 1992, "Input"],
Cell[753436, 17517, 348, 6, 55, "Text"],
Cell[753787, 17525, 3130, 98, 264, "Input"],
Cell[756920, 17625, 109, 1, 55, "Text"],
Cell[757032, 17628, 3571, 101, 233, "Input"],
Cell[CellGroupData[{
Cell[760628, 17733, 2639, 77, 302, "Input"],
Cell[763270, 17812, 220, 3, 58, "Output"]
}, Closed]],
Cell[763505, 17818, 1629, 47, 133, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[765171, 17870, 230, 3, 62, "Subsubsection"],
Cell[765404, 17875, 192, 4, 55, "Text"],
Cell[765599, 17881, 1029, 23, 105, "Input"],
Cell[766631, 17906, 254, 5, 55, "Text"],
Cell[CellGroupData[{
Cell[766910, 17915, 772, 20, 58, "Input"],
Cell[767685, 17937, 2641, 64, 180, "Output"]
}, Closed]],
Cell[770341, 18004, 279, 6, 55, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[770669, 18016, 113, 1, 79, "Subsection"],
Cell[770785, 18019, 2737, 45, 97, "Input"],
Cell[773525, 18066, 748, 11, 166, "Text"],
Cell[774276, 18079, 4582, 115, 321, "Input"],
Cell[CellGroupData[{
Cell[778883, 18198, 493, 12, 58, "Input"],
Cell[779379, 18212, 464, 9, 31, "Message"],
Cell[779846, 18223, 620, 16, 43, "Output"]
}, Closed]],
Cell[780481, 18242, 3687, 94, 134, "Input"],
Cell[784171, 18338, 2549, 74, 184, "Input"],
Cell[CellGroupData[{
Cell[786745, 18416, 2621, 68, 100, "Input"],
Cell[789369, 18486, 84463, 1398, 337, "Output"]
}, Closed]],
Cell[873847, 19887, 321, 6, 41, "Text"],
Cell[CellGroupData[{
Cell[874193, 19897, 5787, 144, 241, "Input"],
Cell[879983, 20043, 32570, 551, 337, "Output"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

