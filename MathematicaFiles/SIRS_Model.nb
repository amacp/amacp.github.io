(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1503573,      34250]
NotebookOptionsPosition[   1470244,      33258]
NotebookOutlinePosition[   1470758,      33278]
CellTagsIndexPosition[   1470715,      33275]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Supplement A: SIRS model with Classic Matching Alleles Model"
}], "Title",
 CellChangeTimes->{{3.690806751166273*^9, 3.690806803941292*^9}}],

Cell[TextData[StyleBox["Joint coevolutionary-epidemiological models dampen \
Red Queen cycles and alter conditions for epidemics,  Ailene MacPherson and \
Sarah P. Otto, Theoretical Population Biology.",
 FontSlant->"Italic",
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.69161364352862*^9, 3.691613670270812*^9}, {
  3.691858008367022*^9, 3.6918580700985527`*^9}, {3.6918733325025125`*^9, 
  3.691873333247555*^9}, {3.6947928409095826`*^9, 3.6947928427436876`*^9}, {
  3.6954840382796345`*^9, 3.69548403854865*^9}, {3.6961733458830295`*^9, 
  3.6961733516163573`*^9}, {3.713363561211844*^9, 3.713363563683297*^9}}],

Cell[CellGroupData[{

Cell["Matching Alleles Model", "Chapter",
 CellChangeTimes->{{3.6908068416854506`*^9, 3.690806847988811*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input"],

Cell["\<\
Here we derive a classic single locus matching alleles model of host parasite \
coevolution, determine the equilibrium allele frequencies in the host and \
parasite, and assess the stability of these equilibria to determine long term \
dynamics.\
\>", "Text",
 CellChangeTimes->{{3.691858106958661*^9, 3.6918582092275105`*^9}, {
  3.704539922020974*^9, 3.7045399295781918`*^9}}],

Cell[CellGroupData[{

Cell["The Differential Equations", "Subchapter",
 CellChangeTimes->{{3.690806885261943*^9, 3.690806889565189*^9}, 
   3.69081130390417*^9}],

Cell[CellGroupData[{

Cell["The Host Equation", "Subsubsection",
 CellChangeTimes->{{3.6908069691737423`*^9, 3.6908069747570615`*^9}}],

Cell["\<\
Let \[Rho][i,t] be the probability that a host of type i is infected in the \
unit of time from t to t+\[CapitalDelta]t\
\>", "Text",
 CellChangeTimes->{{3.6908085391335387`*^9, 3.690808595885785*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", 
   RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"\[CapitalDelta]t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"i", ",", "1"}], "]"}], 
      RowBox[{"pP", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"i", ",", "2"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pP", "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.690808582560023*^9, 3.6908086271445727`*^9}}],

Cell[TextData[{
 "Here \[Beta][i,j] is the probability that a host of type i is infected with \
a pathogen of type ",
 StyleBox["j, where pP[t] equals the frequency of ",
  FontColor->GrayLevel[0]],
 "the type 1 pathogen.  \nThe resulting absolute fitness of type i host is"
}], "Text",
 CellChangeTimes->{{3.690808631892844*^9, 3.6908086639736795`*^9}, {
  3.6908088480283947`*^9, 3.690808892458488*^9}, {3.691770334956768*^9, 
  3.691770350258335*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"WH", "[", 
   RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"\[Xi]H", " ", 
    RowBox[{"\[Rho]", "[", 
     RowBox[{"i", ",", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.690808887419679*^9, 3.690808913567325*^9}}],

Cell["\<\
Here \[Xi]H is the fitness cost to the host of infection.
The frequency of type 1 host (pH) at time t+\[CapitalDelta]t is therefore \
given by:\
\>", "Text",
 CellChangeTimes->{{3.6908089244093447`*^9, 3.690808950662419*^9}, {
  3.6908093543927455`*^9, 3.6908093645347633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pH", "[", 
   RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], 
     RowBox[{"WH", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], 
      RowBox[{"WH", "[", 
       RowBox[{"1", ",", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
      RowBox[{"WH", "[", 
       RowBox[{"2", ",", "t"}], "]"}]}]}]], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.678454995992448*^9, 3.6784550577999835`*^9}, {
  3.690808961996839*^9, 3.69080896795605*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
       RowBox[{"pP", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
      RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
     RowBox[{"pP", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
    RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
     RowBox[{"\[Beta]", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "+", 
    RowBox[{"\[CapitalDelta]t", " ", "\[Xi]H", " ", 
     RowBox[{"pH", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}], "+", 
       RowBox[{
        RowBox[{"pP", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Beta]", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "-", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"1", ",", "2"}], "]"}], "-", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"2", ",", "1"}], "]"}], "+", 
          RowBox[{"\[Beta]", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.6784550537597523`*^9, 3.6784550591500607`*^9}, 
   3.678455093860046*^9, 3.6784555042927322`*^9, 3.6844171581460996`*^9, 
   3.6845172226519675`*^9, 3.685818235057436*^9, 3.6872612308500032`*^9, 
   3.687278773004179*^9, 3.69080897397766*^9, 3.6929003544885955`*^9}]
}, Closed]],

Cell[TextData[{
 "Using the definition of the derivative the differential equation describing \
the change in host allele frequency ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"pH", "[", "t", "]"}]}], ")"}], TraditionalForm]]],
 " is given by:"
}], "Text",
 CellChangeTimes->{{3.6908089892344866`*^9, 3.6908090584998198`*^9}, 
   3.6908113158738546`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "-", 
      RowBox[{"pH", "[", "t", "]"}]}], "\[CapitalDelta]t"], ",", 
    RowBox[{"\[CapitalDelta]t", "\[Rule]", "0"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6908090637726293`*^9, 3.6908090740686474`*^9}}],

Cell[BoxData[
 RowBox[{"\[Xi]H", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
  RowBox[{"pH", "[", "t", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Beta]", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "-", 
    RowBox[{"\[Beta]", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "+", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "+", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.69080907564425*^9, 3.692900354766597*^9}]
}, Closed]],

Cell["Rewriting this we have", "Text",
 CellChangeTimes->{{3.690809090154276*^9, 3.6908090979306927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "\[Xi]H"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"pH", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6784552893382263`*^9, 3.67845536667465*^9}, {
  3.678455515561754*^9, 3.6784555186681595`*^9}, {3.678456154692601*^9, 
  3.678456159513816*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["The Pathogen Equation", "Subsubsection",
 CellChangeTimes->{{3.6908091756216297`*^9, 3.6908091800520377`*^9}}],

Cell["\<\
Let the probability that a pathogen of type i infects a host in the time t to \
t+\[CapitalDelta]t be \[Eta][i,t+\[CapitalDelta]t]\
\>", "Text",
 CellChangeTimes->{{3.6908091947940636`*^9, 3.6908092369009385`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Eta]", "[", 
   RowBox[{"i_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"\[CapitalDelta]t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "i"}], "]"}], 
      RowBox[{"pH", "[", "t", "]"}]}], "+", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "i"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pH", "[", "t", "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6908092468069563`*^9, 3.6908092880398283`*^9}}],

Cell["The absolute fitness of pathogen type i is", "Text",
 CellChangeTimes->{{3.690809298150646*^9, 3.690809333065508*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"WP", "[", "i_", "]"}], ":=", 
  RowBox[{"1", "+", 
   RowBox[{"\[Xi]P", " ", 
    RowBox[{"\[Eta]", "[", 
     RowBox[{"i", ",", "t"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.690809313844274*^9, 3.6908093277302985`*^9}}],

Cell["\<\
Here \[Xi]P is the fitness benefit to the pathogen of infection.
The resulting frequency of type 1 pathogens at time t+\[CapitalDelta]t is:\
\>", "Text",
 CellChangeTimes->{{3.690809337201515*^9, 3.690809398654023*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pP", "[", 
   RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], 
     RowBox[{"WP", "[", "1", "]"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], 
      RowBox[{"WP", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
      RowBox[{"WP", "[", "2", "]"}]}]}]], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6784557703524275`*^9, 3.678455798016141*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"pP", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"\[CapitalDelta]t", " ", "\[Xi]P", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Beta]", "[", 
            RowBox[{"1", ",", "1"}], "]"}], "-", 
           RowBox[{"\[Beta]", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}], "+", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[CapitalDelta]t", " ", "\[Xi]P", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"pH", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "1"}], "]"}], "-", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pP", "[", "t", "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"\[CapitalDelta]t", " ", "\[Xi]P", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"pH", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "2"}], "]"}], "-", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{{3.6784557993042145`*^9, 3.678455811399906*^9}, 
   3.678455881847477*^9, 3.678455917808213*^9, 3.6844171585985003`*^9, 
   3.684517223068991*^9, 3.6858182354786367`*^9, 3.6872612334291515`*^9, 
   3.687278773477206*^9, 3.690809430224901*^9, 3.692900354912599*^9}]
}, Closed]],

Cell[TextData[{
 "Using the definition of the derivative, the differential equation for the \
change in pathogen allele frequency ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"pP", "[", "t", "]"}]}], ")"}], TraditionalForm]]],
 " is"
}], "Text",
 CellChangeTimes->{{3.6908094337973075`*^9, 3.6908095095182714`*^9}, {
  3.690811317904971*^9, 3.690811322145213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"t", "+", "\[CapitalDelta]t"}], "]"}], "-", 
      RowBox[{"pP", "[", "t", "]"}]}], "\[CapitalDelta]t"], ",", 
    RowBox[{"\[CapitalDelta]t", "\[Rule]", "0"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6784558409831395`*^9, 3.678455844598346*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Xi]P"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"pP", "[", "t", "]"}]}], ")"}], " ", 
  RowBox[{"pP", "[", "t", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"\[Beta]", "[", 
     RowBox[{"2", ",", "1"}], "]"}], "-", 
    RowBox[{"\[Beta]", "[", 
     RowBox[{"2", ",", "2"}], "]"}], "+", 
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "-", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "+", 
       RowBox[{"\[Beta]", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.6784558456334057`*^9, 3.678455883635579*^9, 
  3.6784559190908213`*^9, 3.6844171587545004`*^9, 3.684517223169997*^9, 
  3.685818235587837*^9, 3.6872612335411577`*^9, 3.6872787735892124`*^9, 
  3.690809483690195*^9, 3.6929003550526013`*^9}]
}, Closed]],

Cell["Rewriting this", "Text",
 CellChangeTimes->{{3.6908094867010007`*^9, 3.690809506179866*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "t_", "]"}], ":=", 
  RowBox[{"\[Xi]P", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pP", "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"pP", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.6784558640654593`*^9, 3.678455988249217*^9}, 
   3.678456211071764*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["The System of differential equations", "Subsubsection",
 CellChangeTimes->{{3.6908095224058943`*^9, 3.6908095283183045`*^9}, 
   3.6908113239313154`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "\[Xi]H"}], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pH", "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"pH", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "[", "t_", "]"}], ":=", 
  RowBox[{"\[Xi]P", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pP", "[", "t", "]"}]}], ")"}], " ", 
   RowBox[{"pP", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}]}], "Input",
 CellChangeTimes->{{3.6784552893382263`*^9, 3.67845536667465*^9}, {
  3.678455515561754*^9, 3.6784555186681595`*^9}, {3.678456154692601*^9, 
  3.678456159513816*^9}, {3.6908095370075197`*^9, 3.6908095372415204`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ODEs", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
       RowBox[{"f1", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
       RowBox[{"f2", "[", "t", "]"}]}]}], "}"}], "/.", "\[Beta]sub"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.692900387427647*^9, 3.6929004013896666`*^9}}],

Cell[TextData[{
 "To simplify the analysis we assume that we have a",
 StyleBox[" symmetric matching model where infection from either pathogen to \
the matching host is the same,  \[Beta][1,1]=\[Beta][2,2]=X, as is the \
probability of infection to a non-matching host, ",
  FontColor->GrayLevel[0]],
 "\[Beta][1,2]=\[Beta][2,1]=Y"
}], "Text",
 CellChangeTimes->{{3.6908095462135363`*^9, 3.690809602984036*^9}, {
  3.691770426711383*^9, 3.691770498578548*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "X"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "X"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678456868740335*^9, 3.678456873435943*^9}, 
   3.6908096112072506`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria", "Subchapter",
 CellChangeTimes->{{3.6908096409221044`*^9, 3.6908096431529083`*^9}}],

Cell["\<\
Let pHe and pPe be the host and pathogen allele frequencies at equilibrium, \
then the following two equations can be satisfied at equilibrium\
\>", "Text",
 CellChangeTimes->{{3.6908097046352572`*^9, 3.6908097309555035`*^9}, {
   3.6908113315527515`*^9, 3.690811333647871*^9}, 3.69177051951265*^9, {
   3.691858655483035*^9, 3.6918586556710453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiEqus", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[Xi]H"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pHe"}], ")"}], " ", "pHe", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "pPe"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "2"}], "]"}], "-", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"pPe", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "1"}], "]"}], "-", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}]}], "\[Equal]",
       "0"}], ",", 
     RowBox[{
      RowBox[{"\[Xi]P", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "pPe"}], ")"}], " ", "pPe", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "pHe"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "1"}], "]"}], "-", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
         RowBox[{"pHe", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "1"}], "]"}], "-", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}], "\[Equal]",
       "0"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.690809732702707*^9, 3.6908097896390266`*^9}}],

Cell["Solving for the equilibria gives:", "Text",
 CellChangeTimes->{{3.6908098051786537`*^9, 3.6908098088134604`*^9}, {
  3.690809844584961*^9, 3.6908098517141733`*^9}, {3.69177053330368*^9, 
  3.691770546165661*^9}, {3.6945474151394124`*^9, 3.694547423066866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equilibria", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"EquiEqus", ",", 
     RowBox[{"{", 
      RowBox[{"pHe", ",", "pPe"}], "}"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.690809794087034*^9, 3.690809864095996*^9}, 
   3.6945474083720255`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "0"}], ",", 
     RowBox[{"pPe", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "1"}], ",", 
     RowBox[{"pPe", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "0"}], ",", 
     RowBox[{"pPe", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "1"}], ",", 
     RowBox[{"pPe", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "1"}], "]"}]}], "+", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "+", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]]}], ",", 
     RowBox[{"pPe", "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], "+", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "2"}], "]"}], "-", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "+", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.690809820709919*^9, {3.6908098556407814`*^9, 3.690809864688797*^9}, 
   3.692900365453616*^9, 3.6945474098041077`*^9}]
}, Closed]],

Cell["\<\
Under the special case of symmetry given by \[Beta]sub these simplify to:\
\>", "Text",
 CellChangeTimes->{{3.6945474284831758`*^9, 3.6945474451791306`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equilibria", "=", 
  RowBox[{
   RowBox[{"Equilibria", "/.", "\[Beta]sub"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.694547446085182*^9, 3.6945474607730227`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "0"}], ",", 
     RowBox[{"pPe", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "1"}], ",", 
     RowBox[{"pPe", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "0"}], ",", 
     RowBox[{"pPe", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", "1"}], ",", 
     RowBox[{"pPe", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pHe", "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"pPe", "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.69454745496169*^9, 3.694547461274051*^9}}]
}, Closed]],

Cell[TextData[{
 "Hence the polymorphic equilibrium under the symmetric matching model is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "2"]}], "}"}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6908098696808057`*^9, 3.690809911139312*^9}, {
  3.690810100039527*^9, 3.69081010180333*^9}, {3.6908113382261333`*^9, 
  3.690811341369313*^9}, {3.694547470709591*^9, 3.694547472229678*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subchapter",
 CellChangeTimes->{{3.690806940742116*^9, 3.690806942157197*^9}}],

Cell[TextData[{
 "The stability of the polymorphic ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"pHe", "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{"pPe", "\[Rule]", 
     FractionBox["1", "2"]}]}], "}"}]],
  CellChangeTimes->{
   3.690809820709919*^9, {3.6908098556407814`*^9, 3.690809864688797*^9}}],
 " can be assessed using the Jacobian matrix evaluated at this equilibrium"
}], "Text",
 CellChangeTimes->{{3.690809936711757*^9, 3.690809981589053*^9}, {
   3.6908100850011005`*^9, 3.690810118142559*^9}, 3.6908113442254763`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Jmtrx", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f1", "[", "t", "]"}], ",", 
           RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f1", "[", "t", "]"}], ",", 
           RowBox[{"pP", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f2", "[", "t", "]"}], ",", 
           RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f2", "[", "t", "]"}], ",", 
           RowBox[{"pP", "[", "t", "]"}]}], "]"}]}], "}"}]}], "}"}], "/.", 
     "\[Beta]sub"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], ",", 
      RowBox[{
       RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}]}], "}"}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.690809983017872*^9, 3.6908100545635977`*^9}, {
  3.690810123103368*^9, 3.6908101668494654`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]H"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Xi]P"}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.690810055156399*^9, 3.6908100705378747`*^9}, {
   3.6908101363477907`*^9, 3.6908101672862663`*^9}, 3.692900365483616*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "Jmtrx", "]"}]], "Input",
 CellChangeTimes->{{3.6908101741280785`*^9, 3.690810177762885*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"X", "-", "Y"}], ")"}], " ", 
    SqrtBox["\[Xi]H"], " ", 
    SqrtBox["\[Xi]P"]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"X", "-", "Y"}], ")"}], " ", 
    SqrtBox["\[Xi]H"], " ", 
    SqrtBox["\[Xi]P"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.692900365513616*^9}]
}, Closed]],

Cell[TextData[StyleBox["Because \[Xi]H and \[Xi]P are both positive, both \
eigenvalues are purely imaginary, implying that the system is neutrally \
stable about this endemic equilibrium.",
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.690810192972912*^9, 3.6908102307038307`*^9}, {
  3.6908113511368713`*^9, 3.690811353384*^9}, {3.691770573941197*^9, 
  3.691770604860674*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subchapter",
 CellChangeTimes->{{3.690806946333436*^9, 3.690806949517618*^9}}],

Cell["\<\
We can numerically integrate system f1[t],f2[t] to confirm that the cycles \
are indeed stable.  We do so for the parameters given in Pars and initial \
conditions given by Inits\
\>", "Text",
 CellChangeTimes->{{3.6908102488320627`*^9, 3.6908102965077467`*^9}, 
   3.690811356088155*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Xi]H", "\[Rule]", "0.14"}], ",", 
     RowBox[{"\[Xi]P", "\[Rule]", "1"}], ",", 
     RowBox[{"X", "\[Rule]", "0.5"}], ",", 
     RowBox[{"Y", "\[Rule]", "0.25"}], ",", 
     RowBox[{"tmax", "\[Rule]", "1000"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.678565835335183*^9, 3.6785658641398306`*^9}, {
  3.6844171670577197`*^9, 3.6844171914150267`*^9}, {3.6844173547283545`*^9, 
  3.684417386140029*^9}, {3.684517193822318*^9, 3.6845171971235075`*^9}, {
  3.6845173405077085`*^9, 3.6845173419397907`*^9}, {3.687261290170397*^9, 
  3.68726129408162*^9}, {3.692900419681692*^9, 3.6929004652377567`*^9}, {
  3.692900641485005*^9, 3.692900641935005*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inits", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "0", "]"}], "\[Equal]", "0.6"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "0", "]"}], "\[Equal]", "0.3"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.690810314415824*^9, 3.6908103191582317`*^9}, {
  3.6908109200312138`*^9, 3.6908109374802113`*^9}, {3.6908110851446576`*^9, 
  3.6908110855846825`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nsol", "=", 
  RowBox[{
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"ODEs", "[", "t", "]"}], ",", "Inits"}], "]"}], "/.", 
      "Pars"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH", "[", "t", "]"}], ",", 
       RowBox[{"pP", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"tmax", "/.", "Pars"}]}], "}"}]}], "]"}], "//", 
   "Flatten"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pHsol", "[", "\[Tau]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pPsol", "[", "\[Tau]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.690810961512586*^9, 3.69081105126572*^9}, {
  3.690811128266124*^9, 3.690811165732267*^9}, {3.69290041075068*^9, 
  3.6929004125516825`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "1000.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     TagBox[
      RowBox[{"InterpolatingFunction", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0.`", ",", "1000.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
       "]"}],
      False,
      Editable->False], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.690811005054077*^9, 3.690811051656742*^9}, {
   3.690811090390958*^9, 3.690811130166233*^9}, 3.690811167500368*^9, 
   3.692900365703616*^9, 3.692900413061683*^9, {3.6929004553267426`*^9, 
   3.6929004678397603`*^9}, 3.692900644645009*^9}]
}, Closed]],

Cell["\<\
Here we plot host allele frequency is shown in black and pathogen allele \
frequency in green.\
\>", "Text",
 CellChangeTimes->{{3.692901231241979*^9, 3.6929012604720206`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AFPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pHsol", "[", "t", "]"}], ",", 
      RowBox[{"pPsol", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"tmax", "/.", "Pars"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", 
         RowBox[{"Darker", "[", "Green", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Bold"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6908111698705034`*^9, 3.690811285948143*^9}, {
  3.692900476331772*^9, 3.6929005135178246`*^9}, {3.6929005635858955`*^9, 
  3.692900566315899*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
A8OrFHyyywX4NLtfs4gDlrrp0d+qBeh/MHMz0Q==
     "]]}, 
   {RGBColor[0, 
     NCache[
      Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], 
    LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  AxesStyle->Bold,
  PlotRange->{{0, 1000}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.690811280909855*^9, 3.6908112863811674`*^9}, 
   3.6929003660636168`*^9, 3.6929004155416865`*^9, {3.692900456246744*^9, 
   3.692900513967825*^9}, 3.6929005667958994`*^9, 3.6929006456460104`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["SIRS Model without Coevolution", "Chapter",
 CellChangeTimes->{{3.6908068576133614`*^9, 3.690806865004784*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.690812851692323*^9, {3.695052490816782*^9, 3.6950524918931837`*^9}}],

Cell[TextData[StyleBox["Here we derive an SIRS model without host or pathogen \
genetic variation that exhibits a range of epidemiological dynamics.  We \
identify the equilibria of this model and then assess the stability of these \
equilibria to determine the long term epidemiological dynamics.",
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.691613693840819*^9, 3.691613712989215*^9}, {
   3.6918587305023255`*^9, 3.6918588079017525`*^9}, 3.704539912060012*^9}],

Cell[CellGroupData[{

Cell["The Differential Equations", "Subchapter",
 CellChangeTimes->{{3.690806885261943*^9, 3.690806889565189*^9}, 
   3.6908091379155636`*^9}],

Cell[TextData[{
 "Let F1[0,t_]= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["d", "dt"], 
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}]}], TraditionalForm]]],
 " ",
 StyleBox["be",
  FontColor->GrayLevel[0]],
 " the rate of change in the susceptible host population density ",
 StyleBox["at time t",
  FontColor->GrayLevel[0]],
 ". ",
 StyleBox["In the absence of genetic variation within the host population, we \
have only one type of host, which we label \[OpenCurlyDoubleQuote]0\
\[CloseCurlyDoubleQuote], as a",
  FontColor->GrayLevel[0]],
 " placeholder."
}], "Text",
 CellChangeTimes->{{3.690812798332182*^9, 3.690812820443468*^9}, {
   3.69081287281676*^9, 3.690812875406365*^9}, {3.690813044333941*^9, 
   3.69081304502995*^9}, {3.6908132200276785`*^9, 3.6908132221492825`*^9}, 
   3.6908155239856086`*^9, {3.690819665014462*^9, 3.690819665886512*^9}, {
   3.6908201906865287`*^9, 3.690820206806451*^9}, {3.690820249750907*^9, 
   3.6908202606865325`*^9}, {3.691253272841132*^9, 3.6912533386410522`*^9}, 
   3.6914375061556025`*^9, {3.691770654024746*^9, 3.691770661360097*^9}, {
   3.6917707818897867`*^9, 3.691770837877241*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F1", "[", 
   RowBox[{"0", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"b", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"0", ",", "t"}], "]"}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nI"], 
       RowBox[{"(", 
        RowBox[{"i", "[", 
         RowBox[{"j", ",", "t"}], "]"}], ")"}]}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nR"], 
       RowBox[{"(", 
        RowBox[{"r", "[", 
         RowBox[{"j", ",", "t"}], "]"}], ")"}]}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"0", ",", "t"}], "]"}], "+", 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "nI"], 
          RowBox[{"(", 
           RowBox[{"i", "[", 
            RowBox[{"j", ",", "t"}], "]"}], ")"}]}], "+", 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"j", "=", "1"}], "nR"], 
          RowBox[{"(", 
           RowBox[{"r", "[", 
            RowBox[{"j", ",", "t"}], "]"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   "-", 
   RowBox[{"d", " ", 
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], " ", 
    RowBox[{"r", "[", 
     RowBox[{"nR", ",", "t"}], "]"}]}], "-", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "nI"], 
     RowBox[{"(", 
      RowBox[{"i", "[", 
       RowBox[{"j", ",", "t"}], "]"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.690812830476286*^9, 3.6908128625363426`*^9}, 
   3.690813002399067*^9, {3.690813228935294*^9, 3.6908132324141*^9}, 
   3.6908162205434494`*^9, {3.690816310871616*^9, 3.690816336902105*^9}, {
   3.6908163714960833`*^9, 3.690816372967168*^9}, {3.690819654298849*^9, 
   3.69081965466387*^9}, {3.6908202645527534`*^9, 3.690820272465206*^9}, {
   3.6908204317293158`*^9, 3.6908204379226694`*^9}, {3.6908204705135336`*^9, 
   3.6908204707935495`*^9}}],

Cell[TextData[{
 "Here i[c,t] is the density of infected hosts in class c, and r[c,t] is the \
density of recovered hosts in class c at time t.  The rate of infection of \
susceptible hosts upon contact with an infection is \[Beta], the birth rate \
is b, d is the death rate of uninfected hosts, \[Kappa] is the inverse of the \
carrying capacity, the number of recovered classes is given by nR, and the \
expected time spent in the recovered compartment \[Tau]R. \n\nThe \
differential equation for the density of infected hosts in class c, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F2", "[", 
     RowBox[{"c", ",", "t"}], "]"}], "=", 
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"i", "[", 
      RowBox[{"c", ",", "t"}], "]"}]}]}], TraditionalForm]]],
 ".  Note that infections must start in class \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] and then progress through the later classes, hence \
F2[1,t] has a fundamentally different form from F2[c,t] for c>1."
}], "Text",
 CellChangeTimes->{{3.6908128777463694`*^9, 3.6908130606979856`*^9}, {
   3.6908131085930705`*^9, 3.6908131260703087`*^9}, {3.690813225425288*^9, 
   3.6908132614311514`*^9}, {3.690814034574419*^9, 3.6908140739016685`*^9}, {
   3.690815531791055*^9, 3.6908155411875925`*^9}, 3.6908196627583327`*^9, {
   3.69125335421988*^9, 3.6912533967657585`*^9}, {3.6912534421808395`*^9, 
   3.691253443803242*^9}, {3.6917706961134357`*^9, 3.6917707293257513`*^9}, {
   3.691770845986508*^9, 3.691770878321879*^9}, {3.6917709121214027`*^9, 
   3.6917709696932907`*^9}, {3.6918588868672695`*^9, 3.691858901018079*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F2", "[", 
   RowBox[{"c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{"\[Beta]", " ", 
      RowBox[{"s", "[", 
       RowBox[{"0", ",", "t"}], "]"}], 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nI"], 
       RowBox[{"(", 
        RowBox[{"i", "[", 
         RowBox[{"j", ",", "t"}], "]"}], ")"}]}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{"i", "[", 
       RowBox[{
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.690813095845848*^9, 3.6908131007618566`*^9}, 
   3.6908164634293413`*^9, {3.6908202781495314`*^9, 3.690820278421547*^9}}],

Cell[TextData[{
 "Here nI is the number of infectious classes, \[Tau]I is the average time \
spent infected and \[Delta] is the death rate of infected individuals such \
that \[Delta]-d is a measure of pathogen virulence.\n\n",
 StyleBox["The differential equation for the recovered hosts, ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"r", "[", 
      RowBox[{"c", ",", "t"}], "]"}]}], "=", 
    RowBox[{"F3", "[", 
     RowBox[{"c", ",", "t"}], "]"}]}], TraditionalForm]],
  FontColor->GrayLevel[0]],
 StyleBox[".  Note that recovered individuals must start in class \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] and then progress through \
the later classes, hence F3[1,t] has a different form from F3[c,t] for c>1.",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.6908131317799187`*^9, 3.6908132176720743`*^9}, {
   3.6908140813660955`*^9, 3.690814086238374*^9}, 3.6908155447387953`*^9, {
   3.691253404636173*^9, 3.6912534514482555`*^9}, 3.691770902964793*^9, {
   3.6917709533452682`*^9, 3.691770967211722*^9}, {3.691858906550395*^9, 
   3.6918589103456125`*^9}, {3.691859038264929*^9, 3.6918590410230865`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F3", "[", 
   RowBox[{"c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{"i", "[", 
       RowBox[{"nI", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nR", "\[Tau]R"], " ", 
      RowBox[{"r", "[", 
       RowBox[{
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762951452569356`*^9, 3.6762954510883603`*^9}, {
   3.6762954881267023`*^9, 3.6762955488568335`*^9}, {3.676297147020011*^9, 
   3.6762971544506283`*^9}, 3.6762972486459045`*^9, {3.6762973670935507`*^9, 
   3.6762973718107595`*^9}, {3.676307853086397*^9, 3.676307855410801*^9}, {
   3.6773517136847243`*^9, 3.67735172782935*^9}, {3.677351783845255*^9, 
   3.6773518164045124`*^9}, {3.677352178392497*^9, 3.6773521806389008`*^9}, 
   3.677352383659882*^9, {3.679150898083724*^9, 3.679150907818141*^9}, 
   3.6908127932923727`*^9, {3.6908130321035194`*^9, 3.69081303252472*^9}, {
   3.6908130642235923`*^9, 3.690813072367807*^9}, {3.6908151561345687`*^9, 
   3.6908151764127283`*^9}, 3.691859075084035*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F3", "[", 
   RowBox[{"c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{"i", "[", 
       RowBox[{"nI", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nR", "\[Tau]R"], " ", 
      RowBox[{"r", "[", 
       RowBox[{
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762951452569356`*^9, 3.6762954510883603`*^9}, {
   3.6762954881267023`*^9, 3.6762955488568335`*^9}, {3.676297147020011*^9, 
   3.6762971544506283`*^9}, 3.6762972486459045`*^9, {3.6762973670935507`*^9, 
   3.6762973718107595`*^9}, {3.676307853086397*^9, 3.676307855410801*^9}, {
   3.6773517136847243`*^9, 3.67735172782935*^9}, {3.677351783845255*^9, 
   3.6773518164045124`*^9}, {3.677352178392497*^9, 3.6773521806389008`*^9}, 
   3.677352383659882*^9, {3.679150898083724*^9, 3.679150907818141*^9}, 
   3.6908127932923727`*^9, {3.6908130321035194`*^9, 3.69081303252472*^9}, {
   3.6908130642235923`*^9, 3.690813072367807*^9}, {3.6908151561345687`*^9, 
   3.6908151764127283`*^9}, 3.6917765889519577`*^9}],

Cell[CellGroupData[{

Cell["System of differential equations", "Subsubsection",
 CellChangeTimes->{{3.6908187471589637`*^9, 3.6908187512942*^9}}],

Cell["\<\
The complete system of differential equations for a given nI and nR are given \
by the following list\
\>", "Text",
 CellChangeTimes->{{3.690818754150364*^9, 3.6908187730704455`*^9}, 
   3.6914375105392103`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ODEs", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nI", ",", "nR", ",", "j", ",", "equs"}], "}"}], ",", 
    RowBox[{
     RowBox[{"equs", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"equs", ",", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"0", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{"F1", "[", 
         RowBox[{"0", ",", "t"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", " ", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"equs", ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"i", "[", 
             RowBox[{"j", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"F2", "[", 
           RowBox[{"j", ",", "t"}], "]"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", " ", "nR"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"equs", ",", 
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"j", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"F3", "[", 
           RowBox[{"j", ",", "t"}], "]"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "equs"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.690818775504585*^9, 3.690818913560481*^9}, {
  3.690820064249297*^9, 3.6908200645753155`*^9}, {3.6908202891611614`*^9, 
  3.6908202894481773`*^9}}],

Cell["The list of variables for this system are", "Text",
 CellChangeTimes->{{3.6908192267103925`*^9, 3.6908192361739335`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vars", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nI", ",", "nR", ",", "j", ",", "vars"}], "}"}], ",", 
    RowBox[{
     RowBox[{"vars", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"vars", ",", 
       RowBox[{"s", "[", 
        RowBox[{"0", ",", "t"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", " ", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"vars", ",", 
         RowBox[{"i", "[", 
          RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", " ", "nR"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"vars", ",", 
         RowBox[{"r", "[", 
          RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "vars"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6908192420082674`*^9, 3.6908192703668895`*^9}, {
  3.6908194024754457`*^9, 3.6908194323901567`*^9}, {3.690820293535411*^9, 
  3.690820293776425*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria", "Subchapter",
 CellChangeTimes->{{3.690806893285402*^9, 3.6908068950455027`*^9}}],

Cell[TextData[{
 "The system of equations above at equilibrium (denoted by se, ie[c], and \
re[c]) can be simplified greatly by solving for re[c] and ie[j] with j>1 in \
terms of ie[1].  Specifically at equilibrium\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"re", "[", "c", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["nR", "\[Tau]R"], ")"}], 
     RowBox[{"(", 
      FractionBox["\[Tau]R", 
       RowBox[{"nR", "+", 
        RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], 
     RowBox[{"re", "[", 
      RowBox[{"c", "-", "1"}], "]"}]}]}], TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", ">", "1"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"re", "[", "1", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["nI", "\[Tau]I"], ")"}], 
     RowBox[{"(", 
      FractionBox["\[Tau]R", 
       RowBox[{"nR", "+", 
        RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], 
     RowBox[{"ie", "[", "nI", "]"}]}]}], TraditionalForm]]],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ie", "[", "c", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      FractionBox["nI", "\[Tau]I"], ")"}], 
     RowBox[{"(", 
      FractionBox["\[Tau]I", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
     RowBox[{"ie", "[", 
      RowBox[{"c", "-", "1"}], "]"}]}]}], TraditionalForm]]],
 " for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"c", ">", "1"}], TraditionalForm]]],
 "\n\nHence"
}], "Text",
 CellChangeTimes->{{3.690814163125772*^9, 3.6908145354860697`*^9}, {
   3.690814609117281*^9, 3.690814613347523*^9}, {3.690814656895014*^9, 
   3.690814659438159*^9}, 3.6908155541103315`*^9, 3.691771040320614*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"re", "[", "c_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"(", 
      FractionBox["nR", 
       RowBox[{"nR", "+", 
        RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nI", "\[Tau]I"], 
     RowBox[{"(", 
      FractionBox["\[Tau]R", 
       RowBox[{"nR", "+", 
        RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"(", 
      FractionBox["nI", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], ")"}], 
    RowBox[{"nI", "-", "1"}]], 
   RowBox[{"ie", "[", "1", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6908145382942305`*^9, 3.69081460682215*^9}, {
  3.691859107471887*^9, 3.691859124381854*^9}}],

Cell["for c={1,2...nR} and ", "Text",
 CellChangeTimes->{{3.690814625335209*^9, 3.690814670549795*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ie", "[", "c_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", ">", "1"}], ",", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], ")"}], 
      RowBox[{"c", "-", "1"}]], 
     RowBox[{"ie", "[", "1", "]"}]}], ",", "ie1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6908146305075045`*^9, 3.690814640787092*^9}, 
   3.6908146777452064`*^9, {3.6908149132566767`*^9, 3.690814935712961*^9}, {
   3.691859132967345*^9, 3.691859136881569*^9}}],

Cell["for c={1,2...nI}.", "Text",
 CellChangeTimes->{{3.6908146804703627`*^9, 3.6908146986224003`*^9}, {
  3.6917710602134132`*^9, 3.691771081982546*^9}}],

Cell[TextData[{
 "The remaining two equations that must be satisfied at equilibrium are F1[",
 StyleBox["0,",
  FontColor->GrayLevel[0]],
 "t]==0, and F2[1,t]==0.  Using the above equations for re[c] and ie[c] we \
can express these remaining two equations in terms of the density of \
susceptible hosts (se) and the density of infected hosts in the first class \
(ie[1]=ie1) by defining z",
 StyleBox["I (the sum of all infected classes, relative to the number in the \
first infected class), zR (the sum of all recovered classes, relative to the \
number in the first infected class), and znR (the number in the last \
recovered class, relative to the number in the first infected class):",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.6908147116861477`*^9, 3.6908148438067045`*^9}, {
  3.690814945919545*^9, 3.69081495019879*^9}, {3.690815555505411*^9, 
  3.6908155605126977`*^9}, {3.691771497332699*^9, 3.6917715498412237`*^9}, {
  3.69177164953878*^9, 3.6917716497945633`*^9}, {3.713363909058017*^9, 
  3.7133639215263767`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zsub", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zI", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ie", "[", "c", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], 
       RowBox[{"ie", "[", "1", "]"}]]}], ",", 
     RowBox[{"zR", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"re", "[", "c", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}], 
       RowBox[{"ie", "[", "1", "]"}]]}], ",", 
     RowBox[{"znR", "\[Rule]", 
      FractionBox[
       RowBox[{"re", "[", "nR", "]"}], 
       RowBox[{"ie", "[", "1", "]"}]]}]}], "}"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6908148446607533`*^9, 3.690814867666069*^9}, {
  3.6908149631305294`*^9, 3.6908150322854853`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"zI", "\[Rule]", 
    FractionBox[
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}], "-", 
      RowBox[{
       SuperscriptBox["nI", "nI"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], 
        RowBox[{"1", "-", "nI"}]]}]}], 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]]}], ",", 
   RowBox[{"zR", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nI", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "nI"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nR", 
            RowBox[{"nR", "+", 
             RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], ")"}]}], 
      RowBox[{"d", " ", "\[Tau]I"}]]}]}], ",", 
   RowBox[{"znR", "\[Rule]", 
    FractionBox[
     RowBox[{"nI", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "nI"}]], " ", "\[Tau]R", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nR", 
         RowBox[{"nR", "+", 
          RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], 
     RowBox[{"nR", " ", "\[Tau]I"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.690814873903426*^9, 3.6908149567391644`*^9, {3.6908149869408913`*^9, 
   3.6908149915241537`*^9}, 3.690815033643563*^9, 3.690820096159122*^9, 
   3.6908203000627847`*^9, {3.690820448997303*^9, 3.6908204767888927`*^9}, 
   3.691771601344398*^9, {3.691776670620631*^9, 3.691776675523291*^9}, 
   3.691776822194043*^9, {3.691860233036266*^9, 3.6918602448289404`*^9}, 
   3.6926293942350435`*^9, 3.6927098592110415`*^9, 3.6929011565938053`*^9, 
   3.6931620277960835`*^9, 3.6933227236118393`*^9, 3.693594099439126*^9, 
   3.6936569413354874`*^9, 3.695052500726804*^9, 3.6951253442830515`*^9, 
   3.695128351997281*^9, 3.695474460641825*^9}]
}, Closed]],

Cell["The remaining two equations that must be satisfied are", "Text",
 CellChangeTimes->{{3.6908150546537647`*^9, 3.690815067149479*^9}, 
   3.690815485478406*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiEqus", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"F1", "[", 
       RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"F2", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Equal]", "0"}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nI"], 
       RowBox[{"i", "[", 
        RowBox[{"j", ",", "t"}], "]"}]}], "\[Rule]", 
      RowBox[{"zI", " ", "ie1"}]}], ",", 
     RowBox[{
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nR"], 
       RowBox[{"r", "[", 
        RowBox[{"j", ",", "t"}], "]"}]}], "\[Rule]", 
      RowBox[{"zR", " ", "ie1"}]}], ",", 
     RowBox[{
      RowBox[{"r", "[", 
       RowBox[{"nR", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"znR", " ", "ie1"}]}], ",", 
     RowBox[{
      RowBox[{"i", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "ie1"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"0", ",", "t"}], "]"}], "\[Rule]", "se"}]}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6917716077779083`*^9, 3.6917717998895597`*^9}, {
  3.691773547002076*^9, 3.691773588176215*^9}, {3.691773622280826*^9, 
  3.691773631623126*^9}, {3.691859257739482*^9, 3.691859278473668*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "d"}], " ", "se"}], "-", 
     RowBox[{"ie1", " ", "se", " ", "zI", " ", "\[Beta]"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"se", "+", 
        RowBox[{"ie1", " ", "zI"}], "+", 
        RowBox[{"ie1", " ", "zR"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"se", "+", 
           RowBox[{"ie1", " ", "zI"}], "+", 
           RowBox[{"ie1", " ", "zR"}]}], ")"}], " ", "\[Kappa]"}]}], ")"}]}], 
     "+", 
     FractionBox[
      RowBox[{"ie1", " ", "nR", " ", "znR"}], "\[Tau]R"]}], "\[Equal]", "0"}],
    ",", 
   RowBox[{
    RowBox[{
     RowBox[{"ie1", " ", "se", " ", "zI", " ", "\[Beta]"}], "-", 
     RowBox[{"ie1", " ", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}]}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.691771611996417*^9, 3.6917716767871323`*^9}, 
   3.6917717140239153`*^9, {3.6917717465940866`*^9, 3.691771802668414*^9}, 
   3.691773588838229*^9, 3.691773634311314*^9, 3.691776676672041*^9, 
   3.691776823293201*^9, {3.691859239090415*^9, 3.6918592839329805`*^9}, 
   3.692629394632066*^9, 3.6927098593180475`*^9, 3.692901156963806*^9, 
   3.693162028168105*^9, 3.69332272389264*^9, 3.693594099517126*^9, 
   3.693656941663088*^9, 3.6950525028774095`*^9, 3.695125344610652*^9, 
   3.6951283523092813`*^9, 3.6954744610188465`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Equilibria", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"EquiEqus", ",", 
     RowBox[{"{", 
      RowBox[{"se", ",", "ie1"}], "}"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6908152064994497`*^9, 3.690815222456362*^9}, {
  3.690816922256585*^9, 3.6908169261438074`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", "0"}], ",", 
     RowBox[{"ie1", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", 
      FractionBox[
       RowBox[{"b", "-", "d"}], 
       RowBox[{"b", " ", "\[Kappa]"}]]}], ",", 
     RowBox[{"ie1", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", 
      FractionBox[
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]]}], ",", 
     RowBox[{"ie1", "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "nR"}], " ", 
           SuperscriptBox["zI", "2"], " ", "znR", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"]}], "+", 
          RowBox[{"nI", " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], 
          "+", 
          RowBox[{"2", " ", "b", " ", "nI", " ", 
           SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
           "\[Tau]I", " ", "\[Tau]R"}], "+", 
          RowBox[{
          "2", " ", "b", " ", "nI", " ", "zI", " ", "zR", " ", "\[Beta]", " ",
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["zI", "3"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["zI", "2"], " ", "zR", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
           "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{
          "2", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
           "\[Delta]", " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["zI", "2"], " ", 
             SuperscriptBox["\[Beta]", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", "b", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                " ", 
                RowBox[{"(", 
                 RowBox[{"nI", "+", 
                  RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], 
                  "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                   "\[Tau]I"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                   "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
         ")"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "\[Rule]", 
      FractionBox[
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]]}], ",", 
     RowBox[{"ie1", "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", "b", " ", 
         SuperscriptBox["zI", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nR", " ", 
          SuperscriptBox["zI", "2"], " ", "znR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"]}], "-", 
         RowBox[{"nI", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], 
         "-", 
         RowBox[{"2", " ", "b", " ", "nI", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
          "\[Tau]I", " ", "\[Tau]R"}], "-", 
         RowBox[{
         "2", " ", "b", " ", "nI", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
          "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"2", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
          "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
         "2", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", "\[Delta]",
           " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", "b", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{"nI", "+", 
                 RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], 
                 "+", 
                 RowBox[{"b", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                   ")"}]}]}], ")"}], " ", 
               SuperscriptBox["\[Tau]R", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                  "\[Tau]I"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                  "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
        ")"}]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.690815217863099*^9, 3.690815224120457*^9}, 
   3.6908169277108974`*^9, 3.6908177163340034`*^9, 3.690820097250184*^9, 
   3.6908203011408463`*^9, {3.6908204500573635`*^9, 3.6908204778649545`*^9}, {
   3.6917718912198267`*^9, 3.6917718963953257`*^9}, 3.6917766828489103`*^9, 
   3.691776843461005*^9, 3.691859287901207*^9, 3.6926293958521357`*^9, 
   3.6927098604771137`*^9, 3.6929011581138077`*^9, 3.693162029328171*^9, 
   3.693322727702047*^9, 3.693594100687128*^9, 3.69365694281749*^9, 
   3.695125345858654*^9, 3.6951283533700833`*^9, 3.695474462095908*^9}]
}, Closed]],

Cell[TextData[{
 "Given se and ie1, the following function of nI and nR gives the \
substitution list",
 StyleBox[" for the equilibrium number of the variable \
\[OpenCurlyDoubleQuote]num\[CloseCurlyDoubleQuote]",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.69081740314209*^9, 3.6908174495737457`*^9}, 
   3.691437525579637*^9, 3.691771901745699*^9, {3.6917719403177633`*^9, 
   3.691771946045641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiSub", "[", 
   RowBox[{"nIs_", ",", "nRs_", ",", "num_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nI", ",", "nR", ",", "j", ",", "sub"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", 
     RowBox[{"sub", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sub", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Rule]", "se"}]}], " ", "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sub", ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "ie1"}]}], " ", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "2"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"sub", ",", 
         RowBox[{
          RowBox[{"i", "[", 
           RowBox[{"j", ",", "t"}], "]"}], "\[Rule]", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["nI", "\[Tau]I"], 
              RowBox[{"(", 
               FractionBox["\[Tau]I", 
                RowBox[{"nI", "+", 
                 RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}], 
            RowBox[{"j", "-", "1"}]], " ", "ie1"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"sub", ",", 
         RowBox[{
          RowBox[{"r", "[", 
           RowBox[{"j", ",", "t"}], "]"}], "\[Rule]", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["nR", "\[Tau]R"], 
              RowBox[{"(", 
               FractionBox["\[Tau]R", 
                RowBox[{"nR", "+", 
                 RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}]}], ")"}], 
            RowBox[{"j", "-", "1"}]], 
           RowBox[{"(", 
            RowBox[{
             FractionBox["nI", "\[Tau]I"], 
             RowBox[{"(", 
              FractionBox["\[Tau]R", 
               RowBox[{"nR", "+", 
                RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}]}], ")"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["nI", "\[Tau]I"], 
              RowBox[{"(", 
               FractionBox["\[Tau]I", 
                RowBox[{"nI", "+", 
                 RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}]}], ")"}], 
            RowBox[{"nI", "-", "1"}]], " ", "ie1"}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sub", "=", 
      RowBox[{
       RowBox[{"sub", "/.", 
        RowBox[{"Equilibria", "[", 
         RowBox[{"[", "num", "]"}], "]"}]}], "/.", "zsub"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6908174533129597`*^9, 3.6908177359921284`*^9}, {
  3.690817978809016*^9, 3.690818007395652*^9}, {3.6908203235281267`*^9, 
  3.6908203237711406`*^9}}],

Cell[TextData[{
 "The first equilibrium is host extinction the second equilibrium is disease \
extinction, the third and fourth equilibria are both potentially endemic \
equilibria although only one will be biologically plausible",
 StyleBox[", as proven next.",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.690815231557883*^9, 3.6908152780545425`*^9}, {
  3.690815442374941*^9, 3.690815462175073*^9}, {3.6908155112728815`*^9, 
  3.6908155137770247`*^9}, {3.6908173970237403`*^9, 3.690817399446879*^9}, {
  3.691772245799911*^9, 3.6917722505351458`*^9}}],

Cell[CellGroupData[{

Cell["Biological Validity of Endemic Equilibrium ", "Subsubsection",
 CellChangeTimes->{{3.6918597895729012`*^9, 3.691859793469124*^9}, {
   3.691859824430895*^9, 3.6918598504593835`*^9}, {3.695052310930189*^9, 
   3.6950523205874076`*^9}, 3.7129244186784477`*^9}],

Cell["\<\
From the derivation of the endemic equilibria above we know that it must \
satisfy the following quadratic equation in terms of ie1. \
\>", "Text",
 CellChangeTimes->{{3.6926292499557905`*^9, 3.69262925152188*^9}, {
  3.69262931620258*^9, 3.692629373010829*^9}, {3.693659206863065*^9, 
  3.6936592682775793`*^9}, {3.695052353286673*^9, 3.6950523934409757`*^9}, {
  3.6950524400862646`*^9, 3.695052443377672*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"EquiEqus", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"EquiEqus", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", "se"}], "]"}], "]"}]}], ",", 
   "ie1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["ie1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", 
       SuperscriptBox["zI", "2"], " ", "\[Kappa]"}], "-", 
      RowBox[{"2", " ", "b", " ", "zI", " ", "zR", " ", "\[Kappa]"}], "-", 
      RowBox[{"b", " ", 
       SuperscriptBox["zR", "2"], " ", "\[Kappa]"}]}], ")"}]}], "+", 
   FractionBox[
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]], "-", 
   FractionBox[
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]], "-", 
   FractionBox[
    RowBox[{"b", " ", "\[Kappa]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
    RowBox[{
     SuperscriptBox["zI", "2"], " ", 
     SuperscriptBox["\[Beta]", "2"], " ", 
     SuperscriptBox["\[Tau]I", "2"]}]], "+", 
   RowBox[{"ie1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", " ", "zI"}], "+", 
      RowBox[{"b", " ", "zR"}], "-", 
      FractionBox[
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], "\[Tau]I"], "-", 
      FractionBox[
       RowBox[{"2", " ", "b", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
       RowBox[{"\[Beta]", " ", "\[Tau]I"}]], "-", 
      FractionBox[
       RowBox[{"2", " ", "b", " ", "zR", " ", "\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]], "+", 
      FractionBox[
       RowBox[{"nR", " ", "znR"}], "\[Tau]R"]}], ")"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.6950526768632393`*^9, 3.695125346014654*^9, 
  3.695128353448084*^9, 3.6954744621889133`*^9}]
}, Closed]],

Cell[TextData[{
 "Our goal is to show that at most one root is biologically valid, ie \
positive and real. Dividing through by the coefficient of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["ie1", "2"], TraditionalForm]]],
 " guarantees that we have an up-wards facing parabola."
}], "Text",
 CellChangeTimes->{{3.6950524570433006`*^9, 3.695052471241144*^9}, {
  3.695052590426427*^9, 3.6950526045918555`*^9}, {3.713363760494162*^9, 
  3.7133637684839497`*^9}, {3.713363993772623*^9, 3.713364034944051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Quad", "[", "ie1_", "]"}], ":=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "b"}], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]"}], "-", 
        RowBox[{"2", " ", "b", " ", "zI", " ", "zR", " ", "\[Kappa]"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["zR", "2"], " ", "\[Kappa]"}]}], ")"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["ie1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "b"}], " ", 
           SuperscriptBox["zI", "2"], " ", "\[Kappa]"}], "-", 
          RowBox[{"2", " ", "b", " ", "zI", " ", "zR", " ", "\[Kappa]"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["zR", "2"], " ", "\[Kappa]"}]}], ")"}]}], "+", 
       FractionBox[
        RowBox[{"b", " ", 
         RowBox[{"(", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
        RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]], "-", 
       FractionBox[
        RowBox[{"d", " ", 
         RowBox[{"(", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
        RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]], "-", 
       FractionBox[
        RowBox[{"b", " ", "\[Kappa]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
        RowBox[{
         SuperscriptBox["zI", "2"], " ", 
         SuperscriptBox["\[Beta]", "2"], " ", 
         SuperscriptBox["\[Tau]I", "2"]}]], "+", 
       RowBox[{"ie1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"b", " ", "zI"}], "+", 
          RowBox[{"b", " ", "zR"}], "-", 
          FractionBox[
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], "\[Tau]I"], "-", 
          FractionBox[
           RowBox[{"2", " ", "b", " ", "\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{"nI", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
           RowBox[{"\[Beta]", " ", "\[Tau]I"}]], "-", 
          FractionBox[
           RowBox[{"2", " ", "b", " ", "zR", " ", "\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{"nI", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
           RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]], "+", 
          FractionBox[
           RowBox[{"nR", " ", "znR"}], "\[Tau]R"]}], ")"}]}]}], ")"}]}], ",", 
    "ie1", ",", "Simplify"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Quad", "[", "ie1", "]"}]}], "Input",
 CellChangeTimes->{{3.695052627771945*^9, 3.6950526664004188`*^9}, {
  3.695053878770894*^9, 3.6950538937409244`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["ie1", "2"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nI", " ", "\[Kappa]"}], "-", 
         RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
         RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], ")"}]}]}], 
     ")"}]}], 
   RowBox[{"b", " ", 
    SuperscriptBox["zI", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox["\[Tau]I", "2"]}]], "+", 
  FractionBox[
   RowBox[{"ie1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "nR"}], " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
       "\[Tau]I"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nI", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
            RowBox[{"zI", " ", 
             RowBox[{"(", 
              RowBox[{"\[Beta]", "+", 
               RowBox[{"2", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}]}],
          "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
            RowBox[{"b", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"zI", " ", "\[Beta]"}], "-", 
               RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], ")"}]}]}], 
           ")"}], " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}]}], ")"}]}], 
   RowBox[{"b", " ", "zI", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Beta]", " ", "\[Kappa]",
     " ", "\[Tau]I", " ", "\[Tau]R"}]]}]], "Output",
 CellChangeTimes->{3.695053894115325*^9, 3.6950606784155636`*^9, 
  3.6951253460770545`*^9, 3.6951283535104837`*^9, 3.6954744622629175`*^9}]
}, Closed]],

Cell["\<\
We can show that one equilibrium is biologically valid and the other not by \
using the following logic:

If the constant term of the quadratic is negative then we are guaranteed that \
one root is positive (biologically valid) and one root is negative \
(not-biologically valid).  If the constant term of the quadratic is positive \
then there are three possibilities: 1) both roots are negative, this will \
occur if the slope of the quadratic at 0 is positive, 2) both roots are \
positive, this will occur if the slope of the quadratic at 0 is negative, and \
3) there are no real roots.  We begin by identifying the conditions for which \
the constant term is negative.\
\>", "Text",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ7cUeoqPU/NrxkehUPRDtcVo2QhlIbzZMiwbRryJT
k0E079zr+SDapGFbCYhmz3/SAqLflRzsB9Ftke6TQHTqu6ppINrj78eNIDrS
IjVQBUifedIIpg/9t4sE0c5McWBaa31WtTuQVmA7XAOid+kppEu0vnb8bbMt
E0TPW65TAKK7OcvAtNHOtVNBdNOl5fPB9IRzS0F0gAnfOhC9LjQxQhJIz1hy
KRZE889flQKiY3zOgOl7HVu+HGh/7ch02vkbiBaazM14EEhbTX0Fpjc1nfMB
0WId89JAdH7T15drV712tLt4+BWIBgBtyZW/
  "]],

Cell[TextData[StyleBox["Conditions for a negative constant term: Exactly one \
biologically valid equilibrium.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.695053625297722*^9, 3.6950536616739893`*^9}, {
  3.6954760248272915`*^9, 3.695476028018474*^9}}],

Cell[TextData[{
 "There will be exactly one biologically valid equilibrium if the constant \
term (",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nI", " ", "\[Kappa]"}], "-", 
         RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
         RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], ")"}]}]}], 
     ")"}]}], 
   RowBox[{"b", " ", 
    SuperscriptBox["zI", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
    SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox["\[Tau]I", "2"]}]]],
  CellChangeTimes->{{3.6950526218856955`*^9, 3.69505266699322*^9}}],
 ") is negative.  Given that (nI+\[Delta] \[Tau]I)>0 the critical value of \
\[Beta] for this to occur is given by:"
}], "Text",
 CellChangeTimes->{{3.6950536424163527`*^9, 3.695053741761151*^9}, {
  3.713363800592663*^9, 3.7133638024326267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nI", " ", "\[Kappa]"}], "-", 
            RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
            RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
           ")"}]}]}], ")"}], "\[Equal]", "0"}], ",", "\[Beta]"}], "]"}], "/.",
     "zsub"}], "//", "Simplify"}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.6936571171946354`*^9, 3.6936571686489353`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Beta]", "\[Rule]", 
   FractionBox[
    RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "nI"]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["nI", "nI"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "nI"]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6947929715120525`*^9, 3.695052792991671*^9, 
  3.6951253461394544`*^9, 3.6951283535572834`*^9, 3.6954744623089204`*^9}]
}, Closed]],

Cell["\<\
If \[Beta] is greater than this critical value than there will be only one \
real root. If not there are three possibilities, either both equilibria are \
positive (this can only occur if the slope at ie1=0 is negative), both \
equilibria are negative (this can only occur if the slope at ie1=0 is \
positive), or both equilibria are complex.  To exclude the possibility that \
both equilibria are positive and hence biologically valid below we show that \
for a large number of parameter combinations the slope of the quadratic at \
ie1=0 is positive.\
\>", "Text",
 CellChangeTimes->{{3.6950528186691227`*^9, 3.6950528586371984`*^9}, {
   3.695053752283212*^9, 3.6950538082109227`*^9}, {3.6954760784353576`*^9, 
   3.695476245114891*^9}, 3.7133638071183577`*^9}],

Cell[TextData[StyleBox["Conditions under which neither equilibrium is \
biologically valid",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6954760447944336`*^9, 3.695476066706687*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Slope", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "nR"}], " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
        "\[Tau]I"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
             RowBox[{"zI", " ", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "+", 
                RowBox[{"2", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
            ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
             RowBox[{"b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"zI", " ", "\[Beta]"}], "-", 
                RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], ")"}]}]}], 
            ")"}], " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}]}], ")"}], 
     RowBox[{"b", " ", "zI", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Beta]", " ", 
      "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}]], "/.", "zsub"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.695053906216149*^9, 3.6950540904141817`*^9}, {
   3.695054120724841*^9, 3.6950541309640627`*^9}, 3.6950588945915346`*^9, {
   3.6954759202423096`*^9, 3.695475931145933*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nIs", ",", "nRs", ",", "\[Tau]Is", ",", "\[Tau]Rs", ",", "bs", ",", "ds",
      ",", "\[Delta]s", ",", "\[Beta]s", ",", "c", ",", "parsSub"}], "}"}], 
   ",", 
   RowBox[{
    RowBox[{"NegList", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"PosList", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"c", "=", "1"}], ",", 
      RowBox[{"c", "\[LessEqual]", "5000"}], ",", 
      RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Drawing", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nIs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"nRs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]Is", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "40"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Tau]Rs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"20", ",", "100"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.01", ",", "0.2"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"ds", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.001", ",", "bs"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Delta]s", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"ds", ",", 
            RowBox[{"ds", "+", "0.1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "bs"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "1"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Beta]s", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.01", ",", 
            RowBox[{
             FractionBox[
              RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"nI", "+", 
                  RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "nI"]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"b", "-", "d"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["nI", "nI"]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "nI"]}], 
                ")"}]}]], "/.", "parsSub"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "bs"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"\[Beta]", "\[Rule]", "\[Beta]s"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       RowBox[{"test", "=", 
        RowBox[{"(", 
         RowBox[{"Slope", "/.", "parsSub"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"test", "<", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"NegList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nIs", ",", "nRs", ",", "\[Tau]Is", ",", "\[Tau]Rs", ",", "bs", 
             ",", "ds", ",", "\[Delta]s", ",", "\[Beta]s", ",", "test"}], 
            "}"}]}], "]"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"PosList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nIs", ",", "nRs", ",", "\[Tau]Is", ",", "\[Tau]Rs", ",", "bs", 
             ",", "ds", ",", "\[Delta]s", ",", "\[Beta]s", ",", "test"}], 
            "}"}]}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6954739882968082`*^9, 3.695474145231785*^9}, {
   3.695474190864395*^9, 3.6954744387925754`*^9}, {3.6954744874593587`*^9, 
   3.695474611627461*^9}, {3.6954746463904495`*^9, 3.6954746772542143`*^9}, 
   3.695475238660325*^9, 3.695475274987403*^9, {3.695475382680563*^9, 
   3.695475574457532*^9}, {3.695475708039172*^9, 3.6954758034486294`*^9}, {
   3.6954759346751347`*^9, 3.695475948103903*^9}}],

Cell[CellGroupData[{

Cell[BoxData["NegList"], "Input",
 CellChangeTimes->{{3.6954755924165587`*^9, 3.6954755936036267`*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.6954755940176506`*^9, 3.6954756686099167`*^9, {3.6954757880337477`*^9, 
   3.6954758087049303`*^9}, 3.6954759667449694`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "PosList", "]"}]], "Input",
 CellChangeTimes->{{3.6954755980238795`*^9, 3.69547562390836*^9}}],

Cell[BoxData["5000"], "Output",
 CellChangeTimes->{{3.695475602105113*^9, 3.6954756246364017`*^9}, 
   3.69547566954097*^9, {3.6954757913879395`*^9, 3.6954758096699853`*^9}, 
   3.6954759675740166`*^9}]
}, Closed]],

Cell["\<\
Out of the 5000 randomly drawn parameter combinations for which the y \
intercept is greater than 0 the slope is always positive indicating that both \
roots are either negative or complex.\
\>", "Text",
 CellChangeTimes->{{3.6954756356350307`*^9, 3.695475690610175*^9}, {
   3.6954758140352345`*^9, 3.695475871402516*^9}, {3.6954759771945667`*^9, 
   3.695475988643222*^9}, 3.713363813258169*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subchapter",
 CellChangeTimes->{{3.690806940742116*^9, 3.690806942157197*^9}}],

Cell["\<\
The stability of the system can be assessed by computing the eigenvalues of \
the Jacobian matrix.\
\>", "Text",
 CellChangeTimes->{{3.690815335501828*^9, 3.690815353637865*^9}, {
  3.7133641077552643`*^9, 3.71336411122747*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jmtrx", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c", ",", "j", ",", "nI", ",", "nR", ",", "jmtrx"}], "}"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", 
     RowBox[{"jmtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"1", "+", "nI", "+", "nR"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Susceptible", " ", "Equation"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"jmtrx", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"F1", "[", 
          RowBox[{"0", ",", "t"}], "]"}], ",", 
         RowBox[{"s", "[", 
          RowBox[{"0", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";", 
     RowBox[{"(*", 
      RowBox[{"Susceptible", " ", "Derivative"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"jmtrx", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"F1", "[", 
            RowBox[{"0", ",", "t"}], "]"}], ",", 
           RowBox[{"i", "[", 
            RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], " ", "]"}]}], "]"}], 
     ";", 
     RowBox[{"(*", 
      RowBox[{"Infected", " ", "class", " ", "j", " ", "Derivative"}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{
         RowBox[{"jmtrx", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"F1", "[", 
            RowBox[{"0", ",", "t"}], "]"}], ",", 
           RowBox[{"r", "[", 
            RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], " ", "]"}]}], "]"}], 
     ";", 
     RowBox[{"(*", 
      RowBox[{"Recovered", " ", "class", " ", "j", " ", "Derivative"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Infected", " ", "class", " ", "c", " ", "Equation"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", " ", "nI"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"jmtrx", "[", 
           RowBox[{"[", 
            RowBox[{"1", "+", "c"}], "]"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"F2", "[", 
             RowBox[{"c", ",", "t"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"0", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{"Susceptible", " ", "Derivative"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "c"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"F2", "[", 
               RowBox[{"c", ",", "t"}], "]"}], ",", 
              RowBox[{"i", "[", 
               RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], " ", "]"}]}], "]"}],
         ";", 
        RowBox[{"(*", 
         RowBox[{"Infected", " ", "class", " ", "j", " ", "Derivative"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "c"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"F2", "[", 
               RowBox[{"c", ",", "t"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], " ", "]"}]}], "]"}],
         ";"}]}], 
      RowBox[{"(*", 
       RowBox[{"Recovered", " ", "class", " ", "j", " ", "Derivative"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Recovered", " ", "class", " ", "c", " ", "Equation"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{
          RowBox[{"jmtrx", "[", 
           RowBox[{"[", 
            RowBox[{"1", "+", "nI", "+", "c"}], "]"}], "]"}], ",", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"F3", "[", 
             RowBox[{"c", ",", "t"}], "]"}], ",", 
            RowBox[{"s", "[", 
             RowBox[{"0", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";", 
        RowBox[{"(*", 
         RowBox[{"Susceptible", " ", "Derivative"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nI", "+", "c"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"F3", "[", 
               RowBox[{"c", ",", "t"}], "]"}], ",", 
              RowBox[{"i", "[", 
               RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], " ", "]"}]}], "]"}],
         ";", 
        RowBox[{"(*", 
         RowBox[{"Infected", " ", "class", " ", "j", " ", "Derivative"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", 
              RowBox[{"1", "+", "nI", "+", "c"}], "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"F3", "[", 
               RowBox[{"c", ",", "t"}], "]"}], ",", 
              RowBox[{"r", "[", 
               RowBox[{"j", ",", "t"}], "]"}]}], "]"}]}], " ", "]"}]}], "]"}],
         ";"}]}], 
      RowBox[{"(*", 
       RowBox[{"Recovered", " ", "class", " ", "j", " ", "Derivative"}], 
       "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "jmtrx"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.690815357055061*^9, 3.6908154390347495`*^9}, {
  3.6908155799468093`*^9, 3.690815778011138*^9}, {3.6908158112100368`*^9, 
  3.6908158829181385`*^9}, {3.6908161453751497`*^9, 3.6908161694205256`*^9}, {
  3.6908163825917177`*^9, 3.6908164539347987`*^9}, {3.6908164857346177`*^9, 
  3.690816608060614*^9}, {3.6908166421945667`*^9, 3.69081678474372*^9}, {
  3.690816825230036*^9, 3.6908168587469525`*^9}, {3.690820171686442*^9, 
  3.690820176756732*^9}, {3.6908203029289484`*^9, 3.690820308851287*^9}, {
  3.691859737316912*^9, 3.6918597389070034`*^9}}],

Cell["\<\
Although we cannot find the eigenvalues of this matrix analytically in all \
cases we can do so numerically to assess the stability of each equilibria for \
a given parameter set (Pars).  In addition we determine the conditions under \
which the extinction and disease extinction equilibria are unstable.\
\>", "Text",
 CellChangeTimes->{{3.690816934158266*^9, 3.690816994910741*^9}, 
   3.691772696480933*^9, {3.692633818508097*^9, 3.6926338202111945`*^9}, {
   3.693659084130209*^9, 3.6936591525929623`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nI", "\[Rule]", "4"}], ",", 
     RowBox[{"nR", "\[Rule]", "4"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "8"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "40"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"b", "\[Rule]", "0.02"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.01"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.690816996264818*^9, 3.690817046385685*^9}, {
   3.6908173194663043`*^9, 3.690817334130143*^9}, 3.6908184278426995`*^9, {
   3.6917744481077747`*^9, 3.691774507133174*^9}}],

Cell[CellGroupData[{

Cell["Extinction equilibria", "Subsubsection",
 CellChangeTimes->{{3.690816866550399*^9, 3.690816877446022*^9}, {
  3.69081813185477*^9, 3.690818139390201*^9}}],

Cell["\<\
Numerically finding the eigenvalues at the extinction equilibrium\
\>", "Text",
 CellChangeTimes->{{3.692633830689794*^9, 3.692633850306916*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]s", "=", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Jmtrx", "[", 
       RowBox[{
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}]}], "]"}], "/.", 
      RowBox[{"EquiSub", "[", 
       RowBox[{
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}], ",", "1"}], "]"}]}], "]"}], "/.", 
    "Pars"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6908168844774246`*^9, 3.6908168936079464`*^9}, {
   3.690817337104313*^9, 3.6908173826729193`*^9}, {3.690818047289933*^9, 
   3.690818071337309*^9}, {3.690818146049582*^9, 3.690818171521039*^9}, {
   3.690818512434538*^9, 3.690818514193639*^9}, 3.6926338588474045`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.51`"}], ",", 
   RowBox[{"-", "0.51`"}], ",", 
   RowBox[{"-", "0.51`"}], ",", 
   RowBox[{"-", "0.51`"}], ",", 
   RowBox[{"-", "0.101`"}], ",", 
   RowBox[{"-", "0.101`"}], ",", 
   RowBox[{"-", "0.101`"}], ",", 
   RowBox[{"-", "0.101`"}], ",", "0.019`"}], "}"}]], "Output",
 CellChangeTimes->{{3.690817355284353*^9, 3.6908173718112984`*^9}, {
   3.690818062849823*^9, 3.690818071800335*^9}, {3.6908181471796465`*^9, 
   3.690818172188077*^9}, 3.6908184328539867`*^9, 3.690818514704668*^9, 
   3.690820220795251*^9, 3.690820331645591*^9, {3.6908204561197104`*^9, 
   3.690820478122969*^9}, 3.691773918844913*^9, 3.691773990802568*^9, {
   3.6917744365051003`*^9, 3.691774469942218*^9}, 3.691774513063443*^9, 
   3.691776770034092*^9, {3.691776864878066*^9, 3.691776874294539*^9}, {
   3.692633855814231*^9, 3.6926338595604453`*^9}, 3.6929011584738083`*^9, 
   3.6936569564959164`*^9}]
}, Closed]],

Cell["\<\
The presence of a postive eigenvalue ensures this equilibrium is unstable.  \
We can show that this holds in general due to the simplicity of the jacobian \
matrix at this equilibrium.  Specifically the charateristic polynomial for \
eigenvalue \[Lambda] is given by:\
\>", "Text",
 CellChangeTimes->{{3.692633868594962*^9, 3.6926339463554096`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CharPoly", "[", "\[Lambda]_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "d", "-", "\[Lambda]"}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["nI", "\[Tau]I"], "+", "\[Delta]", "+", "\[Lambda]"}], 
     ")"}], "nI"], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox["nR", "\[Tau]R"], "+", "d", "+", "\[Lambda]"}], ")"}], 
    "nR"]}]}]], "Input",
 CellChangeTimes->{{3.691861487326007*^9, 3.691861550436617*^9}}],

Cell[TextData[{
 "Hence there is one root at ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"\[Lambda]", "=", 
     RowBox[{"d", "-", "b"}]}],
    FontSlant->"Plain"], TraditionalForm]],
  FontSlant->"Italic"],
 ", nI roots at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}]}]}], 
   TraditionalForm]]],
 " and nR roots at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["nR", "\[Tau]R"], "+", "d"}], ")"}]}]}], TraditionalForm]]],
 ".  Roots ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}]}]}], 
   TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["nR", "\[Tau]R"], "+", "d"}], ")"}]}]}], TraditionalForm]]],
 " are guaranteed to be negative but ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"\[Lambda]", "=", 
     RowBox[{"d", "-", "b"}]}],
    FontSlant->"Plain"], TraditionalForm]],
  FontSlant->"Italic"],
 " is negative, and hence the equilibrium stable, only when d>b. "
}], "Text",
 CellChangeTimes->{{3.6918615960702267`*^9, 3.691861788003205*^9}, 
   3.713364185496646*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Disease free equilibria", "Subsubsection",
 CellChangeTimes->{{3.690816866550399*^9, 3.690816877446022*^9}}],

Cell["\<\
Here we determine where the disease free equilibrium transitions from being \
stable to unstable. In other words we find the pont at which the leading \
eigenvalue of the Jacobian matrix evaluated at this equilibrium is 0.  In \
particular we conjecture that this point will be the same as the point at \
which only one endemic equilibrium is biologically valid (see equilbirum \
section). \
\>", "Text",
 CellChangeTimes->{{3.694793047727412*^9, 3.694793152839424*^9}, {
  3.6947933309676123`*^9, 3.6947933932071724`*^9}}],

Cell[TextData[{
 "If we let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"AA", "=", 
    RowBox[{
     FractionBox["d", "ds"], 
     RowBox[{"(", 
      RowBox[{
       FractionBox["d", "dt"], 
       RowBox[{"s", "(", "t", ")"}]}], ")"}]}]}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"JJ", "=", 
    RowBox[{
     FractionBox["d", 
      SubscriptBox["dr", "c"]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox["d", "dt"], 
       RowBox[{
        SubscriptBox["r", "c"], "(", "t", ")"}]}], ")"}], " "}]}], 
   TraditionalForm]]],
 "evaluated at the disease free equilibrium (AA=",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", "b"}], "+", 
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"b", "-", "d"}], "b"]}], ")"}]}]}]],
  CellChangeTimes->{
   3.693162333152549*^9, {3.693594110437145*^9, 3.693594122932767*^9}}],
 ", JJ=",
 Cell[BoxData[
  RowBox[{
   RowBox[{"-", "d"}], "-", 
   FractionBox["2", "\[Tau]R"]}]],
  CellChangeTimes->{
   3.693162333152549*^9, {3.693594110437145*^9, 3.693594122932767*^9}}],
 ") then the charateristic polynomial of the Jacobian of the full system is \
given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"AA", "-", "\[Lambda]"}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"JJ", "-", "\[Lambda]"}], ")"}], "nR"], 
    RowBox[{"Det", "[", 
     RowBox[{"M", "[", "nI", "]"}], "]"}]}], TraditionalForm]]],
 " where M[nI] is as follows:"
}], "Text",
 CellChangeTimes->{{3.693656029142687*^9, 3.6936562667332296`*^9}, {
  3.693657470789383*^9, 3.693657479102598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"M", "[", "nIs_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nI", ",", "mtrx", ",", "j"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"mtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "1", ",", "nI"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mtrx", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
      RowBox[{"EE", "-", "\[Lambda]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "2"}], ",", 
       RowBox[{"j", "\[LessEqual]", " ", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"mtrx", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "j"}], "]"}], "]"}], "=", "FF"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "2"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"c", "++"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"mtrx", "[", 
          RowBox[{"[", 
           RowBox[{"c", ",", 
            RowBox[{"c", "-", "1"}]}], "]"}], "]"}], "=", "GG"}], ";", 
        RowBox[{
         RowBox[{"mtrx", "[", 
          RowBox[{"[", 
           RowBox[{"c", ",", "c"}], "]"}], "]"}], "=", 
         RowBox[{"HH", "-", "\[Lambda]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "mtrx"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.693323858167091*^9, 3.693324124550465*^9}, 
   3.693657479102598*^9}],

Cell["For example when nI=5", "Text",
 CellChangeTimes->{{3.6936562787310514`*^9, 3.693656288089469*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"M", "[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6936562906946735`*^9, 3.693656307544505*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"EE", "-", "\[Lambda]"}], "FF", "FF", "FF", "FF"},
     {"GG", 
      RowBox[{"HH", "-", "\[Lambda]"}], "0", "0", "0"},
     {"0", "GG", 
      RowBox[{"HH", "-", "\[Lambda]"}], "0", "0"},
     {"0", "0", "GG", 
      RowBox[{"HH", "-", "\[Lambda]"}], "0"},
     {"0", "0", "0", "GG", 
      RowBox[{"HH", "-", "\[Lambda]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6936562930190773`*^9, 3.6936563084493065`*^9}}]
}, Closed]],

Cell["\<\
Since neither AA or JJ are zero for the for Det[M[nI]] to have a zero root \
the constnat term of this polynomial must be zero.  To show this we first \
write the recursion equation for the constant term:\
\>", "Text",
 CellChangeTimes->{{3.6936563119125123`*^9, 3.693656340585212*^9}, {
  3.6936565192542143`*^9, 3.6936565833419333`*^9}, {3.6947931742556486`*^9, 
  3.6947932083195972`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sre", "[", "nI_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"nI", ">", "2"}], ",", 
    RowBox[{
     RowBox[{"FF", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "GG"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"nI", "-", "1"}], ")"}]]}], "+", 
     RowBox[{"HH", " ", 
      RowBox[{"Sre", "[", 
       RowBox[{"nI", "-", "1"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "FF"}], " ", "GG"}], "+", 
     RowBox[{"EE", " ", "HH"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6935945434634686`*^9, 3.693594586515561*^9}, {
  3.693594616956215*^9, 3.6935946179858165`*^9}, {3.693594665741923*^9, 
  3.6935946666311245`*^9}, {3.693655939738309*^9, 3.6936559567077417`*^9}, {
  3.6936565973801603`*^9, 3.6936566139819903`*^9}}],

Cell["Where the letters are given by:", "Text",
 CellChangeTimes->{{3.6935939413617215`*^9, 3.6935939471493316`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"letters", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EE", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "\[Delta]"}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"b", "-", "d"}], ")"}], " ", "\[Beta]"}], 
        RowBox[{"b", " ", "\[Kappa]"}]], "-", 
       FractionBox["nI", "\[Tau]I"]}]}], ",", 
     RowBox[{"FF", "\[Rule]", " ", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "d"}], ")"}], " ", "\[Beta]"}], 
       RowBox[{"b", " ", "\[Kappa]"}]]}], ",", 
     RowBox[{"GG", "\[Rule]", " ", 
      FractionBox["nI", "\[Tau]I"]}], ",", 
     RowBox[{"HH", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "\[Delta]"}], "-", 
       FractionBox["nI", "\[Tau]I"]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6933187234357805`*^9, 3.693318816381546*^9}, {
   3.693319519135292*^9, 3.6933195262489047`*^9}, 3.693590120853344*^9, {
   3.6935932045107193`*^9, 3.6935932052037587`*^9}, {3.693656363041454*^9, 
   3.693656372190471*^9}, {3.6947933991335115`*^9, 3.694793400321579*^9}}],

Cell["\<\
The recursion equation Sre[nI] can be in turn be rewriten as the following:\
\>", "Text",
 CellChangeTimes->{{3.6936563907553053`*^9, 3.6936564502412405`*^9}, {
  3.6936566026061697`*^9, 3.6936566122191873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"S", "[", "nI_", "]"}], ":=", 
  RowBox[{
   RowBox[{"FF", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "GG"}], ")"}], "i"], 
       SuperscriptBox[
        RowBox[{"(", "HH", ")"}], 
        RowBox[{"nI", "-", "1", "-", "i"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"nI", "-", "1"}]}], "}"}]}], "]"}]}], "+", 
   RowBox[{"EE", " ", 
    SuperscriptBox["HH", 
     RowBox[{"(", 
      RowBox[{"nI", "-", "1"}], ")"}]]}]}]}]], "Input",
 CellChangeTimes->{{3.6935898107296057`*^9, 3.693589859367388*^9}, {
  3.693590014456259*^9, 3.6935900209596305`*^9}, {3.6936566044157724`*^9, 
  3.6936566095671825`*^9}}],

Cell[TextData[{
 "Below we show that, under the same conditions that ensured that only one \
endemic equilibrium was biologically valid (",
 Cell[BoxData[
  RowBox[{"\[Beta]", "\[Rule]", 
   FractionBox[
    RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}], "-", 
       RowBox[{
        SuperscriptBox["nI", "nI"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], 
         RowBox[{"1", "-", "nI"}]]}]}], ")"}]}]]}]],
  CellChangeTimes->{{3.6935928428120313`*^9, 3.6935928916828265`*^9}, {
   3.6935929503001795`*^9, 3.693592956715546*^9}, {3.6935932149383154`*^9, 
   3.6935932154403443`*^9}, {3.6936567721597595`*^9, 
   3.6936568270184693`*^9}, {3.6947934023576956`*^9, 3.694793412997304*^9}}],
 ") the jacobian matrix has a zero root."
}], "Text",
 CellChangeTimes->{{3.6936564990171766`*^9, 3.6936565091323957`*^9}, {
  3.693656679128339*^9, 3.693656747207514*^9}, {3.6947933028680053`*^9, 
  3.6947933170388155`*^9}, {3.694793528591916*^9, 3.694793560329731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "nI", "]"}], "/.", "letters"}], "/.", 
    RowBox[{"\[Beta]", "\[Rule]", 
     FractionBox[
      RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "d"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}], "-", 
         RowBox[{
          SuperscriptBox["nI", "nI"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"nI", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], 
           RowBox[{"1", "-", "nI"}]]}]}], ")"}]}]]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nI", ">", "0"}], ",", 
     RowBox[{"\[Delta]", ">", "0"}], ",", 
     RowBox[{"\[Tau]I", ">", "0"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6935928428120313`*^9, 3.6935928916828265`*^9}, {
  3.6935929503001795`*^9, 3.693592956715546*^9}, {3.6935932149383154`*^9, 
  3.6935932154403443`*^9}, {3.6936567721597595`*^9, 3.6936568270184693`*^9}, {
  3.6947934023576956`*^9, 3.694793412997304*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.693656828032471*^9, 3.6936576603803825`*^9, 
  3.6947934244639597`*^9}]
}, Closed]],

Cell["\<\
 Although the appearance of a zero root does not guarantee that the system \
does not have a (+) root and hence is unstable we at least know that several \
of the roots \[Lambda]=AA and \[Lambda]=JJ are negative and numerically we \
have yet to find a case where this zero root is not the leading eigenvalue.  \
\>", "Text",
 CellChangeTimes->{{3.6936575057500486`*^9, 3.693657525887886*^9}, {
  3.693658149131423*^9, 3.6936583171197643`*^9}, {3.6936583825967174`*^9, 
  3.6936583849055214`*^9}, {3.6947932249365473`*^9, 3.694793226167618*^9}, {
  3.713364140412673*^9, 3.7133641722835217`*^9}}],

Cell[TextData[{
 "The criterian for a zero root (",
 Cell[BoxData[
  RowBox[{"\[Beta]", "\[Rule]", 
   FractionBox[
    RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]", " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "d"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}], "-", 
       RowBox[{
        SuperscriptBox["nI", "nI"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], 
         RowBox[{"1", "-", "nI"}]]}]}], ")"}]}]]}]],
  CellChangeTimes->{{3.6933187234357805`*^9, 3.693318816381546*^9}, {
    3.693319519135292*^9, 3.6933195262489047`*^9}, 3.693590120853344*^9, {
    3.6935932045107193`*^9, 3.6935932052037587`*^9}, {3.693656363041454*^9, 
    3.693656372190471*^9}}],
 ") has another implication.  Substituting in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"se", "=", 
    FractionBox[
     RowBox[{"b", "-", "d"}], "bk"]}], TraditionalForm]]],
 "we can rearrange to get an expression for the critical density of \
susceptible individuals necessary for disease spread, this is similar to the \
expression for R0=1"
}], "Text",
 CellChangeTimes->{{3.693658388284128*^9, 3.693658477163907*^9}, {
  3.6936585643393*^9, 3.6936585686065087`*^9}, {3.6936586467795005`*^9, 
  3.693658728352656*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"\[Beta]", "==", 
      FractionBox[
       RowBox[{"\[Delta]", "  ", 
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
       RowBox[{"se", 
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}], "-", 
          RowBox[{
           SuperscriptBox["nI", "nI"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"nI", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], 
            RowBox[{"1", "-", "nI"}]]}]}], ")"}]}]]}], ",", "se"}], "]"}], "//",
    "Flatten"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6936587404112787`*^9, 3.6936587638733234`*^9}, {
  3.694796764443996*^9, 3.6947967661960964`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"se", "\[Rule]", 
   FractionBox[
    RowBox[{"\[Delta]", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "nI"]}], 
    RowBox[{"\[Beta]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["nI", "nI"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "nI"]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.694796766834133*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Endemic Equilibrium 1", "Subsubsection",
 CellChangeTimes->{{3.690816866550399*^9, 3.690816877446022*^9}, {
  3.690818188310999*^9, 3.690818192718251*^9}}],

Cell["\<\
First we evaluate the equilibrium to ensure that it is biologically plausible \
(all variables have value greater than 0).\
\>", "Text",
 CellChangeTimes->{{3.690818197694536*^9, 3.6908182281342773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiSub", "[", 
   RowBox[{
    RowBox[{"nI", "/.", "Pars"}], ",", 
    RowBox[{"nR", "/.", "Pars"}], ",", "3"}], "]"}], "/.", "Pars"}]], "Input",
 CellChangeTimes->{{3.690818230916436*^9, 3.6908182477123966`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "\[Rule]", "0.26262375267128785`"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.012828273194736678`"}]}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.012576738426212427`"}]}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"3", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.012330135711972967`"}]}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"4", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.01208836834507154`"}]}], ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.059843407648869`"}]}], ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.05925089866224653`"}]}], ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"3", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.0586642561012342`"}]}], ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"4", ",", "t"}], "]"}], "\[Rule]", 
    RowBox[{"-", "0.058083421882410086`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.69081824811742*^9, 3.6908184348120985`*^9, 3.6908202230563803`*^9, 
   3.69082033442675*^9, {3.6908204590608788`*^9, 3.6908204781989737`*^9}, 
   3.6917778303754997`*^9, 3.692901158973809*^9}]
}, Closed]],

Cell["Not biologically valid", "Text",
 CellChangeTimes->{{3.690818256430896*^9, 3.69081826071014*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]s", "=", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Jmtrx", "[", 
       RowBox[{
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}]}], "]"}], "/.", 
      RowBox[{"EquiSub", "[", 
       RowBox[{
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}], ",", "3"}], "]"}]}], "]"}], "/.", 
    "Pars"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6908168844774246`*^9, 3.6908168936079464`*^9}, {
   3.690817337104313*^9, 3.6908173826729193`*^9}, {3.690818047289933*^9, 
   3.690818071337309*^9}, {3.690818146049582*^9, 3.690818171521039*^9}, 
   3.690818263642308*^9, {3.690818497218668*^9, 3.6908184994257936`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8140800015072697`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.5449302270218854`"}], "+", 
    RowBox[{"0.3202870378347463`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5449302270218854`"}], "-", 
    RowBox[{"0.3202870378347463`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.16093494720707985`"}], "+", 
    RowBox[{"0.04825056333348873`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.16093494720707985`"}], "-", 
    RowBox[{"0.04825056333348873`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.07010444524045326`"}], "+", 
    RowBox[{"0.07720223722748051`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.07010444524045326`"}], "-", 
    RowBox[{"0.07720223722748051`", " ", "\[ImaginaryI]"}]}], ",", 
   "0.08072986470301398`", ",", "0.017434679809791943`"}], "}"}]], "Output",
 CellChangeTimes->{{3.690817355284353*^9, 3.6908173718112984`*^9}, {
   3.690818062849823*^9, 3.690818071800335*^9}, {3.6908181471796465`*^9, 
   3.690818172188077*^9}, 3.6908182643223467`*^9, 3.6908184373792453`*^9, 
   3.6908185000498295`*^9, 3.6908202259615464`*^9, 3.690820336541871*^9, {
   3.6908204606679707`*^9, 3.6908204784139853`*^9}, 3.691777843844489*^9, 
   3.6929011591838093`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", "\[Lambda]s", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69081845652134*^9, 3.690818485545*^9}}],

Cell[BoxData["0.08072986470301398`"], "Output",
 CellChangeTimes->{{3.690818460103545*^9, 3.690818501593918*^9}, 
   3.6908202267415905`*^9, 3.690820478449988*^9, 3.6917778505775137`*^9, 
   3.692901159253809*^9}]
}, Closed]],

Cell["\<\
The presence of a (+) eigenvalue denotes an unstable equilibria (which is not \
surprising given that it is unrealistic)\
\>", "Text",
 CellChangeTimes->{{3.690818087430229*^9, 3.690818124134329*^9}, {
  3.6908182719337826`*^9, 3.690818282350378*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Endemic Equilibrium 2", "Subsubsection",
 CellChangeTimes->{{3.690816866550399*^9, 3.690816877446022*^9}, {
   3.690818188310999*^9, 3.690818192718251*^9}, 3.6908182893267775`*^9}],

Cell["\<\
First we evaluate the equilibrium to ensure that it is biologically plausible \
(all variables have value greater than 0).\
\>", "Text",
 CellChangeTimes->{{3.690818197694536*^9, 3.6908182281342773`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiSub", "[", 
   RowBox[{
    RowBox[{"nI", "/.", "Pars"}], ",", 
    RowBox[{"nR", "/.", "Pars"}], ",", "4"}], "]"}], "/.", "Pars"}]], "Input",
 CellChangeTimes->{{3.690818230916436*^9, 3.6908182477123966`*^9}, 
   3.690818293545018*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"0", ",", "t"}], "]"}], "\[Rule]", "0.26262375267128785`"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0.028377957682387753`"}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0.027821527139595834`"}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"3", ",", "t"}], "]"}], "\[Rule]", "0.027276006999603763`"}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"4", ",", "t"}], "]"}], "\[Rule]", "0.026741183332944864`"}], 
   ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0.13238209570764783`"}], ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0.13107138188876025`"}], ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"3", ",", "t"}], "]"}], "\[Rule]", "0.1297736454344161`"}], ",", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"4", ",", "t"}], "]"}], "\[Rule]", "0.1284887578558575`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.69081824811742*^9, 3.690818294080049*^9, 
  3.6908184433325853`*^9, 3.6908202282556777`*^9, 3.69082047848799*^9, 
  3.691777853044746*^9, 3.6929011592938094`*^9}]
}, Closed]],

Cell["This equilibria is biologically valid", "Text",
 CellChangeTimes->{{3.690818256430896*^9, 3.69081826071014*^9}, {
  3.690818297158225*^9, 3.6908183052776895`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]s", "=", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"Jmtrx", "[", 
       RowBox[{
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}]}], "]"}], "/.", 
      RowBox[{"EquiSub", "[", 
       RowBox[{
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}], ",", "4"}], "]"}]}], "]"}], "/.", 
    "Pars"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6908168844774246`*^9, 3.6908168936079464`*^9}, {
   3.690817337104313*^9, 3.6908173826729193`*^9}, {3.690818047289933*^9, 
   3.690818071337309*^9}, {3.690818146049582*^9, 3.690818171521039*^9}, 
   3.690818263642308*^9, {3.6908183091069083`*^9, 3.690818309401925*^9}, {
   3.6908184525871153`*^9, 3.6908184549062476`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8201433419117512`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.5499708955185996`"}], "+", 
    RowBox[{"0.3269017266443898`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.5499708955185996`"}], "-", 
    RowBox[{"0.3269017266443898`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "0.18895019961817325`"}], ",", 
   RowBox[{
    RowBox[{"-", "0.11544498307562523`"}], "+", 
    RowBox[{"0.09343685946355634`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.11544498307562523`"}], "-", 
    RowBox[{"0.09343685946355634`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.013439408073226945`"}], "+", 
    RowBox[{"0.11099220104491257`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.013439408073226945`"}], "-", 
    RowBox[{"0.11099220104491257`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"-", "0.01777459872529406`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.690817355284353*^9, 3.6908173718112984`*^9}, {
   3.690818062849823*^9, 3.690818071800335*^9}, {3.6908181471796465`*^9, 
   3.690818172188077*^9}, 3.6908182643223467`*^9, 3.690818310077964*^9, {
   3.690818445192692*^9, 3.6908184555122824`*^9}, 3.6908202300137777`*^9, 
   3.6908204787020025`*^9, 3.691777855909542*^9, 3.69290115950381*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", "\[Lambda]s", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.69081845652134*^9, 3.690818485545*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.013439408073226945`"}]], "Output",
 CellChangeTimes->{{3.690818460103545*^9, 3.6908184860830307`*^9}, 
   3.6908202304378023`*^9, 3.6908204787410045`*^9, 3.6917778589451857`*^9, 
   3.6929011595338097`*^9}]
}, Closed]],

Cell["\<\
Since all eigenvalues are (-) the equilibrium is stable with damped cycles \
(complex eigenvalue with (-) real part)\
\>", "Text",
 CellChangeTimes->{{3.690818087430229*^9, 3.690818124134329*^9}, {
   3.6908182719337826`*^9, 3.690818282350378*^9}, 3.690818351878355*^9, {
   3.6908185658875957`*^9, 3.6908186216947875`*^9}, 3.6914375350332537`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subchapter",
 CellChangeTimes->{{3.690806946333436*^9, 3.690806949517618*^9}}],

Cell["\<\
We can numerically integrate the system of differential equations to confirm \
the stability results above for a particular set of initial conditions given \
by inits[nI,nR]\
\>", "Text",
 CellChangeTimes->{{3.690818677029952*^9, 3.6908187200944157`*^9}, {
  3.6908189344546766`*^9, 3.6908189493265266`*^9}, {3.6914400620483027`*^9, 
  3.691440075512126*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nI", "\[Rule]", "20"}], ",", 
     RowBox[{"nR", "\[Rule]", "20"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "14"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "33"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"b", "\[Rule]", "0.02"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.01"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"tmax", "\[Rule]", "1000"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.690816996264818*^9, 3.690817046385685*^9}, {
   3.6908173194663043`*^9, 3.690817334130143*^9}, 3.6908184278426995`*^9, {
   3.6908187102518525`*^9, 3.6908187131860204`*^9}, {3.69081953227987*^9, 
   3.6908195336739497`*^9}, {3.6908205280108223`*^9, 3.690820529873929*^9}, {
   3.6908207957711377`*^9, 3.6908207985542965`*^9}, {3.69290118090784*^9, 
   3.6929011940998583`*^9}, {3.69290128835706*^9, 3.692901300230077*^9}, 
   3.692901396709213*^9, {3.692901453569293*^9, 3.692901477457327*^9}}],

Cell["\<\
In particular the initial conditions used here are the second (biologically \
valid) endemic equilibrium with a small perturbation.\
\>", "Text",
 CellChangeTimes->{{3.690818971485794*^9, 3.6908189995504*^9}, {
  3.6908208368644876`*^9, 3.6908208651431055`*^9}, {3.6914400811281357`*^9, 
  3.6914400885869493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inits", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nI", ",", "nR", ",", "j", ",", "inits"}], "}"}], ",", 
    RowBox[{
     RowBox[{"inits", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inits", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"0", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", "0.8", ")"}], 
         RowBox[{"s", "[", 
          RowBox[{"0", ",", "t"}], "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"j", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", "1.05", ")"}], 
            RowBox[{"i", "[", 
             RowBox[{"j", ",", "t"}], "]"}]}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"j", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", "1.00", ")"}], 
            RowBox[{"r", "[", 
             RowBox[{"j", ",", "t"}], "]"}]}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inits", "/.", 
      RowBox[{"EquiSub", "[", 
       RowBox[{"nI", ",", "nR", ",", "4"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.6908187353452883`*^9, {3.6908189517116632`*^9, 3.690818959032082*^9}, {
   3.6908190440559454`*^9, 3.690819207019266*^9}, {3.690819473839527*^9, 
   3.6908194995289965`*^9}, {3.690820485944416*^9, 3.6908204924667892`*^9}, {
   3.6908207822813663`*^9, 3.690820785865571*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nsol", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"ODEs", "[", 
          RowBox[{
           RowBox[{"nI", "/.", "Pars"}], ",", 
           RowBox[{"nR", "/.", "Pars"}]}], "]"}], ",", 
         RowBox[{"Inits", "[", 
          RowBox[{
           RowBox[{"nI", "/.", "Pars"}], ",", 
           RowBox[{"nR", "/.", "Pars"}]}], "]"}]}], "]"}], "/.", "Pars"}], 
      ",", 
      RowBox[{"Vars", "[", 
       RowBox[{
        RowBox[{"nI", "/.", "Pars"}], ",", 
        RowBox[{"nR", "/.", "Pars"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"tmax", "/.", "Pars"}]}], "}"}]}], "]"}], "//", "Flatten"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ssol", "[", 
    RowBox[{"0", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"0", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isol", "[", 
    RowBox[{"c_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"i", "[", 
      RowBox[{"c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rsol", "[", 
    RowBox[{"c_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6908187231895924`*^9, 3.6908187315920734`*^9}, {
   3.6908189294403896`*^9, 3.6908189315525103`*^9}, {3.6908189625922856`*^9, 
   3.690818968448621*^9}, {3.690819002824587*^9, 3.690819039047659*^9}, 
   3.6908192168658295`*^9, {3.6908194507062044`*^9, 3.6908194656260576`*^9}, {
   3.690819572303159*^9, 3.6908195811606655`*^9}, {3.6908205065295935`*^9, 
   3.690820612119633*^9}, 3.690820748161414*^9}],

Cell[TextData[StyleBox["Here we show the number of susceptible individuals \
(red), the total number of infected individuals (blue), and the total number \
of recovered individuals (purple).",
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.69177795535674*^9, 3.691778029828973*^9}, {
  3.713364197374448*^9, 3.713364200647135*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIRSPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ssol", "[", 
       RowBox[{"0", ",", "t"}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"isol", "[", 
         RowBox[{"c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", 
          RowBox[{"nI", "/.", "Pars"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"rsol", "[", 
         RowBox[{"c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", 
          RowBox[{"nR", "/.", "Pars"}]}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"tmax", "/.", "Pars"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Purple"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Bold"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6908206140827456`*^9, 3.6908207701166697`*^9}, {
  3.6929013318241215`*^9, 3.6929013470181427`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1:eJwUm3c81d8bwO3KFmUkldGXQkJGyXmMZG+y997j2lxCaKGlhJCZRGWEhD73
o9CSJFR2KatEQsPv/P7q9bzu/ZzznHM+53k/77rtcQs292Sgo6M7vJmO7v9/
zv74Y6jj9VM9q1r+cQKlHYWVxShoF79BJmcyCYbadhTNNu8lWDyJhudyq55/
aUdxbeV0TMVLqNWtKkdcpgP9vZpitFbECC9VH1Q/ud6B2ph+LC0V8QJXwp6J
GZ/HaIDt2keG93xgO/ZxsujkY7SwVf0pz7btcE2qM37P9cdIZM+Z6wdOC8Cj
/3aVn+55jBKOimr4h+4ERaa7kWJSBBI5InV8sUgMHJlfx/qMEKhK/c/D1aPi
YKumXmGxTCAlzVdydO/FIfpWxmFuVhoy1osQ4tq2F3jW+5R/KNIQ9cTjeenT
ktCT/S9yIZ2GWO0vuynulYJnHh0M//JoKMfJ+90RmhR84djf3FpLQzWeHI/1
/+4Dfd4jP+UGaOhjuO1ln1AZ+CLcMmclQiKfKOktIZyyMJYlfFHjAImWYzcS
om7Lwhn1MNF7iETsyWXeaZ8OgH7IJjY2ZxI911Rb0NGQg70aA2PzgSS6SJZV
9mTJwReipPxYPIlEuqJ39kkfhL6RlQK9qySa0pt4ZxV3EDKW/95aLCFR1TOD
i0PdB4Ex4ZINy10SKb0S2TTuJQ9Dp6WqQ5+Q6I9pxmOPBnngZ5/VeNpLIqJv
Me4LowJIns03Sx8mkfEA+f1bkQKU1+Rp6M6RKHHU0ZZzRQHstOI0vi+T6O6X
lcfSBoqgItfeP/uHRGOLWfsMihRhEy93sRpTJ+L5LXnJ96civBlpvDDF2ok0
mYjf6fqH4FiOwatP3J0ojMPeo7zwEJhb0j3U3N6JSrYvPyeXD0H+ouvnv0Kd
qH/X+UOTekpwaimGR2hXJ2KW2nuDvlAJhr3HxK+LdiIl+XaW3ctKIG75TPqk
RCfyOmITrK6nDKw+z6z7/utEV7UX3zncUAZhowPfsqU6UZfRGYhbUgbB68yO
Hfs60aq12K1cXRX49Vtzl8f+TiTl0srTVKACBhpszxJxbOdrFTvwQwUCFQY2
8+P4bNjCxPJxVZD0Xbkgg59vjUs34C1QBTaNCZmnkp1oLnV3/cEfqhB/T+Tu
9N5OtDOzWdj0+GEQ/nXh50XxTmR81fxUUP5hkJ97NP58TyeiFs3On1s8DP0V
H+1zRTpR7a1U69s6R6DyN7/hH7z+sfs727vzjkBw591ra3h/eFob//vy/Qic
yV4VvbIV72enSTaLjhqM9bjR+jg6Uem7k65a39XgW7R+mBZjJ3o7JtTjeuwo
+JYaLST8JRHLTJ180vWj8Mk+2NL3F4m8/3xifKStDmxmbv0uMyS6xpwY8D5X
HeJrHG+GT5Koi1Pg7dqCOmw2Y27X/kCifXv0y5VyERTAy98yL0j0S/SE+GAk
gLmHg5tvNYmyK0psvIsBDoz7xLTi909S+vu5lWcAn8a2B09cJ5HNodM/+fZo
wNJvvtKaDBK1HH/4xOyZBjQEcGdGuZHI/Pmm32M/NUD4w9aFCzYkmjW1PBCy
WxPq934ePGtMImG7+auZEZrA/WmHsdhhEiUE7PJ9tksLyt7kLzNwkwgupLAd
o2jDmg63eeMDGno6sl2dIV8bDArevtp/B99v6aqQdpo2BNl/zr9+k4Ycn/a+
VeU9Bm7vrh4MOE9DsX93FsnePwaOZ7vP7HSnIXqDe32zQ8fAWEhEKM+GhjKu
aTPfotcBDnH1UXFjGrqq4O8nZqYDjKPXwn1Uaajet0lR4LsOLCZ8MGLioaEj
Dwy83/IfB4nPp62UN9EQwTSaexEdh5xPmhZZfwn0upB5gz3rOAjeHD/3cIZA
NvPXDvY0Hgc9f82UnHECjR2W9kgfOQ6qz9gmSgYJtPDWvJteVhf493Xouj8l
UITY599tVrrwyJzKINxOoD8hMbLxCbqQkPIqhu8BgdjYiy6tPNeFVpWYa68r
CHTRVuFJ3bIuCAYnZ+cXEUio4slqiLAeDCe8/VyXSyBJzXnHWX89OHXrXtyb
cwSqzUrKrrykB2WiSd7jabhefuSleT7UA46YBabjJwnUtq/ip+ikHnxkOfSZ
JZ5Ax6IPS46x6kMlI32SWBSBnne+sCuQ14fTWwokCsMIZMnret7OTh8st5dv
iQ8i0HuX5Xb+ZH3Y/umsWqsfgdxq0n/039KHbR9yqly9CfT1t5DExdf4+f/O
CAd5EChEr+aEyZo+WM/YH5x0JdBqjsYZ9j0GcF61xIdwJlDiVH9rt64BCPwR
5uFwIhCLvM+3tBADeB3/25p0IFBm4u892tcMoGDk2dGv9gTa9iLTkr7DAKYU
7fLjcZwvJJreNm0AEfMnJBJxLObT0BzHZQgWJnfsFnFc1aA7p6JsCPxv9l9/
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
j99vsx4uzWJAj6n4qDgSfeKeQ7zhJQZEhm50vXNKSnbq7Vqachn3J+3NmPXo
k1FR3o8m5zFg7ny9OcvQl6qGAr3o1/D+E2fWhqFPjd4X+acvnwGKLL/+eQFS
svqJ8Oz+AgbEfhyMX4R8CTU5t6ypiAGWl/RPxiF/8pOznqy/zYBh9oNnboel
5JPCjQMlpXg9b+AGF3mlG3Dv78J7DLg0e6XRFIzdXz1KTCpjQNDzNOM/yLdz
Nk3LJ0kZEOZZFrMBr9ddeV8dSTFA3fSFUj/GE6Z/9fleyQDBSQr+4vi2EcNy
Xo8YUH2AVnMI/ZDWNS6p4Qme5/yRBcvRD0u3TFtpW8MA4eWhy7uQf/0lc2tv
1TJgjvjbxdYgKVmis9jXoJ4Bute/b68IlZKDIrOxFxoZsMv4YMMI+mLGz3Up
E14yIM/htNFZ9MVm962rIl4zwDlgrgefLiUzqtzrvjYzYJnNX2hAn9+y7PAR
z1YG1JhtTwxF3xecP65Q38YAl3VJ2v5RUjJyJNq8uBPfh065Y27n0aebkhoW
fGTAiltNWlvS0M/JZb/Ez7g/pxxUzlyUkk5VaUb4NwYsUXb7NBp5WF38Q3nN
fwzwk5aLd2J/pjB3VHbhbzxPhnvbz76WEuBPIHp/GbBjrmWbejv2a7vnBymN
ZcJ/Q8GpTf1SkjTK+c2ziUygh2RVfJklI0fsSq/s0WaCITs1zcpfRtqWrpo9
RpcJ0ctKx645JSM7pxcLLusxoULp4Dd3roxYv7txaGARE/brvec9TZWRGaGX
F0SvZELzKHuJwnMZEe5ecHalGRNyJ22DzS0yMso6W6HFggk6U9RvipCHn8en
fzCwZoLv3fiKejmKlKefy5RtwufPS9kydRnWO+6Mqb6OTAjxvvmbsZoiuUfi
GCpOTJgZaqgtW0+ReNNoT7edTJjw6du3DDeKKGtOej7GlQmjKOEDs4MUoY0W
Qe5uJjQWHjwc9e/zrtXcOYN7maC7q3+yN9ar1pvyUcleTDA6t/He2yiKbD/H
HFnjzYSw05Zieax3xCuyJfowzvfV2mGHXIoUbvhjb+rHBHVBtPzBmxRZuOTU
3ZYAJjy/cXu2dilFpv0KvbAwlAm7Xynn76vCev+2X/n5CSYkzVXP66hBPsoC
w46fYoJK/rjCoQaKBF/+9lEzgon91LqeC68p8lHi50rRmLBxX37WE/Qh9+Ce
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
LCx32o/5adx+usIJ/ZG1IdX2kAiMztV4WVti/+Z0bI9RkAg+qI69bDqFIp8+
S5vGcEWQctxoXfgtGbGYM9E2gi+C8R/HlY/JkxHRVueiISHu56WNxjFpMrK4
5POZ3mgc71irsBp5G8CZ5vTivAgeyPn7r3STkYoS93KnZBH8JLb6LltlZEpv
ztKnqbifmfrcZHy/C7ZZTqrIEoFj7bHmNOTtwFzvJ7nX8LwZvPvejjydXCmr
ULshAvPld7zykKf6h7VvcwpE4DL7UPs15OmuouasfbdFQBcoKRzBfj1ol/mF
2lI8P0VhvotasX7/PRtjdU8EkTYFe5a8kJKyjdsiZklFcGEtf9e4Kil5+SU/
mEeJINjjtFdbuZT0nZl0eKBSBHcfXvqogPVQ9+0j57onIvDuDdlpcVVKLJkL
HKFGBBu2w0GHS1KyU5+99lqtCBRTu51voJ/wAmGZoBHne819SvBZKUmfmbJg
6IUInC1NoDFWSkrvDmt6vxZB5cazqmKJlNR7uk5raBbBbtP5tCQB8kvhlrJN
K87/oq/HWPQl+bxpcvltImAuPHvwAfqUllPgoGYHvr+Ok6zeoW+tGnjWK+wU
wV7+MckO5IvThcUdv7pFMOn5H2o+8scXhK99Potg3Q81ayf0N9aH7trGXtwf
QfGWl8ivZIHtwzXf8O/psfPuoO8VL826d6MP99c2+80v5N2zBrnCOT/xPOwy
DI7DuPukR654ENfTer1ZgLHcnHtpw79EQD7F9TdjPIuadfbQbxGoV+cGCHC8
5YdOiF+MiKDna9qfWHye/aQm5jo5MTxSeb98AHl5oGB5WMEYMfS/3htbcEpK
IlxiArQVxFA+zYT5+J8///niHaUohqHpyrvNcb35GfZuf5TFYKSktGs05uPx
+txthyeKYcnb/IvaHClp7xln92qyGM6axe88++/7B2MOwPopYlg1dmHwPjH6
palsZdE0Max3/jNMR99f2jx3sc5MMWz8u+RKP/Y7G+gROjHqYph+/otjCfLU
U69Z/e9sMRzzepdcgzwNe2KmclRLDHI/N65cjjzNm/7z9wYdMSQaj3PvyMf+
pnTrj+L5Ylg2ZVvN4lvIU4/8j7r6Yhhm5liWo4+q5h5uGrVYDMk+dVNLnkhJ
qNX767dXiuHb9H6FB5+kJKqdXNQzE0OCC52p/UNKcnjJSXEWYjigdlD+1rCU
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
F9BK
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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
/1Aa3C2PvuqH9/8fWeeP3A==
     "]]}, 
   {RGBColor[0.5, 0, 0.5], Thickness[Large], LineBox[CompressedData["
1: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
B2o4f2hnq7yQCvODX/eEmre/o6KIvHy15rN+cGJQvlF6nIoqClcen0rxgzgB
6fXKNzjP3Twt/SrLD5qcJltjX2LelVbfsSj2A87Q6G3VPZjXFZsFpu/6Qc/N
O+/ku3AernTO9nrkB2VuFLoDmBeZ99q2/Wz3g/AGE+EAzJOntdwXY/r8AKft
gb1NVLT8MGRj04gfPLue6y5Vj/naOBB6ZdIPvl48eOAOzmNGzaKL3At+MLNs
I3wR8yuuLcGl5KcfVHU8sHlRQ0UWU/6Lu2j8YZ+f/OUIzLslR/47Zxj9waG7
2za9mooSZ/tcirb4A1nor8mOa37X8P3v2f3ha2l59m/My0cfDxKHOf3hu9Vg
hBa+ru8xdMOX2x+qxWfmGP7Ph/NnTR7s9YenbTwNh/H9YryPbFsR8gcWw6WM
+vtUxLlI7VMQ8QfH531/qh5gnvolJ5494g8zLp2qrDjPq32TU30mg68zMBe8
xn6EGvh+fcsJf1B9G7qxhvN/0I+MJgPkDxKunlqpbTgPh0Joppo/HP+5pHj2
KRXd/P3l6LiWPxQ5yRiNPqeiE+G5X/gM/OGMdwNNWj8Vvf6rWeFo4g93oni8
br2mIpr1W/s+2/rDg6VTY9PYb92INaJKOvtDaCH1KjP2Y0doN66HePjDldCs
m/GfqMiWwYp9I8gfPkzR6YT8pqKWLdvWtyf5Ax/jiuXCLsxHl4TwtVR/mNzZ
/XWKHz/v7Ws/PmT4g1yNfAT7IQJlhHxaeJznD1bBl/UYjhPIfbJj3KXGH+7x
5wXSWxNo56OQh42j/vDvONdCcQWBerd9liyh+sOFBzN1+Q8IFOvlWJk25Q9M
iiIxBS0Emt9ncMtpwR+eX5vsK35NoPZLwle2bvjD6lL3pPEf/P45vPV2OBgA
eQL1jJlqJBJoNprTEQ0AzhZGDxs9nC93dTvJSgbAFuqPxT+mJFLpr7NiOREA
e1LGbxe7Yv06KDryUykAcumYSsp8SVR1tthoUjUARFMKHEJDScQll6b5UC8A
GLOYKM4XcD66wtBZaBwA64bMCrEpWL8+R6Bk8wAIdpfut7xKosViN1k7hwCI
5jppfQrnjVtrxH0t1wAQzM6JN8Z51MLcRFzGKwDy9/Il7K4k0VNWZaHNIQHw
aWlKr+MR5rNbfeH38AAY0Hr/peQxziMd4jxkTABYFBUclsd8nOEtyeo+HwB/
X34pj8b6fCOMm+PBxQAYnvCUDsD6rT+YnpqfGgBhZaKVHFjf6cU3bb6YEQAx
dp/YHLD+NyRGxwdeD4DPZ94EnMF503f6+4Z1XgB4zDxgoMV5UEjRM1KjOACM
U9u2G42SaPz65K+jpQGwEdD9TxvzKG3ZLJD3bgAwl65qLE6QSE3vxRemmgB4
VLvt0gnMt79lqh7f6gLgXEtjxBEC6yld0+zbxgDQbP0x249rZxtJ+2etAdAb
ZljLQZKIu6H0bc3TALDaxvieBtfqLDR0jD0BQMrFdCXjzwfaWgpbvgwAF+H9
+6vx+gX3a/Wr3gSA2d1IXy/My14G1hDa8QC4V1Ar+hTv75e5S64pGQDUKfet
j/D+Be62PqmYCYAPulHzavh8+uu75/7N4XlvGmz0x+ePNApgM14MgKTHlzNP
4P6Ul/TKlH4PgMqXq3W3sL8Y+i145u9KAMiYXw+teo75pRN9Vn89AJ4W3jW1
/P/n1wUjZTfpA+GSX81ieSue77cjL38xB8Iwc9VGPs6r8WpJP7TZAsE+/azD
iToSUedPKn/nCoSF1Bu8AZiPzErX3DT4A0HhZs8TdsxHmSuLqbmCgdBn/lvT
FvutFLniCVWJQNjiS07uxP5MMZ4pOFM1ECTkiwKkfEjkOWqXM6cZCAVHxmey
nUmUJdLYrqAfCFNjf9yen8HP44DX1vcWgZCifCTkrBbuH9/r0mO+gRBucFX7
lQDun7/Ii6SgQCh7cNCtkwv37+n57wQlEL7Ptv3NYcP98pSFhPOBAPsb1Ffx
+7bxKHd85EYgrLx4KLP8ikBiW35uiBQEQiXjeV3rLgJZ2OgfjL0VCFGGkQbP
mghUQ08bdKg6EPJk2isrbhPI3tCVlfI0EJacp3l4ogiUcqtNqr87ECbrd5R9
CyBQwy8uy30vA0GD3/zwRzcCbcvvu909FggDX7ztlEwI9OSTJNqzGAhBle4S
9EcItKiQ7OLzPRBipKeeHj9IIO70mUtPVgJhOUzj6B0+rFeyWWMe9EHw+PCr
Fr2tBCpI+rrewhwEl039UAIj1h+q5gEOtiBQfXHffNM65s351YAmriBQzn6+
6etXKnrXGFn6ky8IjHurVcOxPuYtrU5ICgZBg5HbUROsn5aHoti9hYNAxp5V
6hxBRbts11TLxIOgwnAuiXGMit5kRlGmpYKgOdXabnIQ582+tUq+40Gwthzc
uBPzU48uespCMQjeFljGlmB+bpH/x5mpEgT7BMMpVzA/n/tFa7/SCAIlmXNq
BOZnfOm/mC16QfD5mIJ7UisVKRPRD04ZB0GjV5LGdcyP9R3rH+PMg6BJvn0b
M85vj7VjeJutg+DJB6VpKuYP5ey64W+HIPDRqLu5C+c9mYaYC1JuQeB8t1zw
EebVt8X1Rh/vILiUmcHQjPlafSB2sTwgCG4uhbYJ49rTekNgNhSft7O/Yg3z
7tDVWPO9UbgfDteX5fD12Z6NS1Zncb8o/HkTuC6miWu/lhAEQ+Ta+Vm8vq0c
zc+BS0Gw+fmgjSm+P49v3GHWK0Gw6PvxoRjm/VgJja1GVhCMuf366oH3f+1t
XMa53CAwGD2rwYrzvDEH7fOWoiDIKZAZ4MB8ZNc6u7pyG6//RS00qgPn1Vha
SZm7QcBvWbGh8YyKkh6ddfarCYKkrJZNwTifqn+hzb7zMAigxo9uA/e/3YqO
bn97ENjv0Nwqiv1O9JVzstZdeB50/ae6SczXbjqv671BEH+xi2iexXn9GP3Q
1uEg6N03vvnWNyoK8D7PrDWB93PEqvHyyv95lV4x/l0Q3OlKZOjdoKLybQyl
fz8Fwd/IXB1edgK5aMRPHPuK53e/yEtiN4EEYhjYA34EwUaYR8i5vQTKW2Cg
fFwPgodjGz4zkgS6/IxRe2hHMLze+5VNxIxAuv8uxLDvCQaTb6qmX+wIxCzD
9ECbPxg+WpnWjHgQ6FwxE+8T4WC4euwghTWGQKFRmxarFIOhtVri7fUy7Bel
NmckugXDQcurpU2rBJJXMU5w9w4Gna8lQlaMJNppnBuhFRAMiu7R92bx+98T
IO7EEolrQ/sX1fuxPt03krmcFgzupN71zlMkYn+SI+x/NRh6sx899cD5dH5g
htfoRjD2A9e/T5thf70UwrjjZjC8e+vwW92NRCySOSNZD4PBRsM7IB3z9AOa
6Q1rCgZ/7xRIxzxtNxBrs2gLBtGpVzxGmKehfq1l3D3BQHHdubEV89QodlPe
6otgiO2fQEyYp2KXDdOpg8HAIP1npf4uzk/V05QCajBM5Tx0UcY8bWkV9Ymd
CgZ1My2mXZinN14GO9h/wJ//Nr+1oA3zhWwxVV4IhpZnWVJjWM/1Fpm0BZaC
If+8mOpTrPfC6wZK9D+DYWXLrkO2mAd0bNlSs3+C4R5vKFn2kkQE3/TBrnW8
Pl3TuUKctxrERXlK6UPg+m86DTWcx64qBrMnModAc/HrsGs4r/nqtdC7bw2B
aeXyqAyc5zRtmFY0OUJgwMhk8ATmqaCPwefDu0Og/fPgtjTMt/WoG5NbeEPA
ZeXb/CXMv7GUqaGFfSFw8Eu2mAzm44M8kZ7+AyGw6t91PwHXaZVBLVUiIRD/
NzThPK49mpvvpx3Bnz9U2CWCa7V+xlI/mRDIybx8OQqvx0/VzzGUD4ESOkWp
cHy/PwvX044qhYCz0D6O/Xg/Q6uT5zhUQ2B5meVOMN5vNYtI2HeNELiSI5ca
jM+TxBPkNaQbAttzrN324/M6izbbPTQKAROe0NVI3A90ktEkywyv9/u+0AXc
L24dfc2wM7je6TOsiPv5w+q6goV9CLA7au4uw/1+5TkpKe8SAsZHwlk68Dzu
RBw+wO0ZAq6VjXOX8bzikwP3rPqGwHet1tXteJ4n7jDQtVBCIE+8yOn4fRJx
Nun9yo8OgaFbn5ve4edhqSdrPuZcCKh9zzZWxs9L6SfhN5ASArHHko6cyCHR
9sN6JZ2FIUDQ9arIxZLI8Wi4KvvtEPCePJ6vGvb/7yNuT1veCYFcjszSbX4k
MtP+t+9rXQiIMxVcXLEhUZ5XVf6e3hDIHFrhMJPHz0v11uu+P0KgLNcn7tgn
AkU8kpdt/BMCw3E12wZJAvW1ugzTb4RAyHp2m8sQgXxftezI3hwKD0M10s/i
vFm35JP+lD8UfvhwC//EeRKkXyZxaYUC94NYpT0a2F+f/CvspB8KcPKVzYIi
gWZUD3ZXnQ4F1iPvPn2VwfnSJIZJ1TYUVPJqh/IFCTRmfed2qlMoHOMw69Pj
IdBhlxG1MfdQWBdrPaO4g0D9IRLnfYJCYUErJf8jPYH4Y6wEGiihICMmr1i+
RkV+CQlP6GJCYWQq0LjuJxVxXCc3rl8MBY5PZrca56jIuXBL4XRqKBS8DVit
n6aih2WySuJXQ6EYJmlYMQ8tGtKiOvJDIcyZhq4V8+9OexPP1luh0Bf7R3Af
1t/V7g9N5uWhUBcjqjSJ+af7msPqZlUoiKYns9Ng/S4YV/rzuTYUUl9NHDmL
9X1pyvOGXEMoSNxU3OmC9V95PkvuXEsoeG7/tasK8yFjuWOkvwPfb17H1Arn
ydm/iyG7u0OhYiLhrQ/OW7L0PJyOL0KhJdUzZg7zMJFFo65yMBTWerlWejGP
xnYEnf49is9nav2GE9civIXLygQOYdblfj04f0YK9V1JmQ4Fe2aWrR9w3S/2
W3L0Yyi0sXc2eOHP8x8THNj/JRRMiBALK7y+n6KBn/dyKHCN09+5j/lG8qu9
tP4dCkXutVKGmG/6NPLiemuh0Cs1yqWF+d0yJZ6iSBsGD/7KPs3F+VjsqcCC
OFMY7L+5NVyjHfuPkt3a/Cxh0Gm2aq+D8yBLAmsF27YwUGXZiC/F/Ypwo2Xe
2BkGvKPTL80x7+Y1f7l+3RMGtJnTm21xvy1FFrre8YfBPa7pD/V4Ht0sk0ID
gmHwhfXdF6dRKip72TNdIx4Gw2WScpVT2M/UtCoXS4VBxj6C4dRHKkq48qDo
ihzen7Ir3+EveP4m+baBymEwtSIn0PeHioaOZbQ4quP1OQ73xdMQSHV3Iu9p
nTAYeHxb8uwmzLsJ/wlp0zBwaWDOP47z5Ds7NbOf7mEgFN9zwEqWQPrK8g/f
+4RB/sWS5GklArUKSOwcCQyDY1cYPW/g5z/v/e7BR1FhYPKxtyzOkkBWXgt6
lPQwiH5+4eFnzLse3clK92thcJzd/3fyRQIdlxhmscwJA6vw46WKGQTa/a21
R74kDBbCIw+9wX50KDTj1Gp9GBTx6Io4viCQmkViyUIzrrNFTDVGCfRAPoqe
+iQMmtU9gw9O4fdvzeVJcx/ub+fTnc9+EMjgnLxizLswSIrMdZbgIVGrk0Se
72wYjC4p2CcJ4fx2SnDV9lMYzIXarnaKk4iVeWsj+h4GUhWMEoMI++/USRna
TRT4w3kn+ocDieT9hq9+Y6HAu8NXBRg8cR4x7F2e2kYBmVweETKARIk76mo6
uClQ/2d89mMc9us/ytkf7KUAW3nR5h0XSeQ6ku97S4gCfSqnDm+kYb3PThSL
l6DAnrL3uhx5JBIJspMlpSlg+E/A7yHOG9v05OC4PAV+F8GR//9+6NdBdu0M
JQpwazTobFTjvELz8fRnVQpQi9Mai3F+6ZhotVHXooDpaETkPM435XVZbkX6
FFibfNw6ivNPWppvwN/TFGjtLXjjhvU72F090sSSAoy7S8Szsb5bqfBfqLal
QMKRDCdPrP/A+yuN2ZkCzxS0JSf+//3orxc3HD0oIBVwPvAj5gfrwO2bzb4U
MPPcK3EF82W5IrpyVzAF7P2kUkYwf8bOmz7yD6cAWk4cf4T51Goj3t4bQ4Ed
5PWEo5hfJXKMvULxFDBK9D2sjvmWvJ14E5NEgVBP/agfuPZfqCPG0ihgEWJr
roB5aNaV8lEqkwI5ab+6+XCtUOj8LSWbAnSzcRs38OcFwhVWPxRQwJtlp0w1
Xp/59E5G5RIKjN0rodqM////fT6z5VZQgI9fPK0c588hpk6un9UUmHnEvpGG
82fTZK6AQR0FJnjmmTneYH/UFCRW0UgBORf7MqkBEiVk6sjSt1Egadp45RvO
796+gmDTSYHlI6EnjXpIZKy5qlXfQ4EUr8bXRl0kOi7w5vT2VxR406ak9LOd
RAwj59y6xinwUzNdUbQe+7F7VgF731Fgsjc38Anm40CSVGT4LAXCjZ600VZi
filOp4l/pQBn6rRkUiGJzu1uupH4gwJM+/6+H7pBIvdvV25O/aHAk4/UV2+u
YP93W/nRNYZwuBI3V/bzHOZ57J72r5vD4Z5H9ypfJM7Hlt96tNjDgWsfac4Q
RKJ+1mLi355wYDMuo93tiP1BMA2j65Fw4Dfnnb+rSCJt/TG2dplwKN3wz+SR
IZGkcA0X94lw2NDk3eUkQqK1t3ZiL9XC4W/vx/HEXSTKVG07LWsVDp/9BGfT
vhCokyPmJtOFcJiaJSQ+ZBPo5EBUk0ZyOBScqEt8eplAtamRgxcvh8PxC7N1
dRcIVMgcTseSEw6541tNp3DejFgPcmS/h6+/4dzyXIdA3x4HRhjWhYNwVF59
mQqB3MMDMq40hoNee0VygzyBzH74duzoDAfvH1ozYcIEOjrvIcA1Hg4nGqqM
njETqLzM/YQlGQ4H/hBnz9Jinrq4GefMhEPvC22/C3+piHXS+RzvYjhYPDpy
IBDr5/l8pxyb77hfJ7av22F9/WvlWFuwEg4j7w/VFmH9nRu2m95HHwHR27Iz
BLE+2121/evAHAFGv6gfPLB+jxjacNzaGgFzSRw2LFjfddmsRWY5IuCF3eaW
zVj/n/ZZqRzgioAkgYcVrpgPJ5IsrVz5IoCo2ZEliPlRo24RWCYQAdpfR2aV
MV8OMZgnzx2KAAlejScdmD8FT0xvHhaPANeTO9TKMJ84Y02aPKUiIPHDjtNL
mF8pCqcH78pFQFzxzZoCzFe6v0bznxUioNrr+79azLvwekM6CZUI4NOgqRHH
9VKwAbefRgRwSjnuYMe1q5S+VI1uBAiK+RqY45r4qqv9zSgC9jJ9cGDC65lU
6ThKmUdAzHuD/bz4fn2e2hFB1hGgsSZz8gbmu4qwVkadAz7fyzWZCMz/hvca
d366RsDML3uvJzgfH7ml3iHrHQErt512+OD8XGp/aiIsIAJofvvLRHVSES+/
2nJDaAQw5cSUf3lORVffqmz5GxkBnUuvtNr7cB7PVhY4eTYCNiXrZy2/oqKz
ZnAiKiECZAZTd54foqKVHci45VIEVD0qXvfD+fF9msI5lBUBLmE7bprjvGit
ezInLhefh7fpqP48FQ1uPlH7pCgCvFJ/s2Yv4fwZLzetejcCLlJaLu1fpyI5
Fdm/8TURIFB/968lI4GqN2Q4nj2MgJ50vhNUVsy/CCkVzXY8v6c8EbW8BArz
F7+pOxwButmbnfQRgVg3/QyXnoiABPVtYu8wL4vym42430XAqy1nqNmGBOrt
1aGdm4sAA3JO6KwjgXgPeNqfX4sAqfXUkI5EAnWMl/I3CUYC1/6KMINh/Lz7
+/4qEo4EgUjDQpZ3BFpgkn2ZKB4J38OfBbTNEWinTFe0qVwkdDmwK9CuEcgt
bYa6pB0JX+VIxhs4L64J3a0bNYiE2k728034fU5/HJjSahIJJefPKDZLYz2c
o1VIsY0E79gPG0Y4T7Kq7ss9FBgJrQ2fdSNcsT6OfwxkC4sE2cTcES1fEh3z
v6f9MzIS1I/f9JkJIZFtvtLfjguRoFdwONgrnkTfpZkGK5IjIYfO18v0Eoku
9r6oSL8cCU/mQwpoMkh0/7e1pW12JMzEMzzLKCCReprQ0VMFkbCTI/9FSAmJ
JoQ+M4vdioRDNlejOO6QyO/xg0mO8ki45zR8yO0e1lfjyIY/lZFgHKChGoh5
eGNOJX3yfiS8vvBeWwrzUDx2i/vzR5HQmxL+8XYL5kll9u5r7ZFQt/U1cRPr
9YKKw9fIrkjw7X/z5TDW87hx4eeOvZGg+jyd2R7r/U7/pQKtV5GA+uu11V6R
qIKpIVRyKBIMuITnhzEPlfJj9XePR0LGKVHZnZiHg9IaB9eJSFBmKLq+jvni
1su2PjsdCVen2K5kYv6s2Y8M932MBEmRD63DmI/pv/Oraj9HAl9D1dgTzKsD
aS4Xsr9FQvm54bsWmGdNQuI2cb/wetdy9ufgWv/xDxm31UiIYshTSMD1jFEz
qz5NFLwsfczFh2vK3PlZGcYo0Bz6NmOL12ON1Wnm2RIFDL+8VnTw/Yo5d2TS
sUeB9tx06yzmdWVJy67TO6Og4FPkeRq83wZp9+xbe6LgSX5AeNMgiZ52cPD+
4I+CgEzu6zswD18atRSoCUVB57LdBOsLPJ9Jt/3XDkeBf3y2Wxnu33s/jpL3
ElGw1UXwwizu79J680FZmSgYLszI7XqCz5/qVpEgHwWTZZVHdfE8NvFxiI0q
RUHRDbnP4Q0k4qhsrj6kFgUbkzWXDR+Q6HDv9rpu/SigfT0uQ1OOeWfZLLvH
JAp4df4YEsXYr8y5NnpYRkHVgFKSVy6eL1Nz6xbnKBBnRa0lqTg/XnNVPuMR
BWoB1eUmCSTyEdreedcXf/8iY1ZbDM6vKq49uuFRQPUw9X6Nn+f7MduG0tKi
IF1T4aasLu7fb+dPHI1RcJdbdXponUBcCezeTq1RINhw42YZ9puCnE2LD55G
QbnZ306PeQKdkGb/YfIyCu519nH24ffVza9xPWsmCmx33XDwqiRQ4LrT2Y9z
UWDma+glcJNAMalsDMcXo4Cug3Xzx+sEyrzrtHl8JQqWgmn4y8/j9//j1p08
bNGgohp6PtCaQC9CG7K8dkSD5Z/G3RvGOE8yOu1p5ooGWYXB1kdaBPoq2MBv
IxgNgb73tR7KEehvrWNxlXA0qF/nPv7/z2eZVLYKrYtHQ7VHKH3yQaw39o6H
C49Hw+j8tUMG2P8Lf2Wt/KoYDUkVpc+ushFIOqZeAlSjgeZ+50s+nBe081hl
pvSiYe8nr9tbcb4wFa1/dPR0NFyqKfhHWaYi+yYH+XMW0YDf8B6Zz1QUNvZI
SdApGryauYrKJqmoCETO7nGPBiUV0dXGt1TUW57/lN0nGg4lf/Tmxjz9vm07
E1NgNLQ+Y8/uxTzlDY/XXAuNBvhyd3M/5umpqd/Jy5HRUHuER2If5oGvlteL
ubho4D9ueaYb8+L6fZL93YVooLUS6enCPGnfY2w8nBwN4oRo+h6cVz+d7crs
uxwN+14IP+7EeZVj/vjok8xoWD3OItCN+apgXLmnITsadMntKUKYXy5Ne62r
C6Ihs2970QTmW5rA1YKSW9GQJl4wNY/515DMNJVTHg13Kzw6THE9tRwueKUq
GmSc1M7x4HrLmS8uibXRIFoVaKSAa+mn9uXR9dFgazUg1/D/36+KDs0HNUdD
nrirwGW8fsJVDXHPJ9HwqOHERDvm+73VJj/7Z9GwVr6NRQ/vb8xJotasLxq+
bnmNpPH+6fqLf+gORMOL6pGZQMxTURlOOdXhaDCrYlRlwec3ybsYLj+B+6N+
JmkV+41ohrXHR95Fw/acF09VsB8p9fZbPzAbDbkXmSffvaCigaFp4P0UDSFB
fvdev6aiPwpm5zkWo+Ffqiexa4SKBG73dDF/jwbe6YV/VRPY32xVZN74HQ3M
iTYZ195hf0IIpi7QxkDQioCsAebr81PXX00xxYAytaecD/N1qWoLxxhLDJjw
5p889ouKVGO+ZXVyxkByj5OvHD2B5vjbivIPx0BRA2Rp7CPQ9kSpmasSMbDU
9vTWXuzvTny9fSBZOgakj5rmi0sSKKUt5U6oYgwcjb0pMgnY/9lb1RkYxcBg
iv4XPWecR7tf/DplFgOOpiIH430IFC+pLK9wJgZGqj96jYUSaIRGuFXYJQYc
NrEavEzC/rP453Pa8Bi4MEEezazBfnY6/e2DohiQZ5zRvY3f/xgJUbErt2PA
tTB9FwMz9vsRXVG+d2LA3jmvWG871tPtf/kO18XAGcU+hWuC2B+Dk33B8xio
cWN8XaqO9TvlX01kfwzsOnaygsUA55Wx67SWr2OgjW6E9pQ5iaL8+m/ueBsD
b/yTOEXdsD8vOPb+4mIMiBArWecwT/nnXx1z/R4DGtnmrpqYp2PHPBNUV2Ig
jl3FbwDnAd0XBYfWaWPhc1V9yF7MU6Y98pS3TLHQsl+5f/oWidqd33Q3sMRC
TVo2jwPOlzJrmzyDOGOhaljU4CLW20WNm02G3LFw7OgmNQmsx+VXFVgk9sbC
aFSoSVIz1tN3I2dYhGLB8Wif2g2cb3hFAyrnhGMhpIvhm2UniUZCWf51icfC
wXgOvRc4X6Z33Na7JRUL78c2u3zrxfmCDQri5GIh9PFfmy7MDwariUUbhVjY
9kksRBPzpfV2MDqpHAsuUUt0EZg/lG9s6VzqsSDB3xJoifkqpVgx+VM7Fi5V
cOh+wLz6fFH16BuDWLgc4X9kH+Zr6RBxtsYkFqyy2oaZMO/s91EGUy1jgcGG
mTkH19zeHIJetrFw4sv04/H//76ovjJI0ykWFmjq/3ThOo1eo/OAeyzQZ0/1
2/7/82CDqZ30PrGQc1/VswSvT5cb6TIZEAudnRv7rmN+Nn/gfNQSGgtf6m+Y
yOH9hErVMOVGxsLFWem4CzhPSsZom1PiYsEzi1fuHPYL8z2zZaYXYiF+0k9Q
AvuJEs7YFankWKjfdY8pGfsNW4c9Wtsux4LMpqDGLMxTrqoH2V+uxkJM/rSI
6TPsL1b05ntvxIJHmIrDsw4SpajNnSjPjwX5youUBZz31dPPXbpwMxY6uEuL
u5pw/qPyUh3LYiGN7oag2SOc/4OMovnux0LdqtuDQpw3JdoWXvx9GAty2dsb
zpSRaG5LAv9YUyzcKuRiHMJ8tb7Z1JbRGQsfTh7bT5NFIrXXgnTMY7GQ2XZU
IgLnyxDO4n/6RCw8us3WXYnzZakl/59r07FwJWdgrdgL832aa0nwSywY3rAt
f2dFIpc/TF/30sYB280/QWuyJBLeskY9uSsO9vtGcWdh/wqVTVbvuOKAySS+
2YckkIV++Ng5njjor/KlURwiUFLGrzc9++KgKWOY+3Ubgea5v/Wai8bB/a82
72QxP6tEPzQEQRwUyqquimsT6NmLEtndqnGQmnV0QFaZQKSfU13TqTg4Hkd+
8j9OILa6yXu0OnFwxfLe9oRDBDpoVih+Wy8OipMfX3DbSyC0YnNX0zAO5Ob+
bE7cTSB/hbell03jwPqi4rEUnC8vktlC0hZxoGv/Jj8M58uiOIubI1Zx0DBv
caMS58vXncP5fPZ4f2/rHv7D+XLeNZPniWMcfI7ze8k/h/V78+lsZ5c4OD9+
3fHqNBVJ6Q1k3vWMg3cVYeWxY1Sk/TWNw8AnDhy3/nNcfUNFTlf00pf94uC/
Cs48HqovCuCllCRSKoQSka2NZH8H/RCVVlqIKFQUoqTI7PuQpUW2LFlKKUu0
SEjKUiRLzRslUZGKRKh+x5/nY+bde8+973zPd8YbrtnGq83oP2cNZWQvBEeB
hU+u8sx6ERH/+jnPNBTXf/2LR2KtiLhxijOLPBWF9elss+CJiKhWcmBFhUfB
oh3syi7koej+DEnNCMzHFw+HRPTNYfcn1KfnomBOwuwjxehrslPoU45SoyDb
LnbUCPmjlW4TKcuIgo8cpQwl5KPVhqkTt1lRsPqd+5A38sql59HpXdwoGHhx
Z5MCxsfYkSOj/Ciw+ZX2URdjlq5laFJ0FNRUnnk56a9p9eODRGwUJJwyHOZO
+uKxe4Ef4qPgHy9VoQXH84hwb9xzEcerGWj3Qt7N4E/Rf3k5Cv3ufPJG5N3N
xAyOXVIUhC71e8FCf96Va9f7ICUKIrW6H6gg7ybuft5geDUKRsOPxMx8JiIy
a/jpuRk4v2OlO+wxX06vV01Zei0KHoZrK7zFfA5+aHa/kBMFvs+EsY8x35cH
Q+/LXI8C741JF39jfwJTlZRo+VEAyQseUEQiIlrNo+X4nShI/Lrsv7M9IsLY
QGJtT1EUTNko3tbXJyLE5lnRbnejYHrsny+T30/q7+lz3PggCv7m63/4/EdE
vPIV5jwqj4In1/KlTkxH/pxcM8P4Me6nbdphy9kk8Szu1ONlNVHw7qlKAl+J
JHwap5lMvIiCmNDVKi/w/M4hryUEN0fBlS8MW1U830V9G4c+tUTB8rqm+Zew
H5w2K+bm644oULm3TF9qH55PW5Xltz7g/Zdcmxx5jiTstz+iLu+JgsFmyd9i
NkkMeHq9u/IJx0tufLwjliQsI3OusL/i+hdqtgdkkcSbUqN5XiNRsFKatU26
niQoT9uOt//G9afeOlyE/e6K1vCGLRNRYKmv5bgH/fTUUAXbfCoFVoV/vsQc
RD9dufmfwmwK0OyN7RQVxcR9i+9uvDkU6Jpu2Qnop15OcfemzqWA7Gu9WCf0
09t+HaEDChRwl4vNGTdHfmYc6n+qRoFsj+vcMHcx8eu2lKOVOgVutV1leR8S
E8kV17OLNCgw8czxl3IA8oH84XV1BQUa3ltf+Yj1Kq4/vmKRHr6/L2fdT6qY
MBtfryY0oIDajGOzazhigqMY2RG+lgJXbrvEXMd6558RK6O1jgK1fwZUzJJx
/JXZRNN6Cmj9Ux46hTxdU3Y/+KwZBYJjDnR7IU8VNrzM0rakwFDT3TejN3F+
jd3tzQTOR6nu03r00449v2dH2lDAL07CSA399EH3HELnPwpQGj6r5qEPpRxf
FtxiT4EnfjcWvEFfihozzjrnSIHzLx4U3ECf8mY4tetupkCYDpm3FPlgN9dz
dqszBR4c2PbeCPmx4kqIFWU7BVpzX+z81CgmpLU4Qfq7KEAvH11hhvz5WpCc
2eZKgaMn1LN0kE8vze+0Ufdivu12GJUgX+/U1EivdKfAo3PWhzqRZ/Hb3lp2
eOD6Emr7MpF3p0TfAuleFLBZ8PzKDOThXt/pmasOUSBkm/Kx6RhbDCq2vfGl
wLbevsgUfP2SCANp5hEK8v621Gu8noSUjeWaAAooPU0MycHxumNdAkXHKTBV
+uAWJZzPU9WjGaxgCqRJVWitwPnm5ZxrXRtKgd2MNQ2vcT18w/hZ4lMUEM5Z
aqWB6z1enmPBCafAoFJKhPzk57EbHx43isD5nBwvvor5MmppSu88R4F98Nzw
NeZzkUfPay6VAoxZrw/lY75FIXIW71kUWLQiwGQ77k/5P43jfC4FRB2DW5bd
Ql/mmqSvF2B+r52enoL765N2QEoYS4FjetqRaXgeNuqdNDdNoAAR8PGq3kUx
oV/CPdZ9kQIBts+0j8aIiR91hS1myRhnWK+Tx/PW4lI7syeVAgdjlL+fDRcT
Je9FZufTKcA5svlQdjD2fyOSV3uzKeDSu33qBi/s3zR2B8TfocC7L4NHvlsh
n/P904hiXH/XTdlr68REnQnl1Ze7FJhzSd7dUB/7rS15ptYPKWBV23KvC++v
xeETkgNPKXC8oDNz5DtJrG5KS7EnKdA+3y7GMJUk3jbU7u7ppIAZdfa2/xJI
gvn8+zxGFwVm5utO+PFIQlQFrMpeChwpS9v88xTyruTdcctBCszz3jl+Fv3T
sFBKV/STAmJXM4corDfiW6u7w0co4C+crnEb+3Gj3KjdpRMUqGMfiMhB/3x3
Zam14UwqlB9SlfpvLknwLjmMN82iwpGb43tkZpGEcUJgcaAMFR6LmO5KEtjf
Cyt0bspTof2Hwj/ZYRGxnvfpwyYFKmg4qaVMDIiILtbclL6FVDA5JRg0/Swi
TCie83RUqJCR7M+9IRYRHyLY9U/VqFD/+PaPjx3ob+EFTB91Kog7Xmw59VpE
mJ5qB0lNKtzK7Dvkhb7TfWLKeIYWFW5mD3TkoA9FB64ottGhwhUpaf1N6Etm
AVuPv9ejguHJHfc3o29+PBymE7WSCsNBGtU30bdifNI+qK2hwupFqh6ByFdz
79rkh4ZU8H/4OCoO+drj8d3VzZgKtAXpvxWRZ+fdFOeNm1Dh8PTFQVORtxZ7
oP6yORV2+xQGTPpe7y4/pokVFa6rt2z/M/l96vYYaAMq9Pk7OE8+/2HpXDoW
akuFd8dpZzgYf3J6V6RgRwWDQu69Q3i9OAep44UOVAiUHG3PwvGs/luts92J
CkERR45M8vOz9e4P3zdTwc6yv88Z+RlvFZUcvRXzWSSVVYr9AmGe47pyBxWS
Pzg/omI/8WX9S/mGXVTYH2RplY/+nWA0Wnd0NxX5GjJujPyENUuZ0vtwf55U
56khP/sMHCDXnQpZT/+89UJ+XtANHLP3pMLlNKffU5Gf/RoVxxiHqFBWHvZ1
I/Lz4tJPKzT9qLBsicnnAeSnjercD5VHqFC5OFu+F/l5aaGn65RAKqx93/f6
6V/0x/ls+dRg3C+/81HXJZFfcgV1lqFU2F7FjGuXIYkNs6bAmXAqWMYMPp2m
QhLfx1NX/KJTwUs7UdvJkiR0D92o9GVRQbUoa63gP5I42Fjq1sGhwiarGbW/
N5NEe1pTzAMhFb4v32Jn70ESFf9N+029RIWJk8uHDtBIIjra55ncDSqs55zX
GGgkidrRYG/KTSps8PF1PdFOEhJe5/4MFlDB6tQgZ/A9SZw0urSmtZgKrDL9
iOafJLG/49nlpEdUWGETFlOtJCYu2bQaylZSYWjLkqfVy7Dfv97VcK6aCtM0
Zihm62G9jxyf6v0Mx/ftbpphif27hsERnVdUuKAaYNiLPPTjm06/8poK1eMn
Tt5AHqYP/5ci047XX2XdY4U8XFi7v/mbiAo2mWL5SuTh1jVH/Q90UiHndeb2
m1ifuImnZrx6TwWfrVrv9yMP//rHmJX0UCHmjbWjJPLQpDWpRfszFZRLHZeN
XBETwUTusct9VDgxonc/C33hRk6x1OwBKmyzuXdYDn2iR74y/ex3/Lvxw/Nr
0TeWnmm0GBikQmmsfemc28iP7jetHsNUsH0w5pdaLCYaSoakbceowKNv83yP
9XnG0ilZRRN43rVd7aOxfgNHhtD6RwXh4mKZb+ib4YOKHRen0uDED5WKf+ib
RfuWn5g1nQYuac85FeibA9Vr5pyZQQNj4815q9E3V6y0yu6XogFZ9i/cGf3L
66Kj9f7ZNFBKehGggrxJmuL69sUcGrjdHp9zEf2z9bB3qPVcGgQ4Hv5Xjnya
++q4XOE8GqwsbJ0Sj/xytDibq7mABvufn/m4APlGz2LbXlhEA0XTT1cm/7+1
XDaBnKlMgymzXfWWYjx66uqp0yo4vr924ST/1r7Pl+9To0Gjqc0hMV7f3/He
dTd1GiTyHVMf4/jvV5ksnqZJA9GZV3NW4/xcFpRwc7Vo4L2thGk1+XzNmOGY
sw4Nii1r3n1FHlq/u334lx4N/P3k5hC4/pInqzqSVtLgwRyNWYaYH/3r+Q62
a2igPM9x7HnV5POgeqWfDWmwyJS2XAp9fuHJXO0YYxqIH+370XdfTPD2aV80
NqWBROhY56m76JPWWTNIcxqoXouIzb8jJvpmX/2oY02Dmd539qjmoG//UNv1
0pYGDQ+/wb50zF9rUvVJOxoseTE3xjFJTFRcvZRR5UQDX/PlVnbRYmIda+H8
I1tosPDcgL0rG3nvH0+du40GrtcezdagiImE9TEH3F1o4OlSozEcJCaONLCW
jHji/pS+VWnaKiY670hGJ3vTQJBV3zrdQUzsvET7a+tDg751dZbShJggvM+R
MUdpEB+85dcF5KPC75NXdE/SQI29NnnBDOz3xD+lm8JoEGZMrTacIIm/VcHh
p87QgBYj99QK+9XPwmN7qqNocOeNerUO+mi5ps+i/TwarOiWqigrRv5JdzOn
C3E/DGenZV4niZxvB37lxdAg8gwt4/JVkoi75/56JIEGeRUqLwsEJOG3dVfc
+TRc77QBpTEfkiDXvZIwyaDBboXhoCR3kti+eFuwOIsGdyPeDBzaif13z6Zt
etdpwJy/LOmMDUncqXte0ZRPg8H3GpWNpthv33ZYHVZAgysOkVEua0hi3tkN
ck+KaeCz6VzyXHXk9YHKyKOlNDiSKme2Ef3hjx0MyN+nwU3q1e5KeZL4JG/R
sL+CBk9c64bo00jCfaTMQrKKBjcM375vnhARzaL1N64/ocHwB+qQ/y8R8TDb
kDf6HM/vOoeQ6C8iovJ3wpugBswP17j85EcRUeM0qtP3ggYXf84OznknIp4n
7z19sJkG+jZeVlpY7xu/PaglW2jwSJxY9gN50Gy9RNG1jQZLNy8/INMiIlrj
KL4vO2ggJ4i+dOqliHjz8UPJRhENDh1qzjVCHovX282oEuN8766v2oA87uLk
7LJ4TwM/iQNDOcjjnrfSWcUf8H6If2Hhhfz6YhDwc2UPDXSy6UFByLdv517Y
5nyiAePR6a1tyL+fTWvi1PtwPsFKEfHI51GN+K7ErzRoXvIhJBd5ORH6a43C
dxooqDy7thDjKbW7KYJBGkQd2blVhHydrnz/5YxhGmzPvZ46hrGUv+rSqBEa
gNzhq0H4epnyc8d//8b5Ob21mPw+V35uV3nwBA3mrblGHMbxF3ptkO3/S4O6
GZ9cP2O/oFx0zf3QVDrUWMgueIz9hNqMWfniaXSYHx3b+w19dtnuoxOuM+iQ
LqOlHoo+q5XX4NQkRYex6IXDzuizuhOrrjjOpsMbVnjYOeTxyi2xX6rm0KGv
wSddAnlsmPbT1HIuHcRN77a0t2K/NOjCKZlHB2JvheG/N9h/bChrX7WADtdP
CwZDO0XEhk8Rp5Yp04H99si/TdhfOZi9q7miQofIAcZwLvZfm/g2CxcsoYN3
tuvKrT/Rv1fPLJ6pSYcQCZO0wCnoq2Exg/0GdMhb9Hn8yWKSOPJ80NpnNR1G
NxkvWatBEsdUdp3vXEuH7eXjqa91kY8VSqub19Phmlq7UakZSbCkMgLuWtNB
23SKfYob9oN7JR+u3kAH631TKGGHSCLmhq9Mnh0dDJv+BZ44RhKXtupfT3Ki
Q2Pmep1HUXg/Xir+RNmFceAxe5drJPF8Ra33psN0KJJW77uL9/eFfkuzsqN0
7KepG4fGScK7oHCu1jHMb0j4SVVJMTGxPvXhv2A6MJ335K1dJCZW2Z9cVHiW
DrLSZ5PlzfDv0v1fl5yjw2ey1jPERkzUNh6o5lPoUGgR0n3LEfnisjnIh0kH
lTwTpey96FOHNOuUYuiwYU6zyY4wrJc6iVeZsXTYeuHtZZNzYsLgq1zYUDwd
uF967LsZYqImZFyz4TId1JMf3WbGor+aBI2bJtHh1U/O7dOX8P0TPU3XUuhw
8ODeKL0UMfGb1hwZlYHruySh8gTrcY29w66vWXR4dudqc26+mIidXa63Nwev
f+26lT3Wb48XhhJP8+hA+j6RSypBPsTlthvm02HFRapM9j3klcuSW2m36HD3
n8s833Ix8UQ5gTHnDh0MkskFb5HHsWJpt/AiOrTlzdSQQN/anx61trcE11f9
w/0t8kbX55fUzjI6/P61XMIHeTSi499ZcZ8O1dXGh64ir6q/vi82KKfDIYn7
3/jodzG3XfmJFXTgV8suX/FSTLiHNnjNrML3X6hOC0b+6ZramoY8wfU/X73Q
H/n4a6JU7v1TOuyQ93VQQH5WVazs2fwcz9OydO2jGMfQMx/cq8f8pw3fDsTY
zUE5TvsFHSgT4581MdaRiTkc30SHijk1f1iT13shCVNb6LDwdeuaRByvMu7M
wmOtdLhvq9+5D+cT7fqj/007HZb++RvagPN1W+xbZf+WDqXvRRHfJv27U3S5
iKSDnBcrvhLX+zN9e6D6O8yH8/Vj9rVi4rFPrZ2wiw7/5ju3RWK+hLpWquPd
dPjWJLh1uBL7oYHCId9eOtDJ9d+kHokJrTs6z1s+0+HrfzXp7sjjodDUNOt+
Oij+S+vzQx7z/3A3L/5BhwW/SvVyboqJ3Y+naLKH6HAyvL1OjL66nHFy7Ocw
rte2ZGdTJvYjMl7ZjWN0+MvR2PP9MvrpYtOp1OkMSPkrG/Af8nZ039J8jZkM
IDbrSA+fRt4nzdzzZBYDHOoqDh9CP52r0logJceA6rfphnHop6tVTnhGKzGg
TppzPBjERKBK/qOklQxYnLP8xE/sb8Pc4o9arWHAKUWTkEV9JBGVdGbRO0MG
pKYvumOA/XCMiuNxDVMGzPvmqmDTQBIFKr1qebYM2LV74bljWSTxTUU98u5u
BkQEHVEd2U0Sv9ykdPfsY8AC07n//XZGXid9ez3mzgC3/jxpbXuSkFUtN7Dy
ZsCXAn/WPGOSWOie1dF5iAE7N97NaDUgCbVkPoPix4DSxuDlr5aTxErVfWR1
AAOoFVlelIXon+42HJ9ABvDC5v0wkSMJq2SddVInGHD4lRXTSIoktqiO8p3C
GPBk5fxTEuMiwsW90+RrOANMzNS/dGD9259c0y2MYMBC0Iz/h/XxmGqCRTMV
1/c84oJVt4g46X720wkGAxgH5uu5YX2NTPaOX8BmQMiz1mMvsf4ySUe4y2WA
TLOsQTLWZ6Hq2v7dAgYknP+lUt2M/uSudGksmgH/ySa+tMP6npI8ZUNSLANi
3Oqva2H9v0b2frNMwP2RqJY4hHy4qfriSudFzEfChiEJ5GOJe4k9JZEBQV/f
saYiH8uTk4eWJTNgb4RP6gHkYw1JT61OZYDN55vfNZBHjar+Tj7pDAisviM3
6Yut7jtGZmYxoFFP/0gT8kycbJaRm82A2W0H7B9O+i2p7uyUxwCDQPFTGXz9
V9VZ4/03GGC72urjo8nnZZ63MA/cYsD4Op+bFZO8O5U2r/U2AxTPOlctQt7d
1vBPcSxiQO/qF5XVOD+Hl+t1H5UwwLW/zeApzr/z7LQSwzIGPBi65qOG/D+p
88I65z4DnnvVZD3D9c9pTWxQKce/v/q5vBbzk0n12XO+AvMVrPxDEflnvmrt
R8kqBkQuyxi4h/ltfvsnMPwJAxJVtSUmv888zH42MfCUAZfOKtV/FSPv1yWw
vZ8zoN/C6d+ZD+in7z0V2usZ0LmFKunyCfkq1E/b9IIBH+ffdwn/KiL29Vbd
XdfCgPOdyqOJoyJiMC7aNq8Vz9fNHSfj0FfZsO+FWgcDVNmLXzZOJ4mSy4M9
M8V4v5kGpUjOw/5tk/rCN724/6fL3xiuIonc0f6rW77geOr3/01bTxKQVWpQ
1c+AnOzVEtMJ5Odf5/9u/GBA7NLFjWy8H54VRIZEjjPgTQqZ7BJMEp7ujlOG
/jDA6lP5FtczeP/MWsj3ncKETftkewLpJKHpnZ+xVZIJLyKXXui6gPfnAlHz
MjkmXD5ZdODwA5JYH2665ukyJjgSugabZoqJRi3Jh+bLmdAxEM3ymysmDr56
6VCgzQQ/ja7r/uivsfp+npf1mXDkM/3hUvTVAfGF6KPGTNit0lD0eZOYYPC8
Fr8zYYLt+OvK4Z1iQsVkZfZOcyZEf86of+WGPnX+SbklMKF/YkJ24qiYyLL9
+VXOkQmG6azfD1hiIsx/jXPZJiacqDk6JUWIr084VuDlzIQs5br5Rgk4Xs+n
4OKdTGC5nVh1En20Qk6rZb8rE74s6epVRR+NNfFeJ7WXCSW7O2YHo48ac8mR
vR44v4vJZxSRf1KFynumezEh33tqiC/y781b13v5B5lg8/GevRvy78b0hMWu
vkz4aUhkDiP/zhk0n51yhAnzr77dvRbr+XYXOXGuPxPifr1zkcd6r3luE7Hj
OBMOvM68fR558CubkzYRxASJZ9TUO8iL2pc1U6+FMIER6HP6BPIk8fc0b+dT
TBAZUu6/Qr/zX2ZdPXqaCS4ntCReIX+snCKXp59lQmzFuTlByCf5kPtMp3NM
iJoiepSPcXfSaO9PChP4xesUOU2T/rduYwod89Wx3X4axuyB4Dx7FhNkVmVc
UcHr7V1UMPsHhwkR2yyPT36+qg9f/RP5TMhzGdy5En35r59uo200E2LSL41r
14mJl+d9V309zwT7mY1rqnB9GfcyYy7EM+FpyfeeKTVi4uSH9z+Ii0wI9zXW
7UKeOcgs2fH5MhMaFZ/p+iHPlNe5FcUmMWHVDu318cizfvfLCyxSmVCQ3/fA
F3lWzmw9+fEqE5I10hwnf78g5tb8dmEmExwqqpizkW/rpgoT3+cy4ZL1frsD
GbhfunXj3Bu4Hy+/5Mcl435tl3I3usWEi3xHZthFMRGZSV3CKmKCWYhSrBdX
TGxteBS1+i4TSt9pnPKniYllvybed5QxIW3pWce1Zyf7pVOZ+o+YkDOnw2jC
X0zI9R3VaX7GhLXcSEqbk5jomp/LPVPPBMUtRlGytmKiyKKnT/MFzkf/5gVF
7Ad3Cz1vnmrB+8nfc0ahtphIW7PLULWTCXRtSTmPqej7YVaWfj/x/Hdor8u9
jX44xzOy+xfu923aq905JPYLlEeev5nwgEc5NS8V60NDtfWev0zYU9j64haf
JMw1nOwcpVjgeE1k0+NHEkml/qwaaRZoNyuom3oiDzcLa23msCAyVf1OvitJ
VIQ1OZrPY4G127XaGcjHDY2uzvoqLDjEq1B9ok0SWd6nY3LUWDC9pZ4IWkoS
M34nNmmqs+C5zU+rneiLtRriHapaLAixP+1XO5skdMr+xV9ewQKd28I1+yVJ
grtFvXWBHgt+7c9XMPonIjafPrhbdjULvMP/O58zhPyRZV7mrmWBvF2EnhPy
cG5m9psZ61iwSXN15zr0iSDTZ4tp61mwJU8+9Ajysbnxi9s/UxY8mrM45Qvy
0fCgTMoZCxYs6AwYuvtWRMT/NugcsWJBmdKGn6/QH4eFzktDrFmQsCtiKqA/
umgGHfhuy4JqSZXgP+iPd8ti0/3tWGB5a9bxOY0iQtG56MMnBxZcv504O6hO
RJzufq15yIkFbT8G7XSQl29Ojxx6v5kFNptlho2RN+ZyStnuW1kQ9qyQTHwy
+byH2aeO7SzQv/Y2bRfy6q+pm47LLhaEdptX+SI/PV5EHGl2ZYHtued5Tci3
ioOp17fsZcE940tpcRgvG6vof+7GgjF5s8Z8jGnRXQb2HiyYHUcnluL7uzWn
H686wAJKXtG7Lxj/d295AXEQr6/OODcHx7/mbP/jvg8LHIYtnrPQB2d+9Ftr
cpgFaj5y2/bUigi/cO6JoqMsuG3zm05BPj6Tu1G0+hjuZ6t3/r9JP8xqGL4R
yILv3rMlXiEf+WbfjHVOsGCNsV7OGPYXX1/MDcsKZYHiVpISinzccmhtmXoY
CxY+3R9lg3wsGNsxlhzOgsSAUAdP5GPw8otnL5xjQUdOUCW7V0S8ulf6cB4V
90NisWtMv4gw2vrmr5DOgoiPVbldP0TEr3BVCovDgtG2H50ef0SE61yichqf
BW4VKe3MaSRRmuU5LUrIgqTu1NTvs0jizMsMRlgcC4ZWKt2hLSKJzLb2zZ8S
WFDOK/5MUyOJRvGchbsvsaBAtfvIfeznln09dW19MguO3Ry5VmOE53fWpqe/
ruH5TottmbGLJBRsf0qF3mPB1hY/69or2N856jR1P8DzTU1V+5tJEr7b9l/e
+YgF5rd+N1vdJIl7HrU6RtUs6DQV32qpQJ6eTXIcamDBuaTC8D8fSeJG8QZ+
0HsWfL6olp9rICZaH5ze+f4DCwTBKXHaxmLiX9VNlW09LLjhUFxNsUI+NCvm
r+5jwcifpMSKLWLibMfm0LSvLOjpebQuzQV5945qOfc7C87fGpy2fT/24wP9
Dd9+smC797FXywIm65X6BY8RFgyM7NtgGSImnP647H/xmwVUHbnmpWfERMrs
xwM3/7Kg9vAtb3M28mXerxK1qWxw1eI7HUNe/lDSOyecxgazHzvDveLFxIYV
CXLHpNjAUp5azEoVE8dWPW8jpdmQPn7yTDH6wkXjf6mb57AhrpXzMxl9osLS
yO+hHBtGd0MZgfX4y4bDqw3mscGFaDt9Geu1wqaU0SQFNtxtD/qeizy13PGq
QmYRG77f6vp1HHnqs1eKc1aJDV/9dkZ8eYj1/YDltv7FbJCfPpeniDy95xes
5KaG17+lSfyuEhMfjme/r1vKhgVbpr3kIV9kTolyzTXYUEQ/zH+B/DGOlA++
vpwNV4K731QhXz0ZdmaLV7Ah7HOAmR/ylcs/I8HTZQP9r4PtA+RZUVzB8zF9
NkgxZ2Q8mnxeNPFj7JFVbKgIeLc0GHlro8ZfLbeWDVdVhJrtGF+7urax0IgN
n7S+NIgxnr284+ju9WwQvWvQZ2IcmHNu1h9TNlyQnMlsxOu91tPKvmrBBr+y
eMNSHM/sVv0GO+z6Im6WpdrifFLXnuj6Ys0GTdlNR4NwvtNLlKKiN7Bhip3j
Vhtcz2HTClUjezYsS/usfRf7icYHPvfbN7Kh79GrLy+Rp4YwZ0/EJjb8eW5e
EIM8vVRV+EvdmQ1vdFbcHEGe/rHbG1+zjQ0L49kmM0vFhNfzKWuP7sR8UU0e
VxSKCb2mzQFFe9jQPc9Q1yQP87/zp/QeNzaMW38L/437/bMtMefPfjYcGztz
6yieh3Jx7we7g2wgQkKbjsSJCQ0vIaXPhw1k8EmZCT72Ex+NlsQcZsMuDZlH
dkw83/2UvR3H2PDwqMyKeWFi4u7xFaMRQWwYM/z942Ig9ntDjQnLQtig0JC2
6b2fmOj5vbjp6Gk2DHstffBst5g4PbPE/i+NDULFsAkbvH/EXLeP6Uw21G1a
Z2CM95eN7DSaPYcNj755dk7XxPOwYGt5jJANp3ziB63lkbfLvhhpXGYDTbk0
+PIXknhqqbbM4SaeD3Mjo0a83/UfVz/qL2DDiqZTgwtj0T83HHU/X8iG18ev
rjvBJom9TqWX3pSy4e1vkxMhoSQxsHu7XEAV5ksQFDa+lSR2iEZvyNdgPg9l
T7dxwHrlkepYUssGm/JR5l3sx6k+/Yx/DWyY6//I1gL79wUhzInz7WxQG+Tx
JORJQuqgfPist2yYuCRcxJMmiYkdSSNRJBu2dynM24Y+0G14Z/B4Fxt+xs7K
TUZ/aNewDOztZkPsJwvbFcjT+vm1X/f3ssHuW4v1KPpG0RD5aXM/GwKE2WeO
Iz9zPvj5PBlgQ/jyWTOU3yGvXg19sPjBhvXHHp6fKxIRMVWRB4qG2FAf3sTb
2Y78KZzVqfeLDR9UHtr2Ij9PZsS7ZYyyQTlxdPBZk4g4ErfkjfI4G0rvOFT+
QX7up+W5xv5hg/mNa3k05Mn2E+tez5rCgdi4pES3yef5vSu2UyQ44Ct304OD
PDLb4fRydDoH6Bnns6WRpyttWzcHzuTAi6y1cu+RZ+qGB+p6Z3HgguDn7Em+
KWj0O3jIcOBR6swxIfJVav6pmlZZDnTGlC3yxXhCQmLDFnkO9PGuMRMw/j7I
f/xkPgf48y87KuP7u7sWEZYLOfD+cvHGYYzbm9MfFClyYI256yYtHL++0sBM
fzEHphJXJm7g/CrulN7NUOWA34RbLxvnX5Ruu27xUg6YqfedKcP15cQ23old
xgHvzrDZVsjLJOqe1dLLOWDXola+AHkZHdydT9HmQPGVk4XEaxFB9Tqu91uH
A4Xf/3y7h/k9uX0sJ1CfA39b8ggm5v+IDUPr00oOiNO4p9Nwf/avnZvpsYYD
7LA6PamPk783fEW9zZAD7cy84fvYH9nN00rdYsyBQfZpo3vYP60cNE+0NOfA
pfPOkdG/sZ/oqllUbMmBXw+eir2w/1rYvC1BHziw6aJbwGnsz/7c9o1Z/B8H
LKzCOn3RL+uD4pi/t3BgbsSN2bPxfFYcUJsetI0DYRUrKsqMSaJoWy7l0w4O
cNYn9l6yIokrax6dbdvNgey1xFNyC0kc+fEluNiLA1ZU/QDDoMnfs7TxCDrJ
gfS9y81P3SMJE9LqjuppDui32V5LrCYJv43mks/PcEDy7trK8kaSqFE3ur6M
wgHdxXeMf3fh/dK8fOQVD/eTMUR/Ji0mblstc4wScuDf9K/v6Qpi4l2eWrL+
eQ60tcrMXqYmJgjaIlvGBQ40JKauGlotJiYMZ0UbX+XAa4v7Z4Tok3ppkl1d
GRx4Zbo2Yxh9cq+MxLroaxyQUnjnrnFITJR2j73pvc6BlECLizXIz96tIwbx
NzmQdjFqqzH2/wsfDkXBbQ70amdoHkA/CE3o17pcwgFn7XZLcYyYyJz6+fR/
ZRxoIv+GTv6/R0vAx/of9zmgZeKirov+Me3N+yUp5ZhvBT3N9nTs9+3EwY6P
OXB4ZulZwxwxceDOmye/qjgwdPCcvVk+1l+1NsWMGg44rUuo+XJbTDzivjrq
/Az3I7vxkC3yc+DXi/LxOg7sVnC6aoP8VPWul89p5ECqpu/SXuTnphe1B3c2
cUC2VOX6KuTnGfMnd6e0cCA4MURvcbWYyMt+LJ3fyoFdwTfzc5CfHfPL3fd0
cMDSZ7lnG/JGKupegaSIA8856+OvIY9M+kum3RFzoE7+78MFyCvf3YUu+99j
fktvhGoizy5U38qV7sb9KSw40YxxzeobEyU9HFjxqihuCfJvOCnH2fsznofo
rS2zMdaclZUu14/1gBngchFfvyP06vD9AQ5kdVzbVYnXp75PdvD7wYGDO03/
m/x93tubE68o/OTA/n2NuaPPcP/LLgxU/OIAY45ggSTOV04rzjrgN45HzjlY
iHy0io2OV5rA8/PVkT0d+4WAv7zeJ39xvTM20X8jH5OOsM2Cp3IhLSCXEvdA
TNS10gVq07nQe7nn2Svk45gN5d3zGVxwqUysvV8kJvYsDmdqyHBB2tBFk3Md
+cY62fFClgvdQxV9Qdfw/AwF65+V50L53Bvms67ieak/2tyykAuerXsYTgli
4j8Tv+UUJS40FLrVj2G/FZJ5MMxAhQu1VgLzA9iPNZ91V2OqY7wqea17uJh4
vjdgdLkmF+6pZfYonxATj00imp9oceHC6NsVSUfFRMHPJKakPhekLtR1DO0T
E0J/0QDdmAvNAxYaduibTm77HtGcuLBigbHGku8kYWN29LLGFi78E38wOdlD
EmaKZ05UbeVCy+a52ytFJKHbkqg9zYULHzr3e9o/Qx5tehNN9eSCje5uD590
kqg23+NJCeXC3lsmehK7SeKB0mEz9TAuFN6ZNurgTBKFI2EKj8O5oGWcs+O+
HUmkF16qnRLFhe9LO1VWY/1IPJ+TnkblQmzC4wSTlSRx/njpWWBwQUWUqXJa
iySi9NpXR3G5sHn51IF87OfDZn2SXirgQr/s9RfZc0nieO9I96NoLhSZV/d3
Y/+/P2PR5X/xXHAKilYyRF9woWifSL3IBYcThPTGEfRNj/WbiUQu9OQ+HbmO
fmGx2HXquVQu3CKPHzmAPmL02+etWjoXfn7VHJn8PQS9tpPF5ZmYrwMfor3R
X5YVM6P3Z+P15t78egj9RjnuwuG/uVz45VKSW4H+My/omm3KDS40RURYhr4S
EbOcS1StbnEhL73+Hx39copBzQh5G/ebMU/jR4OIGJVubYoo4oLmBOvJPfTL
758+Xle9y4Unsdy6LvTL3pphxsMy3A9W1cwjyB9xpqSn+wMu7AtuVN2GfGql
LjD7U84F1/3W8ZfQ7xo9lyskP+YCu7H4OWBcY7VuwKKaCyNflYc3Ylyu8l+t
qIYLC0Pnry7CuHhsZ/rZZ1xgHX/jfQ6vZ/HfRrdvdVyIk4o3iMfxKqMtF3o1
cuG3/w3xBM7H4c2aly0vuSAz669cGc63UVOLa/+KC7KLVS1rcT07jytvuPea
C/IqHk90cL1vy2T/6rdz4Z3Crj4R8s9r+rTS1De4vqInr98h/z5tGQmaR3LB
xPpEtFGHiDh2uU+P0ckFo2OnpdqQf8MfOj+OvOfCFIOb858i/yRO1+4he7gg
okVlcZF37KoH87d+xvM3obNrH/JOTvZ2Q2UfF5hXFdpOYP+jknHZOuc7F+Y5
6ceH/hUR6V8F48pDXIiKIJfvw/5Jx4RaLBjmwnBnzkYK9lfGDUd0Toxxwavx
8lcmnretI+byVtN5cDDQeI8p+mGr9eq6ghk8OBdzSfDRnCTc+ZoMjVk8yFvR
WPnIFnmnPue3lCwP2j+Ypw7tIAm6k/jdq0U8CDd4/J/MSZKQvtCcaKfMA6rb
xCJRJJ73dzU7y1R4wI5Tiq5ikURK6K3aFHUeuNyQjm24jP1ialTBYT0eLPhP
ID5dThL9Q8ui/lnxYMs+s/zomWIi2GqRWbA1D5J6OsaD5oqJ3+zZP7tteWA5
P8/BQklMzFD76fvcgQe2rJxbEbpiYqnDE+eE7Tww2Fr2wtcJfSW2bJbULh6Q
2f8krHaICQMyvyrclQdXiiMW9e5FHwm+sN7TjQeOizJCcw5jPU7yXaLnwwPF
iV8Pc+nob94NN5v9ePCAU9y7l4c+q2NoFX6UB6V6ki8rzyNP7/51exbIg7ur
b/3OR96pRB7sDzzBgxjjdGmDDOzXNzw/o3iSB/0dG+l7kXdezQmJvmd48KVj
cXUZ8k3z8riOXCTOT/fsjk/F2P97HCgrieLBPKUtA+WTv1+g9dRhP40Hguk7
Nlsg3w5/1W+XZGLctc7Ro0JM6BbF+uazeXBJZ3WnFtb7/vDRXzt5OP99Viti
kQc3rfczJwQ8YGU+9kp7in4mVb0gM4YHh+oWftuKPFn7QifLKY4Hq0VpmzIm
v59LiDYaSuCBT9igykXkT4nbcFXiJVxPJUNDH/l0SmPfDpsrPPhWkrrBC2OT
LxVdn5N5UMhSjTLFeKxAK/h8Gg/EN8Yl7+D7H5ziTzXN4EEmeXh5PV4/0mow
5l0WD/488VzPxvFBcvdSdg6evy39z3twfhL1D2+tus6Dtw+seJ9w/tWxGkRb
Pg9iH+6xEeL6mHs4jZEFPOxfxjracf0OS7+5axXyYOaS4b3PMD/SvTu/NhTz
QK+ppd8T+4P6/HtnQ0t5YJfa8zoN+wdByFIZ1fs8UI/1D+ein28xZ16pfsiD
H64J7kvQ3+dK9Ov6V/DAiPVBZfJ5oPjouxvvP8Hzor7MdDBFTLi4qHZ41fLA
9bqE53+XxYSiKs1Puo4HxydE3zehDyblbWHtecmDyNf5KlT0v/1BRQunvsLr
Hdd2KDqH59NE+VrOa1zvqoTFmeiDGU8+Vo+84UGAau37Gjx/ee/OSlz4yINq
p3M2hzaKCf/srvOWn3jw3/Z3ei9BTKw85qD+8Qveb8sCbeVMsD8Ynw9G33lw
y+pJ8kIt5PHC6xHNYzzgTjxgZE0RE083dYzKzuWD2zupx1V3SEIxSsOPM48P
AWm3unJzsR8tDGibtoAPLYVvUy+n4f2rLFEyqsSHjRGMhKtCktjUq3uiS4MP
qyuPn888ShLJyqFdblp8SA9odlrhjT64+dG2thV8mFeXkV2/lySii3asrjfg
w/55eVUUR5Joppz9WryeDyxz+a5ePZLQKK5xW23Gh0uzF6+4p0kSIZ/m1udZ
8MH16VD6Y1X0Q+esvFRrPiSOWXJOI/98qN+UlDfwQU/RM2Ql1q+SYlNOvB0f
TtdNxKpjfdut0ujLceKDYY1F0nP0w1xnxbZpW/jgQMw8Rsf6OEb1sovcyofY
i/cJOtZPx5IbxaPb+VDpq/OiDuvrlc+/NE/s4kPIfJcqN/SNfhXr+K+ufPAa
O3jD5D3yYitvmt9ePpT+N33KAVJECGivg7vc+EDWJiq1YT0XlyzpcvPgw5AT
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
mA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  AxesStyle->Bold,
  PlotRange->{{0, 1000}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{{3.6908206572282133`*^9, 3.69082070158075*^9}, {
   3.6908207322245026`*^9, 3.6908208029895506`*^9}, 3.692901160664811*^9, 
   3.6929012322919807`*^9, 3.692901325193112*^9, {3.6929013589201593`*^9, 
   3.6929013804431896`*^9}, 3.6929014211142473`*^9, {3.6929014817473326`*^9, 
   3.692901509944374*^9}}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["SIRS Model with Matching Alleles Coevolution", "Chapter",
 CellChangeTimes->{{3.6908068680689597`*^9, 3.69080688136572*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], ";"}]], "Input"],

Cell["\<\
Here we combine the models of the previous two sections in an SIRS model with \
2 host and 2 pathogen types witch interact in a matching-allele model type \
fashion.  We derive the equilibria of the resulting system and analyze their \
stability. \
\>", "Text",
 CellChangeTimes->{{3.693331771595002*^9, 3.6933318133273892`*^9}, {
  3.6933318617831607`*^9, 3.6933319217125883`*^9}}],

Cell[CellGroupData[{

Cell["The Differential Equations", "Subchapter",
 CellChangeTimes->{{3.690806885261943*^9, 3.690806889565189*^9}, 
   3.69080914164397*^9}],

Cell[TextData[{
 "Let g1[h,t]= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["d", "dt"], 
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}]}], TraditionalForm]]],
 " ",
 StyleBox["be",
  FontColor->GrayLevel[0]],
 " the rate of change in the susceptible host population density ",
 StyleBox["at time t",
  FontColor->GrayLevel[0]],
 ".",
 StyleBox[" We now allow for genetic variation within the host population, \
where \[OpenCurlyDoubleQuote]h\[CloseCurlyDoubleQuote] denotes the allele \
carried by the host (assumed to be inherited with perfect transmission, as in \
a haploid one-locus model or an asexual model). The host allele, ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FormBox["h", TraditionalForm]]],
 ", can take on a value of 1 or 2.  "
}], "Text",
 CellChangeTimes->{{3.6912534588828692`*^9, 3.6912534967779393`*^9}, 
   3.691266442583746*^9, 3.691770774777401*^9, {3.691778057261848*^9, 
   3.691778109308776*^9}, {3.691778141094942*^9, 3.691778156686186*^9}, {
   3.693332247352214*^9, 3.6933322940238833`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "[", 
   RowBox[{"h_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"b", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"h", ",", "t"}], "]"}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "2"], 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}], "nI"], 
        RowBox[{"i", "[", 
         RowBox[{"h", ",", "l", ",", "j", ",", "t"}], "]"}]}]}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nR"], 
       RowBox[{"r", "[", 
        RowBox[{"h", ",", "j", ",", "t"}], "]"}]}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], "2"], 
          RowBox[{"s", "[", 
           RowBox[{"k", ",", "t"}], "]"}]}], "+", 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], "2"], 
          RowBox[{
           SubsuperscriptBox["\[Sum]", 
            RowBox[{"l", "=", "1"}], "2"], 
           RowBox[{
            SubsuperscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "nI"], 
            RowBox[{"i", "[", 
             RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}]}]}], "+", 
         RowBox[{
          SubsuperscriptBox["\[Sum]", 
           RowBox[{"k", "=", "1"}], "2"], 
          RowBox[{
           SubsuperscriptBox["\[Sum]", 
            RowBox[{"j", "=", "1"}], "nR"], 
           RowBox[{"r", "[", 
            RowBox[{"k", ",", "j", ",", "t"}], "]"}]}]}]}], ")"}]}]}], 
     ")"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], " ", 
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "nR", ",", "t"}], "]"}]}], "-", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "2"], 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], "2"], 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nI"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"h", ",", "l"}], "]"}], 
         RowBox[{"i", "[", 
          RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
        ")"}]}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.691253503067751*^9, 3.691253558230452*^9}, 
   3.6912664349553328`*^9, {3.691433698197448*^9, 3.6914337015358543`*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"g2", "[", 
     RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], "=", 
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"i", "[", 
      RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], " "}]}], 
   TraditionalForm]]],
 StyleBox["be",
  FontColor->GrayLevel[0]],
 " the rate of change of infected hosts in class c of type h infected with \
pathogen of type p, where p can take on values of 1 or 0. Note that newly \
infected hosts",
 StyleBox[" must start in state \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] and then progress through the later infection \
stages, hence ",
  FontColor->GrayLevel[0]],
 "g2[h,p,1,t] has a fundamentally different form ",
 StyleBox["from",
  FontColor->GrayLevel[0]],
 " g2[h,p,c,t] for c>1."
}], "Text",
 CellChangeTimes->{{3.691253571135476*^9, 3.6912536323101883`*^9}, {
  3.6912664406961427`*^9, 3.6912664406961427`*^9}, {3.691778163089789*^9, 
  3.691778208755962*^9}, {3.6933323225075126`*^9, 3.693332378970742*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "[", 
   RowBox[{"h_", ",", "p_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"h", ",", "t"}], "]"}], 
      RowBox[{"\[Beta]", "[", 
       RowBox[{"h", ",", "p"}], "]"}], 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"k", "=", "1"}], "2"], 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"j", "=", "1"}], "nI"], 
        RowBox[{"(", 
         RowBox[{"i", "[", 
          RowBox[{"k", ",", "p", ",", "j", ",", "t"}], "]"}], ")"}]}]}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "p", ",", 
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6912536395194016`*^9, 3.691253646197213*^9}, 
   3.6912664370613365`*^9, {3.69143438687468*^9, 3.691434388871484*^9}, {
   3.7206181620324707`*^9, 3.720618164220933*^9}}],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"g3", "[", 
      RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], "=", 
     RowBox[{
      FractionBox["d", "dt"], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}], ",", " "}], 
   TraditionalForm]]],
 "the rate of change of infected hosts of type h in class c infected with \
pathogen of type p. Note that",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["recovered individuals must start in state \[OpenCurlyDoubleQuote]1\
\[CloseCurlyDoubleQuote] and then progress through the later stages, hence",
  FontColor->GrayLevel[0]],
 " g3[h,p,1,t] has a different form ",
 StyleBox["from",
  FontColor->GrayLevel[0]],
 " g3[h,p,c,t] for c>1."
}], "Text",
 CellChangeTimes->{{3.691253571135476*^9, 3.691253666449049*^9}, {
  3.691264981111969*^9, 3.6912650013940043`*^9}, {3.69126643926094*^9, 
  3.69126643926094*^9}, {3.6917782222242393`*^9, 3.691778241290526*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g3", "[", 
   RowBox[{"h_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"l", "=", "1"}], "2"], 
       RowBox[{"i", "[", 
        RowBox[{"h", ",", "l", ",", "nI", ",", "t"}], "]"}]}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nR", "\[Tau]R"], " ", 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", 
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.6912539079606895`*^9, 3.691266438480939*^9}],

Cell[TextData[{
 "To simplify the analysis we assume that we have a ",
 StyleBox["symmetric",
  FontColor->GrayLevel[0]],
 " matching model where",
 StyleBox[" infection from either pathogen to the matching host is the same,",
  FontColor->GrayLevel[0]],
 "  \[Beta][1,1]=\[Beta][2,2]=X",
 StyleBox[", as is the probability of infection to a non-matching host,",
  FontColor->GrayLevel[0]],
 " \[Beta][1,2]=\[Beta][2,1]=Y:"
}], "Text",
 CellChangeTimes->{{3.6912667049268074`*^9, 3.6912667282976484`*^9}, 
   3.6914400930017567`*^9, {3.691778287385972*^9, 3.6917782953751*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Beta]sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "X"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "Y"}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "X"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6912667294832506`*^9, 3.6912667563620977`*^9}}],

Cell["\<\
The complete set of differential equations for a given nI and nR is given by:\
\>", "Text",
 CellChangeTimes->{{3.6914338183310604`*^9, 3.6914338385642962`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ODEs", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nI", ",", "nR", ",", "equs", ",", "h", ",", "p", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"equs", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"equs", ",", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"h", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
           RowBox[{"g1", "[", 
            RowBox[{"h", ",", "t"}], "]"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
           RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"equs", ",", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"i", "[", 
                  RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                 "t"}], "]"}], "\[Equal]", 
               RowBox[{"g2", "[", 
                RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}]}], "]"}],
             ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"equs", ",", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"r", "[", 
                RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", "t"}], "]"}], 
             "\[Equal]", 
             RowBox[{"g3", "[", 
              RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"equs", "=", 
      RowBox[{"equs", "/.", "\[Beta]sub"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.69133305172554*^9, 3.6913331154094596`*^9}, {
  3.691333616102455*^9, 3.691333757483655*^9}, {3.691334121708172*^9, 
  3.6913341276591797`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria", "Subchapter",
 CellChangeTimes->{{3.690806893285402*^9, 3.6908068950455027`*^9}}],

Cell["\<\
Let se[h], ie[h,p,c] and re[h,c] be the values of s[h,t], i[h,p,c,t], and \
r[h,c,t] at equilibrium
Like the SIRS model without coevolution, by solving for re[h,c] and \
ie[h,p,c>1] in terms of ie[h,p,1], the system of equations that must be \
satisfied at equilibrium reduces down to only 6 equations.\
\>", "Text",
 CellChangeTimes->{{3.691265058935906*^9, 3.6912652348752174`*^9}, {
   3.691265269202278*^9, 3.6912653306823874`*^9}, 3.6914401100525866`*^9, {
   3.69177830470954*^9, 3.69177831639717*^9}, 3.693659662258436*^9}],

Cell["Reducing the system of equations at Equilibrium", "Text",
 CellChangeTimes->{{3.6912653389036016`*^9, 3.69126534962082*^9}, 
   3.6914401132349925`*^9}],

Cell["At Equilibrium, for c>1", "Text",
 CellChangeTimes->{{3.691265359176038*^9, 3.6912653613132415`*^9}, {
   3.691265519200321*^9, 3.691265524488731*^9}, 3.6914401151693954`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"re", "[", 
   RowBox[{"h_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["nR", "\[Tau]R"], 
   RowBox[{"(", 
    FractionBox["\[Tau]R", 
     RowBox[{
      RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}], 
   RowBox[{"re", "[", 
    RowBox[{"h", ",", 
     RowBox[{"c", "-", "1"}]}], "]"}]}]}]], "Text",
 CellChangeTimes->{{3.6912653635596457`*^9, 3.691265447367993*^9}, {
   3.691265526501134*^9, 3.691265527171935*^9}, 3.69126558679924*^9}],

Cell["For c=1", "Text",
 CellChangeTimes->{{3.691265531853944*^9, 3.691265533835147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"re", "[", 
   RowBox[{"h", ",", "1"}], "]"}], ":=", 
  RowBox[{
   FractionBox["nI", "\[Tau]I"], 
   RowBox[{"(", 
    FractionBox["\[Tau]R", 
     RowBox[{
      RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}], 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"p", "=", "1"}], "2"], 
    RowBox[{"ie", "[", 
     RowBox[{"h", ",", "p", ",", "nI"}], "]"}]}]}]}]], "Text",
 CellChangeTimes->{{3.6912655360815516`*^9, 3.6912655521027794`*^9}, 
   3.69126558679924*^9, {3.6913361553495045`*^9, 3.6913361891095676`*^9}}],

Cell["similarly, for c>1 ", "Text",
 CellChangeTimes->{{3.6912654510339994`*^9, 3.69126545699321*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ie", "[", 
   RowBox[{"h_", ",", "p_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["nI", "\[Tau]I"], 
   RowBox[{"(", 
    FractionBox["nI", 
     RowBox[{
      RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", "nI"}]], ")"}], 
   RowBox[{"ie", "[", 
    RowBox[{"h", ",", "p", ",", 
     RowBox[{"c", "-", "1"}]}], "]"}]}]}]], "Text",
 CellChangeTimes->{{3.6912654622222195`*^9, 3.6912655070947*^9}, 
   3.69126558679924*^9}],

Cell["\<\
Substituting these equations into each other to express re[h,c] and ie[h,p,c] \
in terms of ie[h,p,1]=ie1[h,p] gives:\
\>", "Text",
 CellChangeTimes->{{3.691265595660056*^9, 3.691265636081727*^9}, {
  3.6912657194552736`*^9, 3.691265723355281*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"re", "[", 
   RowBox[{"h_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nR", 
      RowBox[{
       RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nI", "\[Tau]I"], 
     RowBox[{"(", 
      FractionBox["\[Tau]R", 
       RowBox[{
        RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{
       RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", "nI"}]], ")"}], 
    RowBox[{"nI", "-", "1"}]], 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"l", "=", "1"}], "2"], 
    RowBox[{"ie1", "[", 
     RowBox[{"h", ",", "l"}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ie", "[", 
   RowBox[{"h_", ",", "p_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{
       RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", "nI"}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"ie1", "[", 
    RowBox[{"h", ",", "p"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6912656574869647`*^9, 3.691265731202094*^9}, {
   3.691335142663622*^9, 3.6913351506946335`*^9}, 3.691434916263055*^9, {
   3.691435041463276*^9, 3.691435047406886*^9}, {3.6914353038229375`*^9, 
   3.691435304197338*^9}, 3.691436163548639*^9, {3.6914362247525463`*^9, 
   3.691436225095747*^9}, {3.6933324945323515`*^9, 3.6933325273952312`*^9}}],

Cell[TextData[{
 "We can then use these expression to write the equation for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"se", "[", "h", "]"}]}], "=", "0"}], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["d", "dt"], 
     RowBox[{"ie1", "[", 
      RowBox[{"h", ",", "p"}], "]"}]}], "=", "0"}], TraditionalForm]]],
 " in terms of ie1[h,p].  This is simplified by defining zI",
 StyleBox[" (the sum of all infected classes, relative to the number in the \
first infected class with the same h and p), zR (the sum of all recovered \
classes, relative to the number in the first infected class with the same h), \
and znR (the number in the last recovered class, relative to the number in \
the first infected class with the same h):",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.6912657698297625`*^9, 3.691265770079363*^9}, {
   3.691266108414158*^9, 3.6912661093189597`*^9}, {3.691266186370495*^9, 
   3.6912662739218493`*^9}, 3.6914401234706106`*^9, {3.691778429367509*^9, 
   3.6917784493634043`*^9}, {3.691778481020522*^9, 3.691778496307445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zsub", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zI", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ie", "[", 
          RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], 
       RowBox[{"ie", "[", 
        RowBox[{"h", ",", "p", ",", "1"}], "]"}]]}], ",", 
     RowBox[{"zR", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"re", "[", 
          RowBox[{"h", ",", "c"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}], 
       RowBox[{
        RowBox[{"ie", "[", 
         RowBox[{"h", ",", "1", ",", "1"}], "]"}], "+", 
        RowBox[{"ie", "[", 
         RowBox[{"h", ",", "2", ",", "1"}], "]"}]}]]}], ",", 
     RowBox[{"znR", "\[Rule]", 
      FractionBox[
       RowBox[{"re", "[", 
        RowBox[{"h", ",", "nR"}], "]"}], 
       RowBox[{
        RowBox[{"ie", "[", 
         RowBox[{"h", ",", "1", ",", "1"}], "]"}], "+", 
        RowBox[{"ie", "[", 
         RowBox[{"h", ",", "2", ",", "1"}], "]"}]}]]}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6912662753882513`*^9, 3.691266389617653*^9}, {
  3.691434937199292*^9, 3.6914349378076935`*^9}, {3.691435782311764*^9, 
  3.691435843718472*^9}, {3.69143588813475*^9, 3.6914358957163634`*^9}, {
  3.69143613212458*^9, 3.6914361324365807`*^9}, {3.6914362071839156`*^9, 
  3.6914362406177745`*^9}, {3.7206182017386827`*^9, 3.720618203266698*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"zI", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nI", 
            RowBox[{"nI", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]]}]}], ",", 
   RowBox[{"zR", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nI", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "nI"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nR", 
            RowBox[{"nR", "+", 
             RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], ")"}]}], 
      RowBox[{"d", " ", "\[Tau]I"}]]}]}], ",", 
   RowBox[{"znR", "\[Rule]", 
    FractionBox[
     RowBox[{"nI", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "nI"}]], " ", "\[Tau]R", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nR", 
         RowBox[{"nR", "+", 
          RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], 
     RowBox[{"nR", " ", "\[Tau]I"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.691266384610044*^9, 3.691266390928055*^9}, 
   3.6913311196420794`*^9, 3.6913351685366597`*^9, 3.691335484866304*^9, 
   3.691336060952512*^9, 3.6914337883394065`*^9, 3.6914338655543437`*^9, {
   3.691434926855474*^9, 3.691434938650095*^9}, 3.691435057812104*^9, 
   3.6914351430556545`*^9, 3.69143531093855*^9, 3.691435786650572*^9, {
   3.6914358178350267`*^9, 3.691435844326873*^9}, 3.691435896667965*^9, 
   3.691435945685251*^9, 3.691436133341382*^9, 3.6914361696648493`*^9, {
   3.691436217917734*^9, 3.691436241569376*^9}, 3.693660329850863*^9, 
   3.6936671572952795`*^9, 3.693834337020504*^9, 3.6942874415134153`*^9, 
   3.694441641100437*^9, 3.6949847320421515`*^9, 3.695476546776145*^9, 
   3.6954779628581405`*^9, 3.6962735727793837`*^9, 3.696357772728284*^9, 
   3.696685841675858*^9, 3.711386610625054*^9, 3.711386848814724*^9, 
   3.713180930714987*^9, 3.713190767517223*^9, 3.713202630241332*^9, 
   3.7132043821310577`*^9, 3.713364446133593*^9, 3.714149771812315*^9, 
   3.7142113349467993`*^9, {3.7205519338499613`*^9, 3.720551939478595*^9}, 
   3.720618204348712*^9}]
}, Closed]],

Cell["\<\
The resulting system of 6 equations that must be satisfied at equilibrium are:\
\>", "Text",
 CellChangeTimes->{{3.6912664069356833`*^9, 3.6912664239397135`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G1", "[", "h_", "]"}], ":=", 
  RowBox[{
   RowBox[{"b", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"se", "[", "h", "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ie1", "[", 
          RowBox[{"h", ",", "1"}], "]"}], "+", 
         RowBox[{"ie1", "[", 
          RowBox[{"h", ",", "2"}], "]"}]}], ")"}]}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"k", "=", "1"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"se", "[", "k", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"k", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"k", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}]}], 
     ")"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{"se", "[", "h", "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], " ", "znR", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"h", ",", "1"}], "]"}], "+", 
      RowBox[{"ie1", "[", 
       RowBox[{"h", ",", "2"}], "]"}]}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"se", "[", "h", "]"}], "zI", 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "2"], 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Beta]", "[", 
         RowBox[{"h", ",", "l"}], "]"}], 
        RowBox[{"ie1", "[", 
         RowBox[{"k", ",", "l"}], "]"}]}], 
       ")"}]}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G2", "[", 
   RowBox[{"h_", ",", "p_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"se", "[", "h", "]"}], "zI", " ", 
    RowBox[{"\[Beta]", "[", 
     RowBox[{"h", ",", "p"}], "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "2"], 
     RowBox[{"(", 
      RowBox[{"ie1", "[", 
       RowBox[{"k", ",", "p"}], "]"}], ")"}]}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]", "+", 
      FractionBox["nI", "\[Tau]I"]}], ")"}], 
    RowBox[{"ie1", "[", 
     RowBox[{"h", ",", "p"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.6912664523805633`*^9, 3.6912665918352084`*^9}, {
  3.6912666823057675`*^9, 3.691266682586568*^9}, {3.6912673130740857`*^9, 
  3.6912673147120886`*^9}, {3.6914337370903163`*^9, 3.6914337401479216`*^9}, {
  3.720618233836742*^9, 3.72061823459382*^9}}],

Cell["\<\
A resulting list of expressions that must equal zero at equilibrium\
\>", "Text",
 CellChangeTimes->{{3.691267038900203*^9, 3.6912670510420246`*^9}, {
   3.691267088514291*^9, 3.691267093071499*^9}, 3.691440127089817*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"G1", "[", "h", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"G2", "[", 
          RowBox[{"h", ",", "p"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], "/.", 
     "\[Beta]sub"}], "//", "Flatten"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.6912670975643063`*^9, 3.6912671648658247`*^9}, {
  3.6912681478256207`*^9, 3.6912681615068445`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "+", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"Y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "2"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"2", ",", "1"}], "]"}], "+", 
        RowBox[{"ie1", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "2", "]"}]}], "-", 
    RowBox[{"zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"X", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "2"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "1"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"se", "[", "2", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "+", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "+", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6954765512784023`*^9, 3.695477966260335*^9, 
  3.6962735730183973`*^9, 3.696357772935296*^9, 3.6966858418748693`*^9, 
  3.711386610784252*^9, 3.7113868489750233`*^9, 3.7131809309052973`*^9, 
  3.7131907677284613`*^9, 3.713202630455596*^9, 3.71320438234097*^9, 
  3.7133644463013363`*^9, 3.714149771965769*^9, 3.7142113351243467`*^9, 
  3.720551957857439*^9, 3.7206182545951233`*^9}]
}, Closed]],

Cell["The set of variables at equilibrium is:", "Text",
 CellChangeTimes->{{3.691268477598001*^9, 3.691268502012044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiVars", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"h", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
          RowBox[{"se", "[", "h", "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"i", "[", 
           RowBox[{"h", ",", "p", ",", "1", ",", "\[Infinity]"}], "]"}], 
          "\[Rule]", 
          RowBox[{"ie1", "[", 
           RowBox[{"h", ",", "p"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], "//", 
     "Flatten"}], "//", "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6912685211708775`*^9, 3.6912685569583406`*^9}, 
   3.6912689314987993`*^9, {3.691331071284788*^9, 3.6913310962928343`*^9}, 
   3.713364282600181*^9}],

Cell[CellGroupData[{

Cell["Extinction equilibrium", "Subsection",
 CellChangeTimes->{{3.691269337085313*^9, 3.691269343606124*^9}}],

Cell["Host extinction satisfies the equilibrium equations", "Text",
 CellChangeTimes->{{3.691269377583984*^9, 3.691269416929253*^9}, 
   3.691440136529834*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"se", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6912693479907317`*^9, 3.691269361827956*^9}, {
  3.6913291509125605`*^9, 3.6913291522073627`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.691269362685958*^9, 3.6913311292660985`*^9, 3.69133516877666*^9, {
   3.6913354852407045`*^9, 3.691335498933731*^9}, 3.691433888470784*^9, 
   3.69366715770088*^9, 3.6938343373013043`*^9, 3.6942874418154325`*^9, 
   3.6944416414758377`*^9, 3.6949847324251738`*^9, 3.69547656242404*^9, 
   3.6954779723446827`*^9, 3.696273573094402*^9, 3.6963577730032997`*^9, 
   3.696685841940873*^9, 3.7113866108759737`*^9, 3.711386849084457*^9, 
   3.713180931051628*^9, 3.713190767922632*^9, 3.7132026307705917`*^9, 
   3.7132043824835377`*^9, 3.7133644463925343`*^9, 3.7141497720152283`*^9, 
   3.714211335192553*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiVars", "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"se", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
    RowBox[{
     RowBox[{"ie1", "[", 
      RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6913311654591665`*^9, 3.6913311735669823`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6913311743781834`*^9, 3.6913351689366603`*^9, {3.691335485303105*^9, 
   3.691335498996131*^9}, 3.691433888517584*^9, 3.69366715784128*^9, 
   3.6938343373325043`*^9, 3.6942874418484344`*^9, 3.6944416415226383`*^9, 
   3.694984732478177*^9, 3.695476562489044*^9, 3.695477972401686*^9, 
   3.6962735731284037`*^9, 3.6963577730343018`*^9, 3.696685841970875*^9, 
   3.711386610925055*^9, 3.711386849134651*^9, 3.7131809311172943`*^9, 
   3.713190768002121*^9, 3.7132026308608103`*^9, 3.713204382568243*^9, 
   3.713364446441753*^9, 3.714149772053233*^9, 3.7142113352429028`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Disease extinction", "Subsection",
 CellChangeTimes->{{3.69126942652527*^9, 3.6912694319852796`*^9}}],

Cell["Let us search for equilibria with no infection types present", "Text",
 CellChangeTimes->{{3.6913273271160192`*^9, 3.691327346498081*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"subB", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.691269669820698*^9, 3.691269677854712*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", "subB"}]], "Input",
 CellChangeTimes->{{3.6912693479907317`*^9, 3.691269361827956*^9}, {
  3.6912694485057087`*^9, 3.691269448677309*^9}, {3.6912696802727165`*^9, 
  3.691269681333518*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "d"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"se", "[", "1", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "d"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"se", "[", "2", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
   ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.69126944956651*^9, 3.691269681801519*^9, 3.6913311292972984`*^9, 
   3.6913351690066605`*^9, {3.691335485381105*^9, 3.6913355042109413`*^9}, 
   3.691433951655895*^9, 3.6936671579816804`*^9, 3.6938343373637047`*^9, 
   3.6942874418914366`*^9, 3.694441641569438*^9, 3.6949847325431805`*^9, 
   3.695476562561048*^9, 3.69547797246169*^9, 3.6962735731794066`*^9, 
   3.696357773075304*^9, 3.696685842010877*^9, 3.71138661100946*^9, 
   3.711386849210837*^9, 3.7131809312199297`*^9, 3.713190768206718*^9, 
   3.713202630983594*^9, 3.713204382680643*^9, 3.713364446592678*^9, 
   3.714149772135775*^9, 3.7142113353095827`*^9}]
}, Closed]],

Cell["solving equation 1 for se[1]", "Text",
 CellChangeTimes->{{3.6912694604865294`*^9, 3.69126946618254*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse1", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"EquiList", "/.", "subB"}], ")"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"se", "[", "1", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6912694720169497`*^9, 3.691269476743758*^9}, {
  3.6912696951717424`*^9, 3.691269716013379*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "[", "1", "]"}], "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"b", "-", "d", "-", 
       RowBox[{"b", " ", "\[Kappa]", " ", 
        RowBox[{"se", "[", "2", "]"}]}]}], 
      RowBox[{"b", " ", "\[Kappa]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.691269478459761*^9, {3.691269705826561*^9, 3.6912697164657803`*^9}, 
   3.6913311293752985`*^9, 3.69133516903666*^9, {3.6913354854591055`*^9, 
   3.6913355042421417`*^9}, 3.691433951718295*^9, 3.6936671580440807`*^9, 
   3.6938343375041046`*^9, 3.694287442013444*^9, 3.6944416416630383`*^9, 
   3.6949847326001835`*^9, 3.695476562619051*^9, 3.695477972513693*^9, 
   3.696273573214409*^9, 3.696357773107306*^9, 3.6966858422758923`*^9, 
   3.711386611058214*^9, 3.711386849269095*^9, 3.713180931358222*^9, 
   3.7131907682836246`*^9, 3.713202631078382*^9, 3.713204382819572*^9, 
   3.713364446641367*^9, 3.7141497721887407`*^9, 3.71421133536416*^9}]
}, Closed]],

Cell[TextData[StyleBox["Option 1:  se[1]=0",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.691269482827769*^9, 3.6912695480242834`*^9}, {
  3.6912696503810635`*^9, 3.691269660460682*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiList", "/.", "subB"}], "/.", 
  RowBox[{"subse1", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691269564529113*^9, 3.6912695649503136`*^9}, 
   3.691269687043128*^9, {3.691269719507785*^9, 3.6912697209585876`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "d"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"se", "[", "2", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"se", "[", "2", "]"}]}]}], ")"}]}]}], ",", "0", ",", "0", ",",
    "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6912695653247137`*^9, 3.69126968796353*^9, 3.6912697213797884`*^9, 
   3.691331129422098*^9, 3.691335169066661*^9, {3.6913354855995054`*^9, 
   3.6913355042889414`*^9}, 3.6914339517494955`*^9, 3.6936671581064806`*^9, 
   3.6938343375509048`*^9, 3.6942874420604467`*^9, 3.694441641725438*^9, 
   3.6949847326551867`*^9, 3.6954765626750546`*^9, 3.6954779725646954`*^9, 
   3.6962735732514105`*^9, 3.6963577731393075`*^9, 3.696685842308894*^9, 
   3.711386611112403*^9, 3.711386849318512*^9, 3.713180931419972*^9, 
   3.713190768369079*^9, 3.7132026311600437`*^9, 3.713204382901639*^9, 
   3.713364446692271*^9, 3.7141497722391148`*^9, 3.714211335403594*^9}]
}, Closed]],

Cell["Solving equation 2 for se[2]", "Text",
 CellChangeTimes->{{3.691269572703527*^9, 3.691269593250763*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse2", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"EquiList", "/.", "subB"}], "/.", 
        RowBox[{"subse1", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"se", "[", "2", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6912695844367476`*^9, 3.6912696004579763`*^9}, {
  3.691269736389015*^9, 3.6912697452810307`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"b", "-", "d"}], 
      RowBox[{"b", " ", "\[Kappa]"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6912696010507765`*^9, {3.691269740959823*^9, 3.6912697457802315`*^9}, 
   3.6913311294532986`*^9, 3.6913351690966606`*^9, {3.6913354856775055`*^9, 
   3.691335504320142*^9}, 3.6914339517806954`*^9, 3.6936671581844807`*^9, 
   3.6938343375821047`*^9, 3.6942874420974483`*^9, 3.6944416417566385`*^9, 
   3.69498473271119*^9, 3.695476562733058*^9, 3.6954779726096983`*^9, 
   3.696273573288413*^9, 3.69635777317231*^9, 3.696685842341896*^9, 
   3.711386611158934*^9, 3.711386849441813*^9, 3.713180931485528*^9, 
   3.713190768450716*^9, 3.713202631243685*^9, 3.713204382984364*^9, 
   3.7133644467425013`*^9, 3.714149772288863*^9, 3.71421133552061*^9}]
}, Closed]],

Cell[TextData[{
 "The first of these is the same as disease extinction. The second \
equilibrium value",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "d"}], ")"}], " ", "\[Kappa]"}], "b"]}]}]],
  CellChangeTimes->{
   3.6912696010507765`*^9, {3.691269740959823*^9, 3.6912697457802315`*^9}}],
 " satisfies the remaining equilibrium equations."
}], "Text",
 CellChangeTimes->{{3.69126964236265*^9, 3.691269645576255*^9}, {
   3.691269765139866*^9, 3.691269853278223*^9}, 3.691440145094249*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EquiList", "/.", "subB"}], "/.", 
    RowBox[{"subse1", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
   RowBox[{"subse2", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.691269758057453*^9, 3.691269793128315*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6912697855935016`*^9, 3.6912697935963154`*^9}, 
   3.691331129484499*^9, 3.6913351691166606`*^9, {3.6913354857399054`*^9, 
   3.6913355043669415`*^9}, 3.6914339518118954`*^9, 3.693667158278081*^9, 
   3.693834337613305*^9, 3.6942874421454515`*^9, 3.6944416418034387`*^9, 
   3.6949847327661934`*^9, 3.695476562789061*^9, 3.6954779726607013`*^9, 
   3.696273573323415*^9, 3.696357773205312*^9, 3.696685842377898*^9, 
   3.711386611233911*^9, 3.711386849552416*^9, 3.7131809315319147`*^9, 
   3.713190768533597*^9, 3.71320263132695*^9, 3.71320438311331*^9, 
   3.713364446792322*^9, 3.7141497724192257`*^9, 3.7142113355562983`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquiVars", "/.", "subB"}], "/.", 
   RowBox[{"subse1", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
  RowBox[{"subse2", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6912700307423353`*^9, 3.6912700392297497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"b", "-", "d"}], 
     RowBox[{"b", " ", "\[Kappa]"}]]}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.691270039775751*^9, 3.691331129515699*^9, 3.691335169146661*^9, {
   3.691335485817906*^9, 3.691335504398142*^9}, 3.691433951843096*^9, 
   3.693667158356081*^9, 3.693834337644505*^9, 3.6942874421854534`*^9, 
   3.694441641850239*^9, 3.694984732820196*^9, 3.6954765628460646`*^9, 
   3.6954779727127037`*^9, 3.6962735733584166`*^9, 3.6963577732353134`*^9, 
   3.6966858424098997`*^9, 3.711386611296584*^9, 3.7113868496642303`*^9, 
   3.713180931603197*^9, 3.71319076861926*^9, 3.7132026314119587`*^9, 
   3.71320438318363*^9, 3.7133644468433123`*^9, 3.714149772472904*^9, 
   3.71421133560821*^9}]
}, Closed]],

Cell[TextData[{
 StyleBox["Option 2: ",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "=", 
   FractionBox[
    RowBox[{"b", "-", "d", "-", 
     RowBox[{"b", " ", "\[Kappa]", " ", 
      RowBox[{"se", "[", "2", "]"}]}]}], 
    RowBox[{"b", " ", "\[Kappa]"}]]}]],
  CellChangeTimes->{
   3.691269478459761*^9, {3.691269705826561*^9, 3.6912697164657803`*^9}}]
}], "Text",
 CellChangeTimes->{{3.691269835726192*^9, 3.6912698368805943`*^9}, {
  3.6912703052824183`*^9, 3.6912703176240396`*^9}, {3.6912706004091377`*^9, 
  3.6912706033887424`*^9}, {3.6914339923739667`*^9, 3.6914339923739667`*^9}}],

Cell["\<\
The second option for se[1] satisfies all the equilibrium equations\
\>", "Text",
 CellChangeTimes->{{3.6912705878823156`*^9, 3.6912706783654747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"EquiList", "/.", "subB"}], "/.", 
    RowBox[{"subse1", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912704623262944`*^9, 3.691270462981496*^9}, {
  3.691270515323588*^9, 3.6912705460566416`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.691270458519888*^9, 3.691270463433896*^9}, {
   3.6912705183187933`*^9, 3.691270546540243*^9}, 3.6913311295312986`*^9, 
   3.6913351691766605`*^9, {3.6913354858803062`*^9, 3.6913355044293423`*^9}, 
   3.6914339518742957`*^9, 3.693667158418481*^9, 3.693834337675705*^9, 
   3.6942874422264557`*^9, 3.6944416418814387`*^9, 3.6949847328751993`*^9, 
   3.6954765629050674`*^9, 3.6954779727637067`*^9, 3.696273573397419*^9, 
   3.696357773267315*^9, 3.6966858424419017`*^9, 3.711386611358612*^9, 
   3.711386849785906*^9, 3.713180931669034*^9, 3.7131907687013817`*^9, 
   3.7132026314974003`*^9, 3.713204383250101*^9, 3.713364446892186*^9, 
   3.714149772522635*^9, 3.7142113356590633`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiVars", "/.", "subB"}], "/.", 
  RowBox[{"subse1", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691270688287092*^9, 3.691270688879893*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"b", "-", "d", "-", 
      RowBox[{"b", " ", "\[Kappa]", " ", 
       RowBox[{"se", "[", "2", "]"}]}]}], 
     RowBox[{"b", " ", "\[Kappa]"}]]}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{"se", "[", "2", "]"}]}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.691270689800295*^9, 3.691331129562499*^9, 3.6913351692066607`*^9, {
   3.6913354859583063`*^9, 3.691335504476142*^9}, 3.6914339519054956`*^9, 
   3.693667158496481*^9, 3.6938343377069054`*^9, 3.694287442279459*^9, 
   3.694441641928239*^9, 3.6949847329282026`*^9, 3.69547656295207*^9, 
   3.6954779728147097`*^9, 3.6962735734314213`*^9, 3.696357773298317*^9, 
   3.6966858424729033`*^9, 3.711386611413259*^9, 3.711386850002686*^9, 
   3.713180931734571*^9, 3.713190768783464*^9, 3.71320263158265*^9, 
   3.713204383317967*^9, 3.713364446942628*^9, 3.714149772573258*^9, 
   3.714211335708295*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Single infection types present.", "Subsection",
 CellChangeTimes->{{3.6912707064933243`*^9, 3.691270727756161*^9}, {
  3.6912730769716935`*^9, 3.691273079498898*^9}}],

Cell[TextData[{
 "If we search for equilibria for which only a single infection type, \
ie1[h,p], is present there are two possibilities,",
 StyleBox[" either we have matching hosts and parasites (h=p) or non-matching \
(h\[NotEqual]p):",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.6912707336529713`*^9, 3.6912707958844814`*^9}, 
   3.691440150148658*^9, {3.691778656582931*^9, 3.691778676131394*^9}}],

Cell[TextData[StyleBox["Option 1: h=p, ex ie1[1,1]\[NotEqual]0",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6912708052756977`*^9, 3.6912708530137815`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"subC1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.691269669820698*^9, 3.691269677854712*^9}, {
  3.6912708716412144`*^9, 3.6912708757128215`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiList", "/.", "subC1"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912708353077507`*^9, 3.691270835557351*^9}, {
  3.6912708773664246`*^9, 3.6912708843240366`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"se", "[", "2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "d"}], "-", 
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{"se", "[", "1", "]"}], "+", 
            RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Delta]"}], "-", 
      FractionBox["nI", "\[Tau]I"], "+", 
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}], ",", "0", ",", 
   RowBox[{"Y", " ", "zI", " ", 
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.691270879815629*^9, 3.6912708848700376`*^9}, 
   3.691331129624899*^9, 3.691335169308661*^9, {3.6913354860675063`*^9, 
   3.6913355108097534`*^9}, 3.6913358871843433`*^9, 3.6914341723488836`*^9, 
   3.6914350697773256`*^9, 3.691435152400071*^9, 3.691435323886573*^9, 
   3.6914359588224745`*^9, 3.691436256997803*^9, 3.6936671586056814`*^9, 
   3.693834337769305*^9, 3.6942874423464627`*^9, 3.6944416419906387`*^9, 
   3.694441760529273*^9, 3.6949847330462093`*^9, 3.6954765630400753`*^9, 
   3.695477972887714*^9, 3.696273573624432*^9, 3.6963577734683266`*^9, 
   3.696685842533907*^9, 3.7113866115620403`*^9, 3.7113868501378727`*^9, 
   3.713180931839367*^9, 3.713190768901801*^9, 3.713202631820472*^9, 
   3.713204383417314*^9, 3.713364447023479*^9, 3.714149772656474*^9, 
   3.714211335788694*^9}]
}, Closed]],

Cell["\<\
Solving equation 5 for se[2] (note that equation 5 is also satisfied by \
ie1[1,1]=0 which does not satisfy the assumption of this equilibrium search)\
\>", "Text",
 CellChangeTimes->{{3.691270889612446*^9, 3.6912709364613285`*^9}, {
  3.691440154532265*^9, 3.6914401569502697`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList", "/.", "subC1"}], ")"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.691270943856741*^9, 3.691270976616799*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6912709645579777`*^9, 3.6912709771003995`*^9}, 
   3.6913311296560993`*^9, 3.691335169328661*^9, {3.6913354861299067`*^9, 
   3.691335510856553*^9}, 3.691335888479146*^9, 3.6914341767480917`*^9, 
   3.691435071696129*^9, 3.691435154069274*^9, 3.691435339244*^9, 
   3.6914359619580803`*^9, 3.6914362591974072`*^9, 3.6936671587616816`*^9, 
   3.693834337800505*^9, 3.6942874423764644`*^9, 3.6944416420374393`*^9, 
   3.694441761934275*^9, 3.6949847331562157`*^9, 3.6954765630930786`*^9, 
   3.6954779729477177`*^9, 3.696273573658434*^9, 3.696357773500328*^9, 
   3.6966858425679092`*^9, 3.711386611692197*^9, 3.711386850288753*^9, 
   3.713180931900909*^9, 3.7131907689846563`*^9, 3.713202631916147*^9, 
   3.713204383486109*^9, 3.713364447076145*^9, 3.7141497727053213`*^9, 
   3.714211335842314*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EquiList", "/.", "subC1"}], "/.", "subse2"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912709836856117`*^9, 3.691270987663618*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
   ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Delta]"}], "-", 
      FractionBox["nI", "\[Tau]I"], "+", 
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}], ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6912709882408195`*^9, 3.691331129687299*^9, 3.691335169368661*^9, {
   3.6913354862079067`*^9, 3.691335510903353*^9}, 3.6913358896959476`*^9, 
   3.6914341788777084`*^9, 3.6914350725073304`*^9, 3.691435154958475*^9, 
   3.691435341334404*^9, 3.6914359644072847`*^9, 3.6914362601188087`*^9, 
   3.693667158948882*^9, 3.693834337816105*^9, 3.6942874424144664`*^9, 
   3.6944416420686393`*^9, 3.694441762839077*^9, 3.6949847332122188`*^9, 
   3.6954765631400814`*^9, 3.695477973005721*^9, 3.6962735737614403`*^9, 
   3.69635777353333*^9, 3.6966858426059113`*^9, 3.711386611842702*^9, 
   3.711386850355467*^9, 3.713180931970924*^9, 3.7131907690692873`*^9, 
   3.713202631998378*^9, 3.7132043835677557`*^9, 3.713364447123898*^9, 
   3.714149772756012*^9, 3.714211335891502*^9}]
}, Closed]],

Cell[TextData[{
 "Solving equation 3 for ",
 StyleBox["se",
  FontColor->GrayLevel[0]],
 "[1]"
}], "Text",
 CellChangeTimes->{{3.691270996446434*^9, 3.691271004792448*^9}, 
   3.6914353552964287`*^9, 3.691440173535099*^9, {3.6917787013151093`*^9, 
   3.691778701561851*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EquiList", "/.", "subC1"}], "/.", "subse2"}], ")"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.691271014667266*^9, 3.691271029613092*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
    RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6912710316410956`*^9, 3.691331129718499*^9, 3.6913351693886614`*^9, {
   3.6913354862703066`*^9, 3.6913355109501534`*^9}, 3.6913358933583555`*^9, 
   3.691434187265924*^9, 3.6914350746475344`*^9, 3.691435156986479*^9, 
   3.6914353582614336`*^9, 3.69143596741809*^9, 3.6914362617880116`*^9, 
   3.693667159026882*^9, 3.6938343378473053`*^9, 3.6942874424464684`*^9, 
   3.6944416421154394`*^9, 3.694441763946679*^9, 3.694984733268222*^9, 
   3.6954765631870837`*^9, 3.6954779730557237`*^9, 3.696273573797442*^9, 
   3.6963577735673323`*^9, 3.696685842640913*^9, 3.711386611959117*^9, 
   3.7113868504225397`*^9, 3.713180932034161*^9, 3.7131907692367067`*^9, 
   3.713202632145001*^9, 3.713204383676697*^9, 3.713364447176498*^9, 
   3.714149772811864*^9, 3.7142113359419928`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EquiList", "/.", "subC1"}], "/.", "subse2"}], "/.", "subse1"}], "//",
   "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912710390043087`*^9, 3.6912710477871237`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"X", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"X", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "1"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "1"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["X", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6912710437467165`*^9, 3.6912710483643255`*^9}, 
   3.6913311297964993`*^9, 3.6913351694686613`*^9, {3.691335486395107*^9, 
   3.6913355109813533`*^9}, {3.69133588055153*^9, 3.6913358946687574`*^9}, 
   3.6914341903795323`*^9, 3.691435075677136*^9, 3.691435158109681*^9, 
   3.691435364158244*^9, 3.6914359704444947`*^9, 3.6914362632856145`*^9, 
   3.6936671591516824`*^9, 3.6938343379409056`*^9, 3.694287442528473*^9, 
   3.6944416421934395`*^9, {3.694441748782448*^9, 3.694441765725082*^9}, 
   3.6949847333722277`*^9, 3.6954765632890897`*^9, 3.695477973152729*^9, 
   3.6962735738834467`*^9, 3.6963577736503367`*^9, 3.696685842724918*^9, 
   3.711386612074737*^9, 3.711386850528282*^9, 3.713180932106597*^9, 
   3.7131907693280487`*^9, 3.713202632309174*^9, 3.713204383758741*^9, 
   3.713364447247425*^9, 3.714149772910831*^9, 3.7142113360228567`*^9}]
}, Closed]],

Cell["Solving equation 1 for ie1[1,1]", "Text",
 CellChangeTimes->{{3.6912710873653936`*^9, 3.6912710984902134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subie11", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EquiList", "/.", "subC1"}], "/.", "subse2"}], "/.", 
          "subse1"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "]"}], "//", "Simplify"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.691271115915444*^9, 3.6912711424842906`*^9}, {
  3.691271190300375*^9, 3.6912711925467787`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "X", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"X", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "X", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "X", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"X", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"X", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "X", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "X"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "X", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"X", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "X", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"X", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "X", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "X", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"X", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"X", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "X", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "X"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "X", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"X", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.69127112494786*^9, 3.6912711430926914`*^9}, 
   3.6912711930459795`*^9, 3.6913311308261013`*^9, 3.6913351705186625`*^9, {
   3.6913354874569087`*^9, 3.691335511059354*^9}, 3.6913358980227633`*^9, 
   3.6914341950957413`*^9, 3.691435078344741*^9, 3.691435161026886*^9, 
   3.691435370959856*^9, 3.6914360209759836`*^9, 3.6914362657348185`*^9, 
   3.693667160274884*^9, 3.693834339064108*^9, 3.6942874436905394`*^9, 
   3.694441643254241*^9, 3.694441767456685*^9, 3.6949847344502897`*^9, 
   3.695476564399153*^9, 3.6954779742397914`*^9, 3.6962735750285125`*^9, 
   3.6963577747473993`*^9, 3.696685843933987*^9, 3.711386617609743*^9, 
   3.711386855809915*^9, 3.713180937051446*^9, 3.71319077433469*^9, 
   3.713202637441381*^9, 3.713204389255885*^9, 3.713364452203855*^9, 
   3.7141497778771963`*^9, 3.7142113410479603`*^9}]
}, Closed]],

Cell[TextData[{
 StyleBox["Biological Validity: ",
  FontWeight->"Bold"],
 "There are two possible solutions only one of which will be biologically \
plausible.  The proof for this follows the same logic as used in the SIRS \
case with no coevolution.  Specifically, ie1[1,1] must satisfy the quadratic \
given by:"
}], "Text",
 CellChangeTimes->{{3.6912711466962976`*^9, 3.6912711747315474`*^9}, {
   3.6936596954606996`*^9, 3.6936598203521833`*^9}, {3.6936601600756955`*^9, 
   3.6936601643813033`*^9}, 3.6944410433411407`*^9, {3.69444111954208*^9, 
   3.694441188122801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"EquiList", "/.", "subC1"}], "/.", "subse2"}], "/.", 
       "subse1"}], ")"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "//", "Simplify"}], ",", 
   RowBox[{"ie1", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6944411988400197`*^9, 3.6944412146916475`*^9}, {
  3.6944416649826827`*^9, 3.694441726408004*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"b", " ", "\[Delta]"}], 
   RowBox[{"X", " ", "zI"}]], "-", 
  FractionBox[
   RowBox[{"b", " ", 
    SuperscriptBox["\[Delta]", "2"], " ", "\[Kappa]"}], 
   RowBox[{
    SuperscriptBox["X", "2"], " ", 
    SuperscriptBox["zI", "2"]}]], "-", 
  FractionBox[
   RowBox[{"b", " ", 
    SuperscriptBox["nI", "2"], " ", "\[Kappa]"}], 
   RowBox[{
    SuperscriptBox["X", "2"], " ", 
    SuperscriptBox["zI", "2"], " ", 
    SuperscriptBox["\[Tau]I", "2"]}]], "+", 
  FractionBox[
   RowBox[{"b", " ", "nI"}], 
   RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "b", " ", "nI", " ", "\[Delta]", " ", "\[Kappa]"}], 
   RowBox[{
    SuperscriptBox["X", "2"], " ", 
    SuperscriptBox["zI", "2"], " ", "\[Tau]I"}]], "-", 
  FractionBox[
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
   RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]"}], "X"], "-", 
     FractionBox[
      RowBox[{"b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
      RowBox[{"X", " ", "zI"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", "\[Kappa]"}], 
      RowBox[{"X", " ", "zI"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", "nI", " ", "\[Kappa]"}], 
      RowBox[{"X", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", "nI", " ", "zR", " ", "\[Kappa]"}], 
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", "nI", " ", 
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}], 
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], "\[Tau]I"], "+", 
     FractionBox[
      RowBox[{"nR", " ", "znR"}], "\[Tau]R"]}], ")"}], " ", 
   RowBox[{"ie1", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", "zI", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}], "-", 
     RowBox[{"b", " ", "zR", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.694441643472642*^9, 3.6944417273908052`*^9}, 
   3.6944417737100973`*^9, 3.6949847345582952`*^9, 3.6954765644951587`*^9, 
   3.695477974332797*^9, 3.696273575128518*^9, 3.696357774815404*^9, 
   3.696685844003991*^9, 3.7113866178763227`*^9, 3.711386855918803*^9, 
   3.713180937210279*^9, 3.7131907744415693`*^9, 3.713202637541602*^9, 
   3.71320438965425*^9, 3.713364452296721*^9, 3.7141497779516563`*^9, 
   3.7142113411900253`*^9}]
}, Closed]],

Cell[TextData[{
 "If we devide through by the coefficent of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "2"], TraditionalForm]]],
 " then one equilibrium is guarenteed to be positive (biologically valid) and \
one negative (bioloigically invalid) if the constant term is negative.  In \
other words if the following expression is negative."
}], "Text",
 CellChangeTimes->{{3.694441780273511*^9, 3.6944418866951475`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"b", " ", "\[Delta]"}], 
      RowBox[{"X", " ", "zI"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", 
       SuperscriptBox["\[Delta]", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       SuperscriptBox["X", "2"], " ", 
       SuperscriptBox["zI", "2"]}]], "-", 
     FractionBox[
      RowBox[{"b", " ", 
       SuperscriptBox["nI", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       SuperscriptBox["X", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox["\[Tau]I", "2"]}]], "+", 
     FractionBox[
      RowBox[{"b", " ", "nI"}], 
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "b", " ", "nI", " ", "\[Delta]", " ", "\[Kappa]"}], 
      RowBox[{
       SuperscriptBox["X", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", "zI", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}], "-", 
     RowBox[{"b", " ", "zR", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.694441859182661*^9, 3.694441872452521*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"d", " ", "X", " ", "zI", " ", "\[Tau]I"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "-", 
        RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
        RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], ")"}]}]}], 
    ")"}]}], 
  RowBox[{"b", " ", 
   SuperscriptBox["X", "2"], " ", 
   SuperscriptBox["zI", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
   SuperscriptBox["\[Tau]I", "2"]}]]], "Output",
 CellChangeTimes->{3.694441873014122*^9, 3.694984734619299*^9, 
  3.6954765645851636`*^9, 3.6954779743848*^9, 3.696273575185521*^9, 
  3.696357774859406*^9, 3.696685844052994*^9, 3.711386617960677*^9, 
  3.711386855985475*^9, 3.713180937284751*^9, 3.7131907745039997`*^9, 
  3.713202637679296*^9, 3.7132043897384377`*^9, 3.7133644523459597`*^9, 
  3.7141497780052137`*^9, 3.714211341227537*^9}]
}, Closed]],

Cell[TextData[{
 "Given that (nI+\[Delta] \[Tau]I) and (",
 Cell[BoxData[
  RowBox[{"b", " ", 
   SuperscriptBox["X", "2"], " ", 
   SuperscriptBox["zI", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
   SuperscriptBox["\[Tau]I", "2"]}]],
  CellChangeTimes->{3.694441873014122*^9}],
 ") are both positive this expression is negative only when (d X zI \[Tau]I+b \
(nI \[Kappa]-X zI \[Tau]I+\[Delta] \[Kappa] \[Tau]I))<0. Solving for the \
critical value of X"
}], "Text",
 CellChangeTimes->{{3.6944418926831617`*^9, 3.694441946417264*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d", " ", "X", " ", "zI", " ", "\[Tau]I"}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nI", " ", "\[Kappa]"}], "-", 
            RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
            RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
           ")"}]}]}], ")"}], "/.", "zsub"}], ")"}], "\[Equal]", "0"}], ",", 
    "X"}], "]"}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.694441932508436*^9, 3.6944419622209454`*^9}, 
   3.694453893746294*^9, 3.694453927366353*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"X", "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
       ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6944419530623283`*^9, 3.6944419627669463`*^9}, 
   3.694453894775896*^9, 3.6944539285207553`*^9, 3.694984734714305*^9, 
   3.695476564662168*^9, 3.6954779744318027`*^9, 3.696273575227524*^9, 
   3.6963577748974085`*^9, 3.696685844091996*^9, 3.711386618085544*^9, 
   3.711386856051548*^9, 3.713180937358564*^9, 3.7131907746097603`*^9, 
   3.7132026378747883`*^9, 3.713204389821232*^9, 3.713364452395784*^9, 
   3.714149778054379*^9, 3.714211341259819*^9}]
}, Closed]],

Cell["\<\
below in the stability section we show that this cirtical value of x is the \
same condition that determines the stability of the disease free equilibrium. \
 Hence we can conclude that whenever the disease free equilibrium is unstable \
the only one biologically valid endemic equilibrium exists.\
\>", "Text",
 CellChangeTimes->{{3.694441967103754*^9, 3.694442044937916*^9}}],

Cell[TextData[StyleBox["Option 2: h\[NotEqual]p, for example ie1[1,2]\
\[NotEqual]0",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69127122735144*^9, 3.691271272484319*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"subC2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.691269669820698*^9, 3.691269677854712*^9}, {
  3.6912708716412144`*^9, 3.6912708757128215`*^9}, {3.6912712868363447`*^9, 
  3.6912712884899473`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiList", "/.", "subC2"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912708353077507`*^9, 3.691270835557351*^9}, {
   3.6912708773664246`*^9, 3.6912708843240366`*^9}, 3.6912712908299513`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"se", "[", "2", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "d"}], "-", 
      RowBox[{"X", " ", "zI", " ", 
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "2"}], "]"}]}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], "+", 
            RowBox[{"se", "[", "1", "]"}], "+", 
            RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
   ",", "0", ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Delta]"}], "-", 
      FractionBox["nI", "\[Tau]I"], "+", 
      RowBox[{"Y", " ", "zI", " ", 
       RowBox[{"se", "[", "1", "]"}]}]}], ")"}]}], ",", "0", ",", 
   RowBox[{"X", " ", "zI", " ", 
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.691271291703553*^9, 3.691331130997701*^9, 3.691335170678663*^9, {
   3.6913354877221093`*^9, 3.6913355111997538`*^9}, 3.691435170452303*^9, 
   3.6914354123965287`*^9, 3.693667160618085*^9, 3.6938343392201076`*^9, 
   3.694287443895551*^9, 3.694441643613042*^9, 3.69445368256324*^9, 
   3.6949847348013096`*^9, 3.695476564750173*^9, 3.695477974498806*^9, 
   3.6962735752905273`*^9, 3.696357774957412*^9, 3.6966858441509995`*^9, 
   3.711386618541918*^9, 3.7113868561574593`*^9, 3.713180937563295*^9, 
   3.713190774730832*^9, 3.713202638059215*^9, 3.71320438996316*^9, 
   3.713364452482069*^9, 3.714149778132409*^9, 3.714211341307794*^9}]
}, Closed]],

Cell["Solving equation 6 for se[2]", "Text",
 CellChangeTimes->{{3.6912712959009604`*^9, 3.69127130148577*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse2", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList", "/.", "subC2"}], ")"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.691271347975852*^9, 3.691271371391493*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6912713569146676`*^9, 3.691271371843894*^9}, 
   3.691331131028901*^9, 3.691335170708663*^9, {3.6913354877689095`*^9, 
   3.691335511246554*^9}, 3.691435173369508*^9, 3.691435414206132*^9, 
   3.693667160696085*^9, 3.6938343392513075`*^9, 3.6942874439305534`*^9, 
   3.6944416436442423`*^9, 3.6944536834368415`*^9, 3.694984734863313*^9, 
   3.695476564806176*^9, 3.6954779745398083`*^9, 3.69627357532953*^9, 
   3.6963577749904137`*^9, 3.6966858441840014`*^9, 3.711386618758463*^9, 
   3.711386856226492*^9, 3.713180937767811*^9, 3.7131907748182487`*^9, 
   3.713202638139975*^9, 3.713204390089126*^9, 3.713364452529608*^9, 
   3.714149778193983*^9, 3.714211341342174*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   RowBox[{"EquiList", "/.", "subC2"}], "/.", "subse2"}], ")"}]], "Input",
 CellChangeTimes->{{3.6912713784437056`*^9, 3.691271378818106*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "2"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
   ",", "0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.691271379145707*^9, 3.6913311310601015`*^9, 3.6913351707386627`*^9, {
   3.6913354878313093`*^9, 3.691335511277754*^9}, 3.6914351744459095`*^9, 
   3.6914354165773363`*^9, 3.6936671607584853`*^9, 3.693834339282508*^9, 
   3.694287443967555*^9, 3.6944416436754417`*^9, 3.694453684388443*^9, 
   3.694984734925317*^9, 3.6954765648641796`*^9, 3.6954779746778164`*^9, 
   3.6962735753665314`*^9, 3.696357775022415*^9, 3.696685844227004*^9, 
   3.711386619358363*^9, 3.7113868562925177`*^9, 3.7131809378414183`*^9, 
   3.713190774926861*^9, 3.71320263822477*^9, 3.713204390271247*^9, 
   3.7133644525794373`*^9, 3.714149778261915*^9, 3.714211341377101*^9}]
}, Closed]],

Cell["Solving equation 4 for se[1]", "Text",
 CellChangeTimes->{{3.691271385510518*^9, 3.6912713972261386`*^9}, 
   3.691271448396229*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse1", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EquiList", "/.", "subC2"}], "/.", "subse2"}], ")"}], "[", 
       RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6912714093161597`*^9, 3.691271458693247*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
    RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.691271429847796*^9, 3.6912714592236476`*^9}, 
   3.691331131091302*^9, 3.6913351707686634`*^9, {3.6913354878781095`*^9, 
   3.691335511324554*^9}, 3.6914351777063155`*^9, 3.691435418199739*^9, 
   3.6936671608364854`*^9, 3.693834339298108*^9, 3.6942874440025578`*^9, 
   3.6944416437222424`*^9, 3.6944536858860455`*^9, 3.6949847349883204`*^9, 
   3.695476564922183*^9, 3.6954779747328196`*^9, 3.6962735754045343`*^9, 
   3.696357775055417*^9, 3.696685844260006*^9, 3.7113866194468107`*^9, 
   3.7113868563632097`*^9, 3.7131809379201927`*^9, 3.71319077499944*^9, 
   3.713202638311927*^9, 3.7132043908691893`*^9, 3.7133644526291037`*^9, 
   3.7141497783224363`*^9, 3.7142113414081*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"EquiList", "/.", "subC2"}], "/.", "subse2"}], "/.", "subse1"}], 
   ")"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912714818592873`*^9, 3.6912714835752907`*^9}, 
   3.694453737777388*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9, 3.71318093806835*^9, 
   3.713190775096651*^9, 3.7132026384118547`*^9, 3.713204391085863*^9, 
   3.7133644526988907`*^9, 3.714149778391788*^9, 3.714211341470502*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9, 3.71318093806835*^9, 
   3.713190775096651*^9, 3.7132026384118547`*^9, 3.713204391085863*^9, 
   3.7133644526988907`*^9, 3.714149778391788*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9, 3.71318093806835*^9, 
   3.713190775096651*^9, 3.7132026384118547`*^9, 3.713204391085863*^9, 
   3.7133644526988907`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9, 3.71318093806835*^9, 
   3.713190775096651*^9, 3.7132026384118547`*^9, 3.713204391085863*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9, 3.71318093806835*^9, 
   3.713190775096651*^9, 3.7132026384118547`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9, 3.71318093806835*^9, 
   3.713190775096651*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9, 3.71318093806835*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9, 3.71138685644354*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9, 
   3.711386619566896*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9, 3.6966858443370104`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9, 3.6963577751324215`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9, 
   3.696273575486539*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9, 3.6954779748208246`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9, 3.695476565028189*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9, 
   3.6949847350933266`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{"\[Delta]", "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Delta]", " ", "\[Kappa]"}], "+", 
           RowBox[{"Y", " ", "zI", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"zI", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], "+", 
              RowBox[{"zR", " ", "\[Kappa]", " ", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}]}], 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912714785520816`*^9, 3.6912714842148914`*^9}, 
   3.691331131153702*^9, 3.691335170838663*^9, {3.6913354879717093`*^9, 
   3.691335511355754*^9}, 3.691435179141518*^9, 3.691435419884542*^9, 
   3.6936671609456854`*^9, 3.693834339376108*^9, 3.694287444082562*^9, 
   3.694441643800242*^9, 3.694453687180848*^9, 3.694453737777388*^9}]
}, Closed]],

Cell["Solving equation 1 for ie1[1,2]", "Text",
 CellChangeTimes->{{3.6912714906421027`*^9, 3.691271500924521*^9}, 
   3.691440188514125*^9, 3.694453737777388*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subie12", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EquiList", "/.", "subC2"}], "/.", "subse2"}], "/.", 
          "subse1"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "]"}], "//", "Flatten"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.691271468068863*^9, 3.691271472686471*^9}, {
   3.691271503748126*^9, 3.6912715268829665`*^9}, 3.694453737777388*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9, 3.7131809431557837`*^9, 
   3.713190780021603*^9, 3.713202643408842*^9, 3.71320439600981*^9, 
   3.713364457556538*^9, 3.714149783145643*^9, 3.7142113464331713`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9, 3.7131809431557837`*^9, 
   3.713190780021603*^9, 3.713202643408842*^9, 3.71320439600981*^9, 
   3.713364457556538*^9, 3.714149783145643*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9, 3.7131809431557837`*^9, 
   3.713190780021603*^9, 3.713202643408842*^9, 3.71320439600981*^9, 
   3.713364457556538*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9, 3.7131809431557837`*^9, 
   3.713190780021603*^9, 3.713202643408842*^9, 3.71320439600981*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9, 3.7131809431557837`*^9, 
   3.713190780021603*^9, 3.713202643408842*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9, 3.7131809431557837`*^9, 
   3.713190780021603*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9, 3.7131809431557837`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9, 3.71138686154538*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "-", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"b", " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "+", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "-", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "-", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", "Y", " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "zI"}], "+", 
             RowBox[{"2", " ", "b", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}],
           "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "b"}], " ", "Y", " ", 
              SuperscriptBox["zI", "2"]}], "-", 
             RowBox[{"b", " ", "Y", " ", "zI", " ", "zR"}], "+", 
             RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "+", 
             RowBox[{
             "2", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{
             "2", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
             "+", 
             RowBox[{"Y", " ", "zI", " ", 
              RowBox[{"\[Sqrt]", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["1", 
                  RowBox[{"Y", " ", "zI", " ", 
                   SuperscriptBox["\[Tau]I", "2"], " ", 
                   SuperscriptBox["\[Tau]R", "2"]}]], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["nR", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox["znR", "2"], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}], "-", 
                   RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["nI", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "-", 
                    RowBox[{"2", " ", "nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "Y"}], " ", "zI", " ", "\[Delta]"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["b", "2"], " ", "Y", " ", "zI", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                    RowBox[{"Y", " ", "zI", " ", 
                    SuperscriptBox["\[Delta]", "2"]}], "-", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
                    SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}], ")"}]}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9, 
   3.71138662485823*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nR"}], " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "znR", " ", 
         SuperscriptBox["\[Tau]I", "2"]}], "+", 
        RowBox[{"nI", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
         "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "3"], " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "zR", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
         "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "b", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Tau]R", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                 "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
       ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "znR", " ", 
        SuperscriptBox["\[Tau]I", "2"]}], "-", 
       RowBox[{"nI", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
        "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
        "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "3"], " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "zR", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
        "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "b", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                  RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                  RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                 ")"}]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}]}],
   "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9, 3.696685845362069*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nR"}], " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "znR", " ", 
         SuperscriptBox["\[Tau]I", "2"]}], "+", 
        RowBox[{"nI", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
         "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "3"], " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "zR", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
         "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "b", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Tau]R", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                 "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
       ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "znR", " ", 
        SuperscriptBox["\[Tau]I", "2"]}], "-", 
       RowBox[{"nI", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
        "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
        "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "3"], " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "zR", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
        "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "b", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                  RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                  RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                 ")"}]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}]}],
   "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9, 3.6963577762054834`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nR"}], " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "znR", " ", 
         SuperscriptBox["\[Tau]I", "2"]}], "+", 
        RowBox[{"nI", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
         "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "3"], " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "zR", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
         "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "b", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Tau]R", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                 "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
       ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "znR", " ", 
        SuperscriptBox["\[Tau]I", "2"]}], "-", 
       RowBox[{"nI", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
        "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
        "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "3"], " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "zR", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
        "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "b", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                  RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                  RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                 ")"}]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}]}],
   "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9, 
   3.6962735765425987`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nR"}], " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "znR", " ", 
         SuperscriptBox["\[Tau]I", "2"]}], "+", 
        RowBox[{"nI", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
         "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "3"], " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "zR", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
         "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "b", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Tau]R", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                 "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
       ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "znR", " ", 
        SuperscriptBox["\[Tau]I", "2"]}], "-", 
       RowBox[{"nI", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
        "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
        "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "3"], " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "zR", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
        "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "b", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                  RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                  RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                 ")"}]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}]}],
   "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9, 3.6954779758728848`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nR"}], " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "znR", " ", 
         SuperscriptBox["\[Tau]I", "2"]}], "+", 
        RowBox[{"nI", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
         "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "3"], " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "zR", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
         "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "b", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Tau]R", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                 "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
       ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "znR", " ", 
        SuperscriptBox["\[Tau]I", "2"]}], "-", 
       RowBox[{"nI", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
        "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
        "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "3"], " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "zR", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
        "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "b", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                  RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                  RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                 ")"}]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}]}],
   "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9, 3.695476566133252*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nR"}], " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "znR", " ", 
         SuperscriptBox["\[Tau]I", "2"]}], "+", 
        RowBox[{"nI", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
         "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "3"], " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "zR", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
         "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "b", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Tau]R", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                 "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
       ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "znR", " ", 
        SuperscriptBox["\[Tau]I", "2"]}], "-", 
       RowBox[{"nI", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
        "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
        "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "3"], " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "zR", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
        "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "b", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                  RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                  RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                 ")"}]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}]}],
   "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9, 
   3.6949847361523867`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", "b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "nR"}], " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "znR", " ", 
         SuperscriptBox["\[Tau]I", "2"]}], "+", 
        RowBox[{"nI", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
         "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "3"], " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
        RowBox[{"b", " ", 
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "zR", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
         SuperscriptBox["Y", "2"], " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"2", " ", "b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{
        "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
         "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", "b", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                RowBox[{"b", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                  ")"}]}]}], ")"}], " ", 
              SuperscriptBox["\[Tau]R", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                 "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
       ")"}]}]}]}], ",", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", "b", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nR", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "znR", " ", 
        SuperscriptBox["\[Tau]I", "2"]}], "-", 
       RowBox[{"nI", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
        "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
        "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "3"], " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"b", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "zR", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{"2", " ", "b", " ", "Y", " ", 
        SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
       RowBox[{
       "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", " ", 
        "\[Kappa]", " ", 
        SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["Y", "2"], " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", "b", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
               RowBox[{"b", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                  RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                  RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                 ")"}]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"nI", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}]}],
   "}"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6912715101753373`*^9, 3.6912715283649693`*^9}, 
   3.6913311321521034`*^9, 3.6913351718486643`*^9, {3.691335489017912*^9, 
   3.691335511433754*^9}, 3.691435181965123*^9, 3.6914354219437456`*^9, 
   3.6936671620376873`*^9, 3.69383434042131*^9, 3.6942874451756244`*^9, 
   3.6944416448454437`*^9, 3.694453689286852*^9, 3.6944537377929883`*^9}]
}, Closed]],

Cell[TextData[{
 StyleBox["Biological Validity:",
  FontWeight->"Bold"],
 StyleBox[" Once again the condition for biological validity is dermined by \
the constant term of the quadratic for ie1[1,2]",
  FontWeight->"Plain"]
}], "Text",
 CellChangeTimes->{{3.6912715305343733`*^9, 3.6912715564148183`*^9}, 
   3.691440194239335*^9, {3.693659860630859*^9, 3.693659867562672*^9}, {
   3.6936601793299313`*^9, 3.69366020553518*^9}, {3.694453650753784*^9, 
   3.694453674622826*^9}, 3.6944537377929883`*^9},
 FontWeight->"Bold"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"EquiList", "/.", "subC2"}], "/.", "subse2"}], "/.", 
       "subse1"}], ")"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ie1", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.694453757605023*^9, 3.694453779041461*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"b", " ", "\[Delta]"}], 
   RowBox[{"Y", " ", "zI"}]], "-", 
  FractionBox[
   RowBox[{"b", " ", 
    SuperscriptBox["\[Delta]", "2"], " ", "\[Kappa]"}], 
   RowBox[{
    SuperscriptBox["Y", "2"], " ", 
    SuperscriptBox["zI", "2"]}]], "-", 
  FractionBox[
   RowBox[{"b", " ", 
    SuperscriptBox["nI", "2"], " ", "\[Kappa]"}], 
   RowBox[{
    SuperscriptBox["Y", "2"], " ", 
    SuperscriptBox["zI", "2"], " ", 
    SuperscriptBox["\[Tau]I", "2"]}]], "+", 
  FractionBox[
   RowBox[{"b", " ", "nI"}], 
   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "b", " ", "nI", " ", "\[Delta]", " ", "\[Kappa]"}], 
   RowBox[{
    SuperscriptBox["Y", "2"], " ", 
    SuperscriptBox["zI", "2"], " ", "\[Tau]I"}]], "-", 
  FractionBox[
   RowBox[{"d", " ", 
    RowBox[{"(", 
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
   RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
     FractionBox[
      RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]"}], "Y"], "-", 
     FractionBox[
      RowBox[{"b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]"}], 
      RowBox[{"Y", " ", "zI"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", "\[Kappa]"}], 
      RowBox[{"Y", " ", "zI"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", "nI", " ", "\[Kappa]"}], 
      RowBox[{"Y", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", "nI", " ", "zR", " ", "\[Kappa]"}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", "nI", " ", 
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], "\[Tau]I"], "+", 
     FractionBox[
      RowBox[{"nR", " ", "znR"}], "\[Tau]R"]}], ")"}], " ", 
   RowBox[{"ie1", "[", 
    RowBox[{"1", ",", "2"}], "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "b"}], " ", "zI", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}], "-", 
     RowBox[{"b", " ", "zR", " ", 
      RowBox[{"(", 
       RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{{3.6944537682442417`*^9, 3.6944537796030617`*^9}, 
   3.694984736286394*^9, 3.6954765662622595`*^9, 3.6954779759698906`*^9, 
   3.6962735766496053`*^9, 3.696357776278487*^9, 3.6966858454360733`*^9, 
   3.711386624939183*^9, 3.711386861612468*^9, 3.7131809432293663`*^9, 
   3.713190780167097*^9, 3.713202643589375*^9, 3.71320439613455*^9, 
   3.713364457667821*^9, 3.714149783249889*^9, 3.714211346525095*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"b", " ", "\[Delta]"}], 
      RowBox[{"Y", " ", "zI"}]], "-", 
     FractionBox[
      RowBox[{"b", " ", 
       SuperscriptBox["\[Delta]", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"]}]], "-", 
     FractionBox[
      RowBox[{"b", " ", 
       SuperscriptBox["nI", "2"], " ", "\[Kappa]"}], 
      RowBox[{
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", 
       SuperscriptBox["\[Tau]I", "2"]}]], "+", 
     FractionBox[
      RowBox[{"b", " ", "nI"}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"2", " ", "b", " ", "nI", " ", "\[Delta]", " ", "\[Kappa]"}], 
      RowBox[{
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", "\[Tau]I"}]], "-", 
     FractionBox[
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], ")"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "b"}], " ", "zI", " ", 
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}], "-", 
      RowBox[{"b", " ", "zR", " ", 
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}], " "}]], 
  "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.694453791646283*^9, 3.6944538042943363`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nI", " ", "\[Kappa]"}], "-", 
        RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
        RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], ")"}]}]}], 
    ")"}]}], 
  RowBox[{"b", " ", 
   SuperscriptBox["Y", "2"], " ", 
   SuperscriptBox["zI", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
   SuperscriptBox["\[Tau]I", "2"]}]]], "Output",
 CellChangeTimes->{3.6944538050431376`*^9, 3.6949847363563986`*^9, 
  3.695476566339264*^9, 3.6954779760188932`*^9, 3.696273576698608*^9, 
  3.696357776316489*^9, 3.696685845473075*^9, 3.711386625013001*^9, 
  3.7113868616669493`*^9, 3.713180943289357*^9, 3.7131907803162193`*^9, 
  3.713202643677409*^9, 3.7132043962209473`*^9, 3.713364457734042*^9, 
  3.714149783304859*^9, 3.7142113465753403`*^9}]
}, Closed]],

Cell["\<\
For this constant term to be negative (and hence only one equilibrium \
biologically valid) occurs at the critical point:\
\>", "Text",
 CellChangeTimes->{{3.6944538125477505`*^9, 3.694453858959832*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nI", " ", "\[Kappa]"}], "-", 
            RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
            RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
           ")"}]}]}], ")"}], "/.", "zsub"}], ")"}], "\[Equal]", "0"}], ",", 
    "Y"}], "]"}], "//", "Flatten"}]], "Input",
 CellChangeTimes->{{3.6944538624230385`*^9, 3.694453932919963*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Y", "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"b", " ", "\[Delta]", " ", "\[Kappa]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "d"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
       ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.694453868460249*^9, 3.694453933559564*^9}, 
   3.6949847364184017`*^9, 3.695476566408268*^9, 3.695477976060896*^9, 
   3.69627357674061*^9, 3.6963577763514915`*^9, 3.696685845507077*^9, 
   3.711386625074568*^9, 3.71138686172619*^9, 3.71318094336758*^9, 
   3.71319078048359*^9, 3.713202643760016*^9, 3.713204396304191*^9, 
   3.71336445778097*^9, 3.7141497833547077`*^9, 3.714211346631074*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Two infection types present", "Subsection",
 CellChangeTimes->{{3.6912715870074725`*^9, 3.691271594901086*^9}, {
  3.691273082431703*^9, 3.6912730843661065`*^9}}],

Cell[TextData[{
 "There are three possibilities of two infection types 1) ie1[h,p], ie1[h,p\
\[CloseCurlyQuote]]",
 StyleBox[" (two types of parasites) ",
  FontColor->GrayLevel[0]],
 " 2) ie1[h,p], ie1[h\[CloseCurlyQuote],p]",
 StyleBox[" (two types of hosts) ",
  FontColor->GrayLevel[0]],
 "or  3) ie1[h,p], ie1[h\[CloseCurlyQuote],p\[CloseCurlyQuote]]",
 StyleBox[" (perfect matching- which will never exist unless Y=0 and hence is \
not considered).",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.6912716196447296`*^9, 3.6912716974450665`*^9}, {
   3.691327376907937*^9, 3.691327383740749*^9}, 3.691440198482543*^9, {
   3.691778873040196*^9, 3.691778908275188*^9}, 3.691778981575856*^9, {
   3.6933326555445614`*^9, 3.693332682873124*^9}}],

Cell[TextData[StyleBox["Option 1: ie1[h,p]\[NotEqual]0 or ie1[h,p\
\[CloseCurlyQuote]]\[NotEqual]0, Ex. ie1[1,1]\[NotEqual]0 or ie1[1,2]\
\[NotEqual]0",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69127170494868*^9, 3.6912717558937697`*^9}, 
   3.691271787220625*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"subD1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6912717803098125`*^9, 3.6912717936166363`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", "subD1"}]], "Input",
 CellChangeTimes->{{3.691271798530645*^9, 3.6912718080466614`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "+", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "d"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "-", 
    RowBox[{"zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Y", " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"X", " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"se", "[", "2", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{"Y", " ", "zI", " ", 
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}], ",", 
   RowBox[{"X", " ", "zI", " ", 
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "2"}], "]"}], " ", 
    RowBox[{"se", "[", "2", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.691271803117053*^9, 3.691271808327462*^9}, 
   3.691331132261304*^9, 3.691335171978665*^9, 3.691335489221712*^9, 
   3.69133551926577*^9, 3.693667162302888*^9, 3.69383434056171*^9, 
   3.6942874453466344`*^9, 3.6944416451262445`*^9, 3.694984736495406*^9, 
   3.695476566479272*^9, 3.6954779761098986`*^9, 3.6962735767886133`*^9, 
   3.696357776395494*^9, 3.6966858455520797`*^9, 3.7113866251758747`*^9, 
   3.711386861853962*^9, 3.713180943463462*^9, 3.7131907806952047`*^9, 
   3.713202643872068*^9, 3.713204396421668*^9, 3.713364457866682*^9, 
   3.7141497834346867`*^9, 3.714211346702016*^9}]
}, Closed]],

Cell["Solving equation 6 for se[2]", "Text",
 CellChangeTimes->{{3.6912718209030843`*^9, 3.6912718307311015`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EquiList", "/.", "subD1"}], ")"}], "[", 
        RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.691271833601506*^9, 3.6912718725245748`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6912718627277575`*^9, 3.691271873086176*^9}, 
   3.691271922165862*^9, 3.6913311322925034`*^9, 3.691335172008665*^9, 
   3.691335489268512*^9, 3.69133551931257*^9, 3.693667162365288*^9, 
   3.6938343405929103`*^9, 3.6942874453816366`*^9, 3.694441645173044*^9, 
   3.6949847365534096`*^9, 3.6954765665382757`*^9, 3.695477976150901*^9, 
   3.6962735768266153`*^9, 3.696357776427496*^9, 3.6966858455860815`*^9, 
   3.711386625246614*^9, 3.711386861909049*^9, 3.713180943522621*^9, 
   3.713190780799808*^9, 3.713202643959857*^9, 3.713204396509303*^9, 
   3.713364457916253*^9, 3.714149783487797*^9, 3.71421134675801*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiList", "/.", "subD1"}], "/.", "subse2"}]], "Input",
 CellChangeTimes->{{3.6912718826645927`*^9, 3.6912718830701933`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "+", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"Y", " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", "0", 
   ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}]}], "+", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "2"}], "]"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6912718835381947`*^9, 3.691331132323704*^9, 
  3.691335172038665*^9, 3.691335489315312*^9, 3.69133551935937*^9, 
  3.693667162427688*^9, 3.69383434062411*^9, 3.694287445415638*^9, 
  3.694441645219845*^9, 3.6949847366104136`*^9, 3.6954765665972786`*^9, 
  3.695477976193903*^9, 3.6962735768626175`*^9, 3.6963577764614973`*^9, 
  3.6966858456190834`*^9, 3.711386625312769*^9, 3.7113868619681664`*^9, 
  3.713180943596418*^9, 3.7131907809829884`*^9, 3.713202644043277*^9, 
  3.7132043965937557`*^9, 3.7133644579666452`*^9, 3.7141497835387363`*^9, 
  3.7142113468132267`*^9}]
}, Closed]],

Cell["Solving equation 4 for se[1]", "Text",
 CellChangeTimes->{{3.691271896379017*^9, 3.6912719039918303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EquiList", "/.", "subD1"}], "/.", "subse2"}], ")"}], "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.691271833601506*^9, 3.6912718725245748`*^9}, {
  3.6912719124626455`*^9, 3.6912719204342594`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
    RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6912719184530554`*^9, 3.691271923273464*^9}, 
   3.6913311323549037`*^9, 3.6913351720686646`*^9, 3.691335489362112*^9, 
   3.69133551940617*^9, 3.6936671624900885`*^9, 3.69383434068651*^9, 
   3.69428744544764*^9, 3.6944416452666445`*^9, 3.6949847366694164`*^9, 
   3.6954765666562824`*^9, 3.6954779762359056`*^9, 3.6962735768986197`*^9, 
   3.6963577764934998`*^9, 3.6966858456520853`*^9, 3.7113866253744993`*^9, 
   3.71138686202663*^9, 3.713180943635688*^9, 3.7131907811499033`*^9, 
   3.713202644128694*^9, 3.713204396677524*^9, 3.7133644580699673`*^9, 
   3.714149783586721*^9, 3.714211346863297*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"EquiList", "/.", "subD1"}], "/.", "subse2"}], "/.", "subse1"}], 
   ")"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912719371896887`*^9, 3.6912719436324997`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "d"}], " ", "Y", " ", "zI", " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "+", 
      RowBox[{"nR", " ", 
       SuperscriptBox["Y", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", "znR", " ", 
       SuperscriptBox["\[Tau]I", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ie1", "[", 
          RowBox[{"1", ",", "1"}], "]"}], "+", 
         RowBox[{"ie1", "[", 
          RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "-", 
      RowBox[{"Y", " ", 
       SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"X", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}]}], "+", 
         RowBox[{"Y", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "2"}], "]"}]}]}], ")"}]}], "+", 
      RowBox[{"b", " ", "\[Tau]R", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", 
         RowBox[{"Y", " ", "zI", " ", 
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "1"}], "]"}], "+", 
            RowBox[{"ie1", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "-", 
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", 
            RowBox[{"Y", " ", "zI", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "1"}], "]"}], "+", 
               RowBox[{"ie1", "[", 
                RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", "0", ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"X", "-", "Y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], 
    RowBox[{"Y", " ", "\[Tau]I"}]], ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.691271940247294*^9, 3.691271944209701*^9}, 
   3.6913311324641037`*^9, 3.691335172168665*^9, {3.6913354894869127`*^9, 
   3.6913355194373703`*^9}, 3.6936671626460886`*^9, 3.6938343408269105`*^9, 
   3.6942874455936484`*^9, 3.6944416453914447`*^9, 3.694984736801424*^9, 
   3.69547656679429*^9, 3.695477976355912*^9, 3.696273577011626*^9, 
   3.696357776603506*^9, 3.6966858457610917`*^9, 3.711386625449011*^9, 
   3.711386862117701*^9, 3.713180943714101*^9, 3.713190781435955*^9, 
   3.713202644212139*^9, 3.713204396758884*^9, 3.713364458138351*^9, 
   3.71414978365384*^9, 3.714211346946822*^9}]
}, Closed]],

Cell["\<\
equation 3 is only satisfied by ie1[1,1]=0 which is not allowed by the \
assumptions of this search.\
\>", "Text",
 CellChangeTimes->{{3.6912719699849467`*^9, 3.6912719934941883`*^9}, 
   3.691440208875161*^9}],

Cell[TextData[StyleBox["Option 2: ie1[h,p]\[NotEqual]0 or ie1[h\
\[CloseCurlyQuote],p]\[NotEqual]0, Ex. ie1[1,1]\[NotEqual]0 or ie1[2,1]\
\[NotEqual]0",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69127170494868*^9, 3.6912717558937697`*^9}, 
   3.691271787220625*^9, {3.6912720045546074`*^9, 3.6912720169732294`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"subD2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6912717803098125`*^9, 3.6912717936166363`*^9}, {
  3.691272027097647*^9, 3.691272041527673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "/.", "subD2"}]], "Input",
 CellChangeTimes->{{3.691271798530645*^9, 3.6912718080466614`*^9}, 
   3.691272035038061*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "2", "]"}]}], "-", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "2", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          RowBox[{"se", "[", "1", "]"}], "+", 
          RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "+", 
    RowBox[{"Y", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "2", "]"}]}]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.691271803117053*^9, 3.691271808327462*^9}, 
   3.6912720570049*^9, 3.691331132495304*^9, 3.691335172198665*^9, {
   3.6913354895337124`*^9, 3.69133551949977*^9}, 3.6936671627084885`*^9, 
   3.6938343408737106`*^9, 3.6942874456346507`*^9, 3.694441645453845*^9, 
   3.6949847368694277`*^9, 3.695476566883295*^9, 3.695477976404915*^9, 
   3.6962735770596285`*^9, 3.6963577766475086`*^9, 3.696685845806094*^9, 
   3.711386625542254*^9, 3.7113868622091722`*^9, 3.713180943782447*^9, 
   3.713190781533845*^9, 3.713202644324085*^9, 3.713204396913889*^9, 
   3.713364458229772*^9, 3.714149783734536*^9, 3.71421134704432*^9}]
}, Closed]],

Cell["Solving equation 5 for se[2]", "Text",
 CellChangeTimes->{{3.6912720761929336`*^9, 3.6912720824017444`*^9}, 
   3.691440215630973*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EquiList", "/.", "subD2"}], ")"}], "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"se", "[", "2", "]"}]}], "]"}], "//", "Flatten"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.691272085989751*^9, 3.6912721156776032`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"nI", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}]}], 
    RowBox[{
     RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "+", 
     RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.691272099063574*^9, 3.6912721161144037`*^9}, 
   3.691331132526504*^9, 3.6913351722286654`*^9, {3.6913354897053127`*^9, 
   3.6913355195465703`*^9}, 3.693667162770889*^9, 3.693834340904911*^9, 
   3.6942874456676526`*^9, 3.694441645500645*^9, 3.694984736927431*^9, 
   3.695476566947299*^9, 3.695477976447918*^9, 3.696273577096631*^9, 
   3.6963577766825104`*^9, 3.696685845841096*^9, 3.7113866256083307`*^9, 
   3.711386862267083*^9, 3.713180943840026*^9, 3.713190781618759*^9, 
   3.713202644409143*^9, 3.713204396995224*^9, 3.713364458283518*^9, 
   3.714149783787854*^9, 3.714211347191534*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"EquiList", "/.", "subD2"}], "/.", "subse2"}], ")"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.691272122588415*^9, 3.6912721274088235`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    RowBox[{"d", " ", 
     RowBox[{"se", "[", "1", "]"}]}], "-", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"nI", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}], "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}]}]], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], "\[Tau]I"]}], "+", 
    FractionBox[
     RowBox[{"nR", " ", "znR", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "\[Tau]R"], "-", 
    FractionBox[
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], 
     RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "+", 
        RowBox[{"ie1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]], "+", 
    RowBox[{"b", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], " ", 
        RowBox[{"ie1", "[", 
         RowBox[{"2", ",", "1"}], "]"}]}], "+", 
       FractionBox[
        RowBox[{
         RowBox[{"nI", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "1"}], "]"}]}], "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "1"}], "]"}]}]}], 
        RowBox[{
         RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}]}], "+", 
         RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "1"}], "]"}]}]}]]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"\[Kappa]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"1", ",", "1"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], " ", 
           RowBox[{"ie1", "[", 
            RowBox[{"2", ",", "1"}], "]"}]}], "+", 
          FractionBox[
           RowBox[{
            RowBox[{"nI", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}], "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}]}], 
           RowBox[{
            RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}]}], "+", 
            RowBox[{"Y", " ", "zI", " ", "\[Tau]I", " ", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}]}]], "+", 
          RowBox[{"se", "[", "1", "]"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
     RowBox[{"ie1", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "+", 
    RowBox[{"X", " ", "zI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}]}]}], ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.691272123243616*^9, 3.691272128095225*^9}, 
   3.6913311327449045`*^9, 3.6913351724486656`*^9, {3.691335489939313*^9, 
   3.6913355195933704`*^9}, 3.693667163020489*^9, 3.6938343411389112`*^9, 
   3.694287445900666*^9, 3.6944416457502456`*^9, 3.694984737190446*^9, 
   3.6954765672573166`*^9, 3.6954779766789308`*^9, 3.696273577360646*^9, 
   3.6963577769135237`*^9, 3.696685846099111*^9, 3.711386625831312*^9, 
   3.711386862489237*^9, 3.713180944052527*^9, 3.713190781846861*^9, 
   3.713202644627445*^9, 3.7132043972121267`*^9, 3.713364458513514*^9, 
   3.714149783999763*^9, 3.714211347429224*^9}]
}, Closed]],

Cell["Solving equation 3 for se[1]", "Text",
 CellChangeTimes->{{3.6912721369112406`*^9, 3.6912721434320517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subse1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EquiList", "/.", "subD2"}], "/.", "subse2"}], ")"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"se", "[", "1", "]"}]}], "]"}], "//", "Flatten"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.691272085989751*^9, 3.6912721156776032`*^9}, {
  3.691272156442475*^9, 3.6912721689390965`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"nI", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}]}], 
    RowBox[{
     RowBox[{"X", " ", "zI", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "+", 
     RowBox[{"X", " ", "zI", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.691272099063574*^9, 3.6912721161144037`*^9}, 
   3.6912721698438983`*^9, 3.6913311327761045`*^9, 3.6913351724786654`*^9, {
   3.6913354899861135`*^9, 3.69133551964017*^9}, 3.6936671630672894`*^9, 
   3.693834341170111*^9, 3.6942874459386683`*^9, 3.6944416457970457`*^9, 
   3.694984737295452*^9, 3.6954765673733234`*^9, 3.695477976720933*^9, 
   3.696273577402648*^9, 3.6963577769475255`*^9, 3.6966858461321125`*^9, 
   3.711386625891797*^9, 3.7113868625302896`*^9, 3.713180944093721*^9, 
   3.713190781919282*^9, 3.7132026447390213`*^9, 3.713204397339641*^9, 
   3.713364458550515*^9, 3.7141497840542393`*^9, 3.7142113475072412`*^9}]
}, Closed]],

Cell["\<\
Given the quadratic in both ie1[1,1] and ie1[2,1], instead we solve for a \
parameter that is linear (b)\
\>", "Text",
 CellChangeTimes->{{3.6912725633675904`*^9, 3.6912725857400293`*^9}, {
  3.6912727122914524`*^9, 3.6912727361926947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subb", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EquiList", "/.", "subD2"}], "/.", "subse2"}], "/.", 
          "subse1"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", "b"}], "]"}], 
    "//", "Simplify"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.691272616005083*^9, 3.691272648952341*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", "\[Rule]", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"X", " ", "Y", " ", "zI", " ", "\[Tau]I", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}], "+", 
          RowBox[{"ie1", "[", 
           RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"d", " ", 
           RowBox[{"(", 
            RowBox[{"nI", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], 
          "-", 
          RowBox[{"X", " ", "zI", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"nR", " ", "znR", " ", "\[Tau]I"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nI", "+", 
                RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
              "\[Tau]R"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ie1", "[", 
              RowBox[{"1", ",", "1"}], "]"}], "+", 
             RowBox[{"ie1", "[", 
              RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}]}], ")"}], 
      "/", 
      RowBox[{"(", 
       RowBox[{"\[Tau]R", " ", 
        RowBox[{"(", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{"\[Delta]", "+", 
             RowBox[{"X", " ", "zI", " ", 
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ie1", "[", 
                 RowBox[{"1", ",", "1"}], "]"}], "+", 
                RowBox[{"ie1", "[", 
                 RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
         ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"nI", " ", "\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", 
              RowBox[{"ie1", "[", 
               RowBox[{"1", ",", "1"}], "]"}]}], "+", 
             RowBox[{"X", " ", 
              RowBox[{"ie1", "[", 
               RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"\[Tau]I", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Y", " ", "\[Delta]", " ", "\[Kappa]", " ", 
              RowBox[{"ie1", "[", 
               RowBox[{"1", ",", "1"}], "]"}]}], "+", 
             RowBox[{"X", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Delta]", " ", "\[Kappa]", " ", 
                 RowBox[{"ie1", "[", 
                  RowBox[{"2", ",", "1"}], "]"}]}], "+", 
                RowBox[{"Y", " ", "zI", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"ie1", "[", 
                    RowBox[{"1", ",", "1"}], "]"}], "+", 
                   RowBox[{"ie1", "[", 
                    RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"zI", " ", "\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ie1", "[", 
                    RowBox[{"1", ",", "1"}], "]"}], "+", 
                    RowBox[{"ie1", "[", 
                    RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}], "+", 
                   RowBox[{"zR", " ", "\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"ie1", "[", 
                    RowBox[{"1", ",", "1"}], "]"}], "+", 
                    RowBox[{"ie1", "[", 
                    RowBox[{"2", ",", "1"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.691272622260694*^9, 3.691272649529542*^9}, 
   3.6913311329633045`*^9, 3.6913351726786656`*^9, {3.6913354902357135`*^9, 
   3.6913355196869707`*^9}, 3.69366716337929*^9, 3.693834341404112*^9, 
   3.694287446181682*^9, 3.694441646031046*^9, 3.6949847375454664`*^9, 
   3.695476567650339*^9, 3.695477976946946*^9, 3.696273577632661*^9, 
   3.69635777720354*^9, 3.696685846361126*^9, 3.711386626217751*^9, 
   3.7113868626671133`*^9, 3.713180944293057*^9, 3.713190782124971*^9, 
   3.71320264494663*^9, 3.713204397548314*^9, 3.713364458760436*^9, 
   3.714149784255603*^9, 3.7142113478390493`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"EquiList", "/.", "subD2"}], "/.", "subse2"}], "/.", 
       "subse1"}], "/.", "subb"}], "//", "Simplify"}], ")"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "//", "Factor"}]], "Input",
 CellChangeTimes->{{3.6912726568011546`*^9, 3.6912726923858175`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"X", "-", "Y"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "nR"}], " ", "znR", " ", "\[Tau]I"}], "+", 
     RowBox[{"nI", " ", "\[Tau]R"}], "-", 
     RowBox[{"d", " ", "zI", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
     RowBox[{"d", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}]}], ")"}], " ", 
   RowBox[{"ie1", "[", 
    RowBox[{"2", ",", "1"}], "]"}]}], 
  RowBox[{"Y", " ", "\[Tau]I", " ", "\[Tau]R", " ", 
   RowBox[{"(", 
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", 
     RowBox[{"X", " ", 
      SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "+", 
     RowBox[{"X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "+", 
     RowBox[{"X", " ", 
      SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "+", 
     RowBox[{"X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.6912726590787587`*^9, 3.691272692822618*^9}, 
   3.691331133088105*^9, 3.691335172788666*^9, {3.6913354904073143`*^9, 
   3.6913355197337704`*^9}, 3.69366716351969*^9, 3.693834341513312*^9, 
   3.6942874463356905`*^9, 3.694441646265046*^9, 3.694984737693475*^9, 
   3.6954765677983475`*^9, 3.6954779771239567`*^9, 3.6962735778236723`*^9, 
   3.696357777326547*^9, 3.696685846480133*^9, 3.711386626325562*^9, 
   3.7113868627702303`*^9, 3.713180944451009*^9, 3.713190782227627*^9, 
   3.713202645056978*^9, 3.713204397656452*^9, 3.713364458913309*^9, 
   3.7141497843979797`*^9, 3.714211347980571*^9}]
}, Closed]],

Cell["\<\
This requires that ie1[2,1]=0 which is not allowed for this search.\
\>", "Text",
 CellChangeTimes->{{3.691272747346714*^9, 3.6912727664411473`*^9}}],

Cell[TextData[StyleBox["Hence there are no possible solutions in which there \
are only two infection types. ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6912730372364235`*^9, 3.6912730610440655`*^9}, 
   3.6914402374720116`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Three infection types present", "Subsection",
 CellChangeTimes->{{3.6912730717456846`*^9, 3.6912730911365185`*^9}}],

Cell["\<\
Given that three infection types are present the fourth type can always arise \
as both host and both pathogen types will be present and neither X nor Y can \
be 0, hence there will be no equilibria of this form.\
\>", "Text",
 CellChangeTimes->{{3.691273227408758*^9, 3.691273345642767*^9}, {
  3.691273379323226*^9, 3.691273448217947*^9}, {3.6933333674012995`*^9, 
  3.6933333999187565`*^9}, {3.6933334415268316`*^9, 3.6933334919365377`*^9}, {
  3.693659896137534*^9, 3.6936598963397355`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["All infection types present", "Subsection",
 CellChangeTimes->{{3.691273954770838*^9, 3.691273959092046*^9}}],

Cell[TextData[StyleBox["By assuming a symmetric matching model where \
infection from either pathogen to the matching host is the same,  \
\[Beta][1,1]=\[Beta][2,2]=X, as is the probability of infection to a \
non-matching host, \[Beta][1,2]=\[Beta][2,1]=Y, we expect a symmetric \
equilibrium to exist such that ie1[1,1]=ie1[2,2]=equX and \
ie1[1,2]=ie1[1,2]=equY and se[1]=se[2]=sequ",
 FontColor->GrayLevel[0]]], "Text",
 CellChangeTimes->{{3.691779480731317*^9, 3.691779533760144*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubSym", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "equX"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "equX"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "equY"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "equY"}], ",", 
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", "sequ"}], ",", 
     RowBox[{
      RowBox[{"se", "[", "2", "]"}], "\[Rule]", "sequ"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.691274111821314*^9, 3.691274195440461*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"sequ", "[", "1", "]"}], "+", 
         RowBox[{"zI", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}]}], "+", 
         RowBox[{"zR", " ", 
          RowBox[{"ie1", "[", 
           RowBox[{"1", ",", "1"}], "]"}]}]}], ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"sequ", "[", "1", "]"}], "\[Rule]", 
          FractionBox["1", 
           RowBox[{"X", " ", "\[Tau]I"}]]}], ",", 
         RowBox[{"zI", "\[Rule]", "nI"}], ",", 
         RowBox[{"zR", "->", 
          FractionBox[
           RowBox[{"nI", " ", "\[Tau]R"}], "\[Tau]I"]}], ",", 
         RowBox[{"znR", "->", 
          FractionBox[
           RowBox[{"nI", " ", "\[Tau]R"}], 
           RowBox[{"nR", " ", "\[Tau]I"}]]}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "\[Rule]", "0"}], ",", 
        RowBox[{"d", "\[Rule]", "0"}], ",", 
        RowBox[{"\[Delta]", "\[Rule]", "0"}]}], "}"}]}], ")"}], "\[Equal]", 
    "Ntot"}], ",", 
   RowBox[{"ie1", "[", 
    RowBox[{"1", ",", "1"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.720559646861991*^9, 3.720559816223219*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ie1", "[", 
     RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"Ntot", " ", "X", " ", "\[Tau]I"}]}], 
     RowBox[{"nI", " ", "X", " ", 
      RowBox[{"(", 
       RowBox[{"\[Tau]I", "+", "\[Tau]R"}], ")"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7205597824658213`*^9, 3.7205598166329737`*^9}}]
}, Closed]],

Cell["Solving equation 6 for sequ", "Text",
 CellChangeTimes->{{3.691274221728507*^9, 3.691274232882527*^9}, 
   3.6912742683579893`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubSe", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"EquiList", "/.", "SubSym"}], ")"}], "[", 
       RowBox[{"[", "6", "]"}], "]"}], "\[Equal]", "0"}], ",", "sequ"}], 
    "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6912742394813385`*^9, 3.6912742844592175`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"sequ", "\[Rule]", 
   FractionBox[
    RowBox[{"equX", " ", 
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"equX", "+", "equY"}], ")"}], " ", "X", " ", "zI", " ", 
     "\[Tau]I"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6912742581243715`*^9, 3.6912742848960185`*^9}, 
   3.6913311344141073`*^9, 3.6913351741086674`*^9, 3.691335492163319*^9, 
   3.691335525052781*^9, 3.693660347185097*^9, 3.6936671636756907`*^9, 
   3.693834341669312*^9, 3.694287446462698*^9, 3.694441646405447*^9, 
   3.6949847378664846`*^9, 3.6954765684583855`*^9, 3.695477977261964*^9, 
   3.6962735779566803`*^9, 3.696357777481556*^9, 3.6966858466331415`*^9, 
   3.7113866264945593`*^9, 3.7113868629249783`*^9, 3.713180944600348*^9, 
   3.71319078242679*^9, 3.713202645264566*^9, 3.713204397892852*^9, 
   3.7133644590642233`*^9, 3.7141497845444117`*^9, 3.714211348142544*^9, 
   3.72055196615217*^9, 3.720618361651902*^9, {3.720618420023486*^9, 
   3.720618428484852*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"EquiList", "/.", "SubSym"}], "/.", "SubSe"}], ")"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.691274294412035*^9, 3.6912743080620594`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", 
      SuperscriptBox["X", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"equX", "+", "equY"}], ")"}], "3"], " ", "nR", " ", 
       SuperscriptBox["X", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", "znR", " ", 
       SuperscriptBox["\[Tau]I", "2"]}], "-", 
      RowBox[{"d", " ", "equX", " ", 
       RowBox[{"(", 
        RowBox[{"equX", "+", "equY"}], ")"}], " ", "X", " ", "zI", " ", 
       "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "-", 
      RowBox[{"equX", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", "X", " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", 
       SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", "X", " ", "zI", 
          " ", 
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
         RowBox[{"equX", " ", 
          RowBox[{"(", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"equX", "+", "equY"}], ")"}], " ", "X", " ", "zI", " ", 
          "\[Tau]I"}], "-", 
         RowBox[{"2", " ", "\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", "X", " ", 
             "zI", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
            RowBox[{"equX", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], " ", "\[Tau]R"}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", 
      SuperscriptBox["X", "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"equX", "+", "equY"}], ")"}], "3"], " ", "nR", " ", 
       SuperscriptBox["X", "2"], " ", 
       SuperscriptBox["zI", "2"], " ", "znR", " ", 
       SuperscriptBox["\[Tau]I", "2"]}], "-", 
      RowBox[{"d", " ", "equX", " ", 
       RowBox[{"(", 
        RowBox[{"equX", "+", "equY"}], ")"}], " ", "X", " ", "zI", " ", 
       "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "-", 
      RowBox[{"equX", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", "X", " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", 
       SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", "X", " ", "zI", 
          " ", 
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
         RowBox[{"equX", " ", 
          RowBox[{"(", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"equX", "+", "equY"}], ")"}], " ", "X", " ", "zI", " ", 
          "\[Tau]I"}], "-", 
         RowBox[{"2", " ", "\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"equX", "+", "equY"}], ")"}], "2"], " ", "X", " ", 
             "zI", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
            RowBox[{"equX", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], " ", "\[Tau]R"}]}], ")"}]}], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"equY", " ", "X"}], "-", 
        RowBox[{"equX", " ", "Y"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
     RowBox[{"X", " ", "\[Tau]I"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"equY", " ", "X"}], "-", 
        RowBox[{"equX", " ", "Y"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], 
     RowBox[{"X", " ", "\[Tau]I"}]]}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6912743038344517`*^9, 3.6912743091540613`*^9}, 
   3.691331134772908*^9, 3.6913351744486685`*^9, 3.6913354925377197`*^9, 
   3.6913355250839806`*^9, 3.6936603499623027`*^9, 3.6936671640188913`*^9, 
   3.693834341996913*^9, 3.69428744684972*^9, 3.694441646748647*^9, 
   3.6949847382145047`*^9, 3.6954765688094053`*^9, 3.6954779775909834`*^9, 
   3.696273578281698*^9, 3.696357777818575*^9, 3.69668584695916*^9, 
   3.7113866266868343`*^9, 3.7113868630657682`*^9, 3.713180944783036*^9, 
   3.7131907826057158`*^9, 3.713202645461019*^9, 3.713204398084697*^9, 
   3.713364459248239*^9, 3.714149784729274*^9, 3.7142113483274927`*^9, 
   3.720551968600729*^9, 3.720618430899385*^9}]
}, Closed]],

Cell["Solving equation 5 for equX", "Text",
 CellChangeTimes->{{3.6912743203704805`*^9, 3.6912743282182946`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubEquX", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"EquiList", "/.", "SubSym"}], "/.", "SubSe"}], ")"}], "[", 
       RowBox[{"[", "5", "]"}], "]"}], "\[Equal]", "0"}], ",", "equX"}], 
    "]"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.6912743372663107`*^9, 3.6912743531939383`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"equX", "\[Rule]", 
   FractionBox[
    RowBox[{"equY", " ", "X"}], "Y"]}], "}"}]], "Output",
 CellChangeTimes->{3.6912743543483405`*^9, 3.6913311348041077`*^9, 
  3.691335174478668*^9, 3.6913354925845203`*^9, 3.691335525115181*^9, 
  3.6936603520527067`*^9, 3.693667164065691*^9, 3.693834342028113*^9, 
  3.694287446884722*^9, 3.694441646779847*^9, 3.69498473830551*^9, 
  3.695476568922412*^9, 3.6954779776319857`*^9, 3.6962735783177004`*^9, 
  3.696357777852577*^9, 3.6966858469921618`*^9, 3.711386626743383*^9, 
  3.711386863106866*^9, 3.713180944839279*^9, 3.713190782684596*^9, 
  3.71320264554842*^9, 3.7132043981773577`*^9, 3.71336445928442*^9, 
  3.714149784788007*^9, 3.714211348392871*^9, 3.7205522004410877`*^9, 
  3.720618434443921*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"EquiList", "/.", "SubSym"}], "/.", "SubSe"}], "/.", "SubEquX"}],
    ")"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.69127436564476*^9, 3.691274370511969*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"equY", " ", "nR", " ", "Y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "3"], " ", 
       SuperscriptBox["zI", "2"], " ", "znR", " ", 
       SuperscriptBox["\[Tau]I", "2"]}], "-", 
      RowBox[{"d", " ", 
       SuperscriptBox["Y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "-", 
      RowBox[{"equY", " ", "Y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "3"], " ", 
       SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"equY", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
         RowBox[{"Y", " ", 
          RowBox[{"(", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y", " ", 
          RowBox[{"(", 
           RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]I"}], "-", 
         RowBox[{"2", " ", "\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"equY", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
            RowBox[{"Y", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], " ", "\[Tau]R"}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SuperscriptBox["Y", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", 
      SuperscriptBox["zI", "2"], " ", 
      SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"equY", " ", "nR", " ", "Y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "3"], " ", 
       SuperscriptBox["zI", "2"], " ", "znR", " ", 
       SuperscriptBox["\[Tau]I", "2"]}], "-", 
      RowBox[{"d", " ", 
       SuperscriptBox["Y", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "-", 
      RowBox[{"equY", " ", "Y", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "3"], " ", 
       SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", 
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"equY", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
         RowBox[{"Y", " ", 
          RowBox[{"(", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Y", " ", 
          RowBox[{"(", 
           RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]I"}], "-", 
         RowBox[{"2", " ", "\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"equY", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Tau]I"}], "+", 
            RowBox[{"Y", " ", 
             RowBox[{"(", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}]}], ")"}]}]}], 
        ")"}], " ", "\[Tau]R"}]}], ")"}]}], ",", "0", ",", "0", ",", "0", ",",
    "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.691274366580762*^9, 3.6912743712607703`*^9}, 
   3.691331135053708*^9, 3.6913351747286687`*^9, 3.6913354928965206`*^9, 
   3.691335525161981*^9, 3.69366035390911*^9, 3.693667164424492*^9, 
   3.693834342293313*^9, 3.694287447164738*^9, 3.694441647076248*^9, 
   3.6949847385945263`*^9, 3.695476569226429*^9, 3.695477977906001*^9, 
   3.696273578592716*^9, 3.696357778126593*^9, 3.696685847259177*^9, 
   3.711386626937698*^9, 3.7113868632705917`*^9, 3.7131809450266953`*^9, 
   3.713190782889709*^9, 3.713202645750898*^9, 3.713204398375945*^9, 
   3.713364459477735*^9, 3.714149784978348*^9, 3.714211348584586*^9, 
   3.72061843684107*^9}]
}, Closed]],

Cell["Solving equation 2 for equY", "Text",
 CellChangeTimes->{{3.691274386969998*^9, 3.6912744122596426`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SubEquY", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EquiList", "/.", "SubSym"}], "/.", "SubSe"}], "/.", 
          "SubEquX"}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", "equY"}], 
     "]"}], "//", "Simplify"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.691274425238865*^9, 3.6912744513085113`*^9}, {
  3.6912745152384233`*^9, 3.6912745182648287`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"equY", "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{"equY", "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.691274440339692*^9, 3.69127445623812*^9}, 
   3.691274522430036*^9, 3.691331140092319*^9, 3.691335180198676*^9, 
   3.6913354980133295`*^9, 3.691335528095786*^9, 3.693660358137519*^9, 
   3.6936671671140976`*^9, 3.6938343450233183`*^9, 3.6942874500039005`*^9, 
   3.694441649915453*^9, 3.69498474127168*^9, 3.6954765720265894`*^9, 
   3.6954779806061554`*^9, 3.696273581334873*^9, 3.6963577823158326`*^9, 
   3.6966858499443307`*^9, 3.711386628385543*^9, 3.711386864670432*^9, 
   3.713180946419685*^9, 3.7131907843027697`*^9, 3.713202647205307*^9, 
   3.713204399855969*^9, 3.7133644611017*^9, 3.714149786352211*^9, 
   3.714211350085191*^9, 3.72061844061226*^9}]
}, Closed]],

Cell[TextData[StyleBox["This results in two possible equilibria.  ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.691274460840128*^9, 3.6912744772045565`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EquiVars", "/.", "SubSym"}], "/.", "SubSe"}], "/.", "SubEquX"}],
    "/.", 
   RowBox[{"SubEquY", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912745230072374`*^9, 3.691274545254876*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
     RowBox[{
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
     RowBox[{
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6912745402316675`*^9, 3.6912745460972776`*^9}, 
   3.6913311404355197`*^9, 3.6913351805386767`*^9, {3.6913354983721304`*^9, 
   3.691335528142586*^9}, 3.6936671674884987`*^9, 3.6938343453665185`*^9, 
   3.69428745034492*^9, 3.694441650324455*^9, 3.694984741642701*^9, 
   3.695476572419612*^9, 3.695477980961176*^9, 3.6962735816908937`*^9, 
   3.696357782667853*^9, 3.6966858502693496`*^9, 3.7113866286708612`*^9, 
   3.711386864943007*^9, 3.713180946708786*^9, 3.713190784603362*^9, 
   3.7132026475019484`*^9, 3.713204400154841*^9, 3.71336446151418*^9, 
   3.714149786626834*^9, 3.7142113504603577`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"EquiVars", "/.", "SubSym"}], "/.", "SubSe"}], "/.", "SubEquX"}],
    "/.", 
   RowBox[{"SubEquY", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.6912745230072374`*^9, 3.691274554334092*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
     RowBox[{
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
     RowBox[{
      RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
      RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
   ",", 
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"4", " ", "b", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
       "\[Tau]I", " ", "\[Tau]R"}]], 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "+", 
        RowBox[{"nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], "-", 
        RowBox[{"nI", " ", "X", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{"nI", " ", "Y", " ", "zI", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zI", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "nI", " ", "zR", " ", "\[Kappa]", " ", 
         "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "X", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{"b", " ", "Y", " ", 
         SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
        RowBox[{
        "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "+", 
        RowBox[{
        "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Tau]I", " ", "\[Tau]R"}],
         "-", 
        RowBox[{
        "X", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "Y", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", "\[Tau]R"}], 
        "-", 
        RowBox[{
        "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
        "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Kappa]", " ", 
         "\[Tau]I", " ", "\[Tau]R"}], "-", 
        RowBox[{
         SqrtBox[
          RowBox[{"X", "+", "Y"}]], " ", 
         SqrtBox["zI"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["nR", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
             SuperscriptBox["znR", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "-", 
            RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"4", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nI", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"X", " ", "zI"}], "+", 
                  RowBox[{"Y", " ", "zI"}], "+", 
                  RowBox[{"8", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                 ")"}]}], "-", 
               RowBox[{"2", " ", "nI", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", 
                   "\[Delta]"}], "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"2", " ", "\[Delta]"}]}], ")"}], " ", 
                    "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", "\[Tau]I"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox["\[Delta]", "2"]}], "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Delta]", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", "\[Delta]"}], 
                    ")"}], " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]I", "2"]}]}], ")"}], " ", 
             SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6912745402316675`*^9, 3.6912745555352945`*^9}, 
   3.6913311407319202`*^9, 3.6913351808386774`*^9, {3.691335498699731*^9, 
   3.691335528173786*^9}, 3.6936671678160987`*^9, 3.6938343456785192`*^9, 
   3.6942874506469374`*^9, 3.6944416506364555`*^9, 3.6949847419677196`*^9, 
   3.69547657273063*^9, 3.695477981316196*^9, 3.696273581996911*^9, 
   3.69635778296587*^9, 3.696685850555366*^9, 3.7113866289006653`*^9, 
   3.711386865162223*^9, 3.7131809469387608`*^9, 3.713190784815915*^9, 
   3.713202647856039*^9, 3.713204400388214*^9, 3.713364461751577*^9, 
   3.714149786849895*^9, 3.714211350683972*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparison to Goncalves et al. 2011", "Subsubsection",
 CellChangeTimes->{{3.720624857873742*^9, 3.720624865271928*^9}, {
  3.7206249164040613`*^9, 3.7206249422331247`*^9}, {3.720625938871133*^9, 
  3.720625939162238*^9}}],

Cell["\<\
To compare our results to those of Goncalves et al. we derive expressions for \
the equilibria given that there is only one host and pathogen type \
(\[Beta][1,2]=\[Beta][2,1]=\[Beta][2,2]=0) and that birth (b), natural death \
(d), and virulent death (\[Delta]) and negligible. In addition to the \
equilibrium equations given above we use the fact that the total host \
population must stay at a constant size 1.  Note that in equation 6 and 11 of \
Goncalves et al. s*=se[1] and i*= zI ie1[1,1]=nI ie1[1,1]. \
\>", "Text",
 CellChangeTimes->{{3.720625119719862*^9, 3.7206252499589577`*^9}, {
  3.72062559696627*^9, 3.720625607098012*^9}, {3.720625730143546*^9, 
  3.720625749202211*^9}, {3.720626276536339*^9, 3.720626295184444*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquSubG11", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"se", "[", "2", "]"}], "\[Rule]", "0"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720625907492367*^9, 3.7206259715339193`*^9}, {
  3.7206260176734123`*^9, 3.720626030830945*^9}, {3.7206261313583603`*^9, 
  3.720626131589547*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"d", "\[Rule]", 
      RowBox[{"d", " ", "\[Epsilon]"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", 
      RowBox[{"\[Epsilon]", " ", "\[Delta]"}]}], ",", 
     RowBox[{"b", "\[Rule]", " ", 
      RowBox[{"\[Epsilon]", " ", "b"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720625394033967*^9, 3.720625399996244*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zSub2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"zI", "\[Rule]", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"zI", "/.", "zsub"}], "/.", "\[Epsilon]sub"}], ")"}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "]"}]}], ",", 
    RowBox[{"zR", "\[Rule]", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"zR", "/.", "zsub"}], "/.", "\[Epsilon]sub"}], ")"}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "]"}]}], ",", 
    RowBox[{"znR", "\[Rule]", " ", 
     RowBox[{"Limit", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"znR", "/.", "zsub"}], "/.", "\[Epsilon]sub"}], ")"}], ",", 
       RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.720625306277562*^9, 3.7206254445956287`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"zI", "\[Rule]", "nI"}], ",", 
   RowBox[{"zR", "\[Rule]", 
    FractionBox[
     RowBox[{"nI", " ", "\[Tau]R"}], "\[Tau]I"]}], ",", 
   RowBox[{"znR", "\[Rule]", 
    FractionBox[
     RowBox[{"nI", " ", "\[Tau]R"}], 
     RowBox[{"nR", " ", "\[Tau]I"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.720625333400506*^9, 3.720625379980727*^9, 
  3.72062541196568*^9, 3.720625445533783*^9, 3.7206259759829607`*^9, 
  3.72062602054749*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiList", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"G1", "[", "h", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"G2", "[", 
            RowBox[{"h", ",", "p"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"p", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"se", "[", "1", "]"}], "+", 
             RowBox[{"se", "[", "2", "]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"zI", "+", "zR"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ie1", "[", 
                 RowBox[{"1", ",", "1"}], "]"}], "+", 
                RowBox[{"ie1", "[", 
                 RowBox[{"1", ",", "2"}], "]"}], "+", 
                RowBox[{"ie1", "[", 
                 RowBox[{"2", ",", "1"}], "]"}], "+", 
                RowBox[{"ie1", "[", 
                 RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}]}], ")"}]}], 
          "}"}]}], "]"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], "/.", 
     "zSub2"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"d", "\[Rule]", "0"}], ",", 
      RowBox[{"\[Delta]", "\[Rule]", "0"}], ",", 
      RowBox[{"b", "\[Rule]", "0"}]}], "}"}]}], "/.", 
   "EquSubG11"}]}]], "Input",
 CellChangeTimes->{{3.7206251413657303`*^9, 3.7206251453073273`*^9}, {
  3.7206252536512957`*^9, 3.720625295263504*^9}, {3.7206253373332148`*^9, 
  3.72062534002841*^9}, {3.720625461010129*^9, 3.720625467965232*^9}, {
  3.7206257623230743`*^9, 3.720625816077465*^9}, {3.7206258693737926`*^9, 
  3.7206258778417377`*^9}, {3.720625979905233*^9, 3.720625980315226*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"nI", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], "+", 
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "2"}], "]"}]}], ")"}]}], "\[Tau]I"], "-", 
    RowBox[{"nI", " ", 
     RowBox[{"se", "[", "1", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"1", ",", "1"}], "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"ie1", "[", 
         RowBox[{"2", ",", "1"}], "]"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]}], ")"}]}]}], ",", 
   FractionBox[
    RowBox[{"nI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "\[Tau]I"], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nI", " ", 
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "\[Tau]I"]}], "+", 
    RowBox[{"nI", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}]}], ")"}], " ", 
     RowBox[{"se", "[", "1", "]"}], " ", 
     RowBox[{"\[Beta]", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"nI", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "\[Tau]I"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"nI", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}]}], "\[Tau]I"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"nI", " ", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "\[Tau]I"]}], ",", 
   RowBox[{"1", "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"nI", "+", 
       FractionBox[
        RowBox[{"nI", " ", "\[Tau]R"}], "\[Tau]I"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"1", ",", "2"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "1"}], "]"}], "+", 
       RowBox[{"ie1", "[", 
        RowBox[{"2", ",", "2"}], "]"}]}], ")"}]}], "-", 
    RowBox[{"se", "[", "1", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7206249461104927`*^9, 3.720625282083921*^9, 3.720625340431319*^9, {
   3.7206254505161133`*^9, 3.720625468494814*^9}, 3.720625816642725*^9, {
   3.7206258742149878`*^9, 3.720625878865828*^9}, 3.720625980683291*^9, {
   3.7206260222174597`*^9, 3.720626035017418*^9}, 3.720626138332614*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"EquiList", "\[Equal]", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], ",", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], ",", 
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], ",", 
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}]}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.720625475180216*^9, 3.72062551859417*^9}, {
  3.72062582233241*^9, 3.7206258317833233`*^9}, {3.7206259881801434`*^9, 
  3.720625993860724*^9}, {3.72062614476642*^9, 3.720626157180037*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
      FractionBox["1", 
       RowBox[{"\[Tau]I", " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"\[Tau]I", " ", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"1", ",", "1"}], "]"}]}]}], 
       RowBox[{"nI", " ", 
        RowBox[{"(", 
         RowBox[{"\[Tau]I", "+", "\[Tau]R"}], ")"}], " ", 
        RowBox[{"\[Beta]", "[", 
         RowBox[{"1", ",", "1"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.720625511174576*^9, 3.7206255191473017`*^9}, {
   3.720625823751275*^9, 3.7206258324203444`*^9}, {3.720625989435492*^9, 
   3.7206259942299347`*^9}, {3.7206260249463043`*^9, 3.72062603732325*^9}, 
   3.720626157594248*^9}]
}, Closed]],

Cell["\<\
The first solution gives the disease free equilibrium.  The second solution \
gives a possible endemic equilibrium.  However we are one equation short of \
being able solve for ie1[1,1].  These solutions are identical to those of \
equation 6 (fixed delay nI\[Rule]\[Infinity]) and equation 11 (Erlang \
distributed delay) of Goncavles et al. 2011.\
\>", "Text",
 CellChangeTimes->{{3.720625536035059*^9, 3.720625588470807*^9}, {
  3.720626006239931*^9, 3.720626010675213*^9}, {3.7206260453067083`*^9, 
  3.720626122844125*^9}, {3.720626167139469*^9, 3.720626271531551*^9}, {
  3.720626305156149*^9, 3.7206263141969137`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Biological Validity of Endemic Equilibria", "Subsection",
 CellChangeTimes->{{3.6954763031722116`*^9, 3.695476311074664*^9}, 
   3.7045399023625927`*^9}],

Cell["\<\
As we did with the endemic equilibria in the absence of coevolution here we \
derive the conditions for which only one of the two endemic equilibria is \
biologically plausible.  Additionally when this is not true we demonstrate \
numerically that both equilibria are not-biologically valid (either both are \
negative or both are complex).\
\>", "Text",
 CellChangeTimes->{{3.6954763139788303`*^9, 3.6954764128184834`*^9}}],

Cell[TextData[StyleBox["Conditions for one biologically valid (positive) and \
one invalid (negative) equilibrium. ",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.6954764179307756`*^9, 3.695476442746195*^9}, 
   3.7045398989698963`*^9}],

Cell[TextData[{
 "As before we note the the endemic equilibria must satisfy a quadratic in \
terms of equY.  By dividing through by the coefficient of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["equY", "2"], TraditionalForm]]],
 " we can guarantee that the quadratic is upward facing:"
}], "Text",
 CellChangeTimes->{{3.695476452434749*^9, 3.6954765111541076`*^9}, {
  3.6954766098427525`*^9, 3.6954766376993456`*^9}, {3.7045398914950323`*^9, 
  3.7045398961841917`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quad", "[", "equYs_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"EquiList", "/.", "SubSym"}], "/.", "SubSe"}], "/.", 
          "SubEquX"}], ")"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"CoefficientList", "[", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"EquiList", "/.", "SubSym"}], "/.", "SubSe"}], "/.", 
              "SubEquX"}], ")"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "equY"}], "]"}], 
        "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]], ",", "equY", ",", "Simplify"}], "]"}],
    "/.", 
   RowBox[{"equY", "\[Rule]", "equYs"}]}]}]], "Input",
 CellChangeTimes->{{3.6954765130222144`*^9, 3.695476524990899*^9}, {
  3.6954766974217615`*^9, 3.695476718585972*^9}, {3.695477068818004*^9, 
  3.6954770764814425`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quad", "[", "equY", "]"}]], "Input",
 CellChangeTimes->{{3.6954765781549397`*^9, 3.695476581668141*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["equY", "2"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["Y", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"nI", "+", 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"d", " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]I"}], "+", 
      RowBox[{"b", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "nI", " ", "\[Kappa]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "zI"}], "+", 
            RowBox[{"Y", " ", "zI"}], "-", 
            RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], ")"}], " ", 
          "\[Tau]I"}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"2", " ", "b", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X", "+", "Y"}], ")"}], "4"], " ", 
    SuperscriptBox["zI", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
    SuperscriptBox["\[Tau]I", "2"]}]], "+", 
  FractionBox[
   RowBox[{"equY", " ", "Y", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "nR"}], " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "znR", " ", 
       "\[Tau]I"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nI", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "zI"}], "+", 
            RowBox[{"Y", " ", "zI"}], "+", 
            RowBox[{"4", " ", "b", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"X", "+", "Y"}], ")"}]}], " ", "zI", " ", "\[Delta]"}],
             "+", 
            RowBox[{"b", " ", 
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"X", " ", "zI"}], "+", 
               RowBox[{"Y", " ", "zI"}], "-", 
               RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], ")"}]}]}], 
           ")"}], " ", "\[Tau]I"}]}], ")"}], " ", "\[Tau]R"}]}], ")"}]}], 
   RowBox[{"2", " ", "b", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", "\[Tau]I",
     " ", "\[Tau]R"}]]}]], "Output",
 CellChangeTimes->{
  3.695476582496188*^9, {3.695476703373102*^9, 3.6954767231152315`*^9}, 
   3.69547707992964*^9, 3.695477981787223*^9, 3.696273582176921*^9, 
   3.69635778314188*^9, 3.6966858507273755`*^9, 3.711386629121255*^9, 
   3.7113868653602552`*^9, 3.713180947158057*^9, 3.713190785055921*^9, 
   3.713202648166095*^9, 3.7132044006478577`*^9, 3.713364461986127*^9, 
   3.714149787061751*^9, 3.7142113509017677`*^9}]
}, Closed]],

Cell[TextData[{
 "If the Y-intercept of this quadratic is negative then we are guarenteed to \
have one positive and one negative root. Solving for the critcal value of ",
 StyleBox["b",
  FontSlant->"Italic"],
 " for which this is true we have:"
}], "Text",
 CellChangeTimes->{{3.6954765890745645`*^9, 3.695476599978188*^9}, {
  3.6954769628909454`*^9, 3.6954769756906776`*^9}, {3.695477006642448*^9, 
  3.695477028914722*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quad", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.69547705283809*^9, 3.6954770570603313`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["Y", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"nI", "+", 
     RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"d", " ", 
      RowBox[{"(", 
       RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", "\[Tau]I"}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "nI", " ", "\[Kappa]"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "zI"}], "+", 
           RowBox[{"Y", " ", "zI"}], "-", 
           RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], ")"}], " ", 
         "\[Tau]I"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"2", " ", "b", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"X", "+", "Y"}], ")"}], "4"], " ", 
   SuperscriptBox["zI", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
   SuperscriptBox["\[Tau]I", "2"]}]]], "Output",
 CellChangeTimes->{{3.695477046489727*^9, 3.6954770820937634`*^9}, 
   3.6954779836503296`*^9, 3.6962735822159233`*^9, 3.696357783175882*^9, 
   3.696685850760378*^9, 3.71138662917745*^9, 3.711386865418152*^9, 
   3.713180947197978*^9, 3.713190785113832*^9, 3.713202648323138*^9, 
   3.713204400725985*^9, 3.713364462034233*^9, 3.7141497871216793`*^9, 
   3.7142113509590893`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Quad", "[", "0", "]"}], "/.", "zsub"}], ")"}], "\[Equal]", 
      "0"}], ",", "b"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6949847056876445`*^9, 3.694984715673216*^9}, {
  3.694985280971549*^9, 3.6949853164975805`*^9}, {3.6954770334299803`*^9, 
  3.6954770394043217`*^9}, {3.6954770911652822`*^9, 3.695477100236801*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"b", "\[Rule]", 
   FractionBox[
    RowBox[{"d", " ", 
     RowBox[{"(", 
      RowBox[{"X", "+", "Y"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nI", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
    RowBox[{
     RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}], "+", 
     RowBox[{"X", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
     "+", 
     RowBox[{"Y", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["nI", 
           RowBox[{"nI", "+", 
            RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
       ")"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.6954779859464607`*^9, 3.696273582486939*^9, 
  3.6963577834868994`*^9, 3.696685851009392*^9, 3.71138662925089*^9, 
  3.71138686548357*^9, 3.713180947336671*^9, 3.713190785203047*^9, 
  3.713202648458806*^9, 3.713204400806305*^9, 3.713364462106749*^9, 
  3.7141497871927967`*^9, 3.7142113510297613`*^9}]
}, Closed]],

Cell["\<\
If this condition is not met, in other words if b is less than this critical \
value, than the Y-intercept will be positive and there is either 1) two \
negative equilibria, 2) two positive equilibria, or 3) two complex \
equilibria.  In order to exclude the possibility of two positive, and \
therefore biologically valid equilibria, below we show that for a large \
number of parameter combinaitons the slope of the quadratic at equY=0 is \
positive, therefore there must be either be two negative or two complex roots.\
\>", "Text",
 CellChangeTimes->{{3.6954773380104012`*^9, 3.695477556475897*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Slope", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"Quad", "[", "equY", "]"}], ",", "equY"}], "]"}], "/.", 
     RowBox[{"equY", "\[Rule]", "0"}]}], "/.", "zsub"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6954778090723443`*^9, 3.6954778149166784`*^9}}],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "nIs", ",", "nRs", ",", "\[Tau]Is", ",", "\[Tau]Rs", ",", "bs", ",", "ds",
      ",", "\[Delta]s", ",", "Xs", ",", "Ys", ",", "c", ",", "parsSub"}], 
    "}"}], ",", 
   RowBox[{
    RowBox[{"NegList", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"PosList", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"c", "=", "1"}], ",", 
      RowBox[{"c", "\[LessEqual]", "5000"}], ",", 
      RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Drawing", " ", "values"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nIs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"nRs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "50"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]Is", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "40"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Tau]Rs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"20", ",", "100"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ds", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.001", ",", "0.01"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"\[Delta]s", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"ds", ",", 
            RowBox[{"ds", "+", "0.1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Xs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", "0.5"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"Ys", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.1", ",", 
            RowBox[{"Xs", "-", "0.01"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "1"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"X", "\[Rule]", "Xs"}], ",", 
          RowBox[{"Y", "\[Rule]", "Ys"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"bs", "=", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"ds", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"d", " ", 
                 RowBox[{"(", 
                  RowBox[{"X", "+", "Y"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["nI", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
                  ")"}]}], 
                RowBox[{
                 RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}], "+", 
                 RowBox[{"X", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["nI", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
                   ")"}]}], "+", 
                 RowBox[{"Y", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["nI", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
                   ")"}]}]}]], "/.", "parsSub"}], ",", "0"}], "]"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"parsSub", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
          RowBox[{"nR", "\[Rule]", "nRs"}], ",", 
          RowBox[{"\[Tau]I", "\[Rule]", "\[Tau]Is"}], ",", 
          RowBox[{"\[Tau]R", "\[Rule]", "\[Tau]Rs"}], ",", 
          RowBox[{"b", "\[Rule]", "bs"}], ",", 
          RowBox[{"d", "\[Rule]", "ds"}], ",", 
          RowBox[{"\[Delta]", "\[Rule]", "\[Delta]s"}], ",", 
          RowBox[{"X", "\[Rule]", "Xs"}], ",", 
          RowBox[{"Y", "\[Rule]", "Ys"}], ",", 
          RowBox[{"\[Kappa]", "\[Rule]", "1"}]}], "}"}]}], ";", 
       RowBox[{"test", "=", 
        RowBox[{"(", 
         RowBox[{"Slope", "/.", "parsSub"}], ")"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"test", "<", "0"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"NegList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nIs", ",", "nRs", ",", "\[Tau]Is", ",", "\[Tau]Rs", ",", "bs", 
             ",", "ds", ",", "\[Delta]s", ",", "Xs", ",", "Ys", ",", "test"}],
             "}"}]}], "]"}], ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"PosList", ",", 
           RowBox[{"{", 
            RowBox[{
            "nIs", ",", "nRs", ",", "\[Tau]Is", ",", "\[Tau]Rs", ",", "bs", 
             ",", "ds", ",", "\[Delta]s", ",", "Xs", ",", "Ys", ",", "test"}],
             "}"}]}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6954739882968082`*^9, 3.695474145231785*^9}, {
   3.695474190864395*^9, 3.6954744387925754`*^9}, {3.6954744874593587`*^9, 
   3.695474611627461*^9}, {3.6954746463904495`*^9, 3.6954746772542143`*^9}, 
   3.695475238660325*^9, 3.695475274987403*^9, {3.695475382680563*^9, 
   3.695475574457532*^9}, {3.695475708039172*^9, 3.6954758034486294`*^9}, {
   3.6954759346751347`*^9, 3.695475948103903*^9}, {3.6954776077708306`*^9, 
   3.6954777507000055`*^9}, {3.695477858382165*^9, 3.6954779203807106`*^9}, {
   3.69547800254541*^9, 3.6954780602337103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["NegList"], "Input",
 CellChangeTimes->{{3.695477870992886*^9, 3.695477872443969*^9}}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.695477872893995*^9, 3.6954779290332055`*^9, {3.6954779961860466`*^9, 
   3.6954780651919937`*^9}, 3.6962735847560687`*^9, 3.696357785642023*^9, 
   3.6966858531505146`*^9, 3.7113866312505198`*^9, 3.7113868674561768`*^9, 
   3.713180949265513*^9, 3.713190787175396*^9, 3.7132026504672127`*^9, 
   3.7132044028517323`*^9, 3.713364464152924*^9, 3.7141497891330137`*^9, 
   3.714211353063979*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "PosList", "]"}]], "Input",
 CellChangeTimes->{{3.6954778739540553`*^9, 3.6954778751001205`*^9}, {
  3.6954780710123262`*^9, 3.6954780745085263`*^9}}],

Cell[BoxData["5000"], "Output",
 CellChangeTimes->{
  3.695477875510144*^9, 3.6954779300472636`*^9, {3.6954779972381067`*^9, 
   3.6954780749785533`*^9}, 3.696273584798071*^9, 3.6963577856740246`*^9, 
   3.6966858531805162`*^9, 3.71138663131159*^9, 3.7113868675176888`*^9, 
   3.7131809493209963`*^9, 3.7131907872485447`*^9, 3.713202650540381*^9, 
   3.713204402930758*^9, 3.713364464218801*^9, 3.714149789169595*^9, 
   3.714211353109767*^9}]
}, Closed]],

Cell["\<\
Hence for the 5000 parameter combinations sampled the slope at equY=0 is \
positive and hence both endemic equilibria are guaranteed to be either \
negative or complex.\
\>", "Text",
 CellChangeTimes->{{3.695478080898892*^9, 3.695478122018244*^9}, {
  3.720785850054061*^9, 3.720785852754368*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["List of Equilibria", "Subsection",
 CellChangeTimes->{{3.691329088776043*^9, 3.6913290962484565`*^9}}],

Cell["\<\
Altogether, we have identified 13 possible equilibria.  While we have not \
proven that there are no other equilibria exist (e.g., with asymmetric host \
and parasite frequencies), numerical examples have not identified further \
equilibrium solutions. \
\>", "Text",
 CellChangeTimes->{{3.6913293898406143`*^9, 3.6913294010518355`*^9}, 
   3.691331369263752*^9, {3.6913324654962225`*^9, 3.691332465823823*^9}, {
   3.6914365126960535`*^9, 3.6914365158472586`*^9}, 3.6914367198442183`*^9, {
   3.691779765701941*^9, 3.691779846580408*^9}, {3.6933335466236343`*^9, 
   3.693333551974444*^9}, 3.710681491155006*^9},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Equilibria", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"b", "-", "d", "-", 
          RowBox[{"b", " ", "\[Kappa]", " ", 
           RowBox[{"se", "[", "2", "]"}]}]}], 
         RowBox[{"b", " ", "\[Kappa]"}]]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        RowBox[{"se", "[", "2", "]"}]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        RowBox[{"se", "[", "1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"b", "-", "d", "-", 
          RowBox[{"b", " ", "\[Kappa]", " ", 
           RowBox[{"se", "[", "1", "]"}]}]}], 
         RowBox[{"b", " ", "\[Kappa]"}]]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "nR"}], " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "znR", " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "+", 
            RowBox[{"nI", " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
            RowBox[{"2", " ", "b", " ", "nI", " ", "X", " ", 
             SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
            "2", " ", "b", " ", "nI", " ", "X", " ", "zI", " ", "zR", " ", 
             "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
            RowBox[{"b", " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "3"], " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
            RowBox[{"b", " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "zR", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{"2", " ", "b", " ", "X", " ", 
             SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{
            "2", " ", "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Delta]", 
             " ", "\[Kappa]", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["X", "2"], " ", 
               SuperscriptBox["zI", "2"], " ", 
               SuperscriptBox["\[Tau]I", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "b", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"d", " ", "X", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                  SuperscriptBox["\[Tau]R", "2"]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                    "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}],
          "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["X", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "nR"}], " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "znR", " ", 
             SuperscriptBox["\[Tau]I", "2"]}], "+", 
            RowBox[{"nI", " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
            RowBox[{"2", " ", "b", " ", "nI", " ", "X", " ", 
             SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
             "\[Tau]R"}], "+", 
            RowBox[{
            "2", " ", "b", " ", "nI", " ", "X", " ", "zI", " ", "zR", " ", 
             "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
            RowBox[{"b", " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "3"], " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
            RowBox[{"b", " ", 
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "zR", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{
             SuperscriptBox["X", "2"], " ", 
             SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{"2", " ", "b", " ", "X", " ", 
             SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{
            "2", " ", "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Delta]", 
             " ", "\[Kappa]", " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["X", "2"], " ", 
               SuperscriptBox["zI", "2"], " ", 
               SuperscriptBox["\[Tau]I", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", "b", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                  " ", 
                  RowBox[{"(", 
                   RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"d", " ", "X", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                  SuperscriptBox["\[Tau]R", "2"]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                    "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}],
          "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["X", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], ")"}]}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nR", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "znR", " ", 
            SuperscriptBox["\[Tau]I", "2"]}], "-", 
           RowBox[{"nI", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "nI", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "nI", " ", "X", " ", "zI", " ", "zR", " ", 
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "zR", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Delta]", 
            " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["X", "2"], " ", 
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox["\[Tau]I", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"nI", "+", 
                   RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"d", " ", "X", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 SuperscriptBox["\[Tau]R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                   "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["X", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"X", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nR", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "znR", " ", 
            SuperscriptBox["\[Tau]I", "2"]}], "-", 
           RowBox[{"nI", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "nI", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "nI", " ", "X", " ", "zI", " ", "zR", " ", 
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "zR", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
            SuperscriptBox["X", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Delta]", 
            " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["X", "2"], " ", 
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox["\[Tau]I", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"nI", "+", 
                   RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"d", " ", "X", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 SuperscriptBox["\[Tau]R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                   "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"X", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}], 
         "/", 
         RowBox[{"(", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["X", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], ")"}]}]}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"2", " ", "b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "nR"}], " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "znR", " ", 
            SuperscriptBox["\[Tau]I", "2"]}], "+", 
           RowBox[{"nI", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "zR", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"2", " ", "b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{
           "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", 
            " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["Y", "2"], " ", 
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox["\[Tau]I", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"nI", "+", 
                   RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 SuperscriptBox["\[Tau]R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                   "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
          ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"2", " ", "b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]]}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "nR"}], " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "znR", " ", 
            SuperscriptBox["\[Tau]I", "2"]}], "+", 
           RowBox[{"nI", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "zR", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"2", " ", "b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{
           "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", 
            " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["Y", "2"], " ", 
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox["\[Tau]I", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"nI", "+", 
                   RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 SuperscriptBox["\[Tau]R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                   "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
          ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nR", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "znR", " ", 
            SuperscriptBox["\[Tau]I", "2"]}], "-", 
           RowBox[{"nI", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "zR", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", 
            " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["Y", "2"], " ", 
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox["\[Tau]I", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"nI", "+", 
                   RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 SuperscriptBox["\[Tau]R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                   "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
          ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"2", " ", "b", " ", 
           SuperscriptBox["Y", "2"], " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"nR", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "znR", " ", 
            SuperscriptBox["\[Tau]I", "2"]}], "-", 
           RowBox[{"nI", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "nI", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "nI", " ", "Y", " ", "zI", " ", "zR", " ", 
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "3"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"b", " ", 
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "zR", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
            SuperscriptBox["Y", "2"], " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{"2", " ", "b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Delta]", " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
           RowBox[{
           "2", " ", "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Delta]", 
            " ", "\[Kappa]", " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["Y", "2"], " ", 
              SuperscriptBox["zI", "2"], " ", 
              SuperscriptBox["\[Tau]I", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", "b", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                 " ", 
                 RowBox[{"(", 
                  RowBox[{"nI", "+", 
                   RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"d", " ", "Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                   RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}], "+", 
                    RowBox[{"\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}], 
                    ")"}]}]}], ")"}], " ", 
                 SuperscriptBox["\[Tau]R", "2"]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Tau]I"}], 
                   "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "+", 
                    RowBox[{"2", " ", "b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", "\[Kappa]"}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Y", " ", "zI"}], "-", 
                    RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                    "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
          ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{
          RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
          RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{
          RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
          RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "X", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "Y", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "Y", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "X", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{
          RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
          RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
        FractionBox[
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
         RowBox[{
          RowBox[{"X", " ", "zI", " ", "\[Tau]I"}], "+", 
          RowBox[{"Y", " ", "zI", " ", "\[Tau]I"}]}]]}], ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "X", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"1", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "Y", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "1", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "Y", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}], 
       ",", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"2", ",", "2", ",", "1", ",", "\[Infinity]"}], "]"}], 
        "\[Rule]", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"X", "+", "Y"}], ")"}], "2"], " ", "zI", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Tau]I", " ", 
           "\[Tau]R"}]], "X", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
           "nR", " ", "X", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "+", 
           RowBox[{
           "nR", " ", "Y", " ", "zI", " ", "znR", " ", "\[Kappa]", " ", 
            "\[Tau]I"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zI", " ", "\[Tau]R"}], "-", 
           RowBox[{"4", " ", "b", " ", "nI", " ", "zR", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "X", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "nI", " ", "Y", " ", "zI", " ", "\[Kappa]", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zI", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "-", 
           RowBox[{
           "4", " ", "b", " ", "zR", " ", "\[Delta]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "X", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{"b", " ", "Y", " ", 
            SuperscriptBox["zI", "2"], " ", "\[Kappa]", " ", "\[Tau]I", " ", 
            "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "X", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "+", 
           RowBox[{
           "b", " ", "Y", " ", "zI", " ", "zR", " ", "\[Kappa]", " ", 
            "\[Tau]I", " ", "\[Tau]R"}], "-", 
           RowBox[{
           "X", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "-", 
           RowBox[{
           "Y", " ", "zI", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I", 
            " ", "\[Tau]R"}], "+", 
           RowBox[{
            SqrtBox[
             RowBox[{"X", "+", "Y"}]], " ", 
            SqrtBox["zI"], " ", 
            SqrtBox["\[Kappa]"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["nR", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                SuperscriptBox["znR", "2"], " ", "\[Kappa]", " ", 
                SuperscriptBox["\[Tau]I", "2"]}], "-", 
               RowBox[{"2", " ", "nR", " ", "znR", " ", "\[Tau]I", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}]}], "-", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", "\[Tau]R"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["b", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                   " ", 
                   SuperscriptBox["\[Tau]I", "2"]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                   "\[Kappa]", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], "2"]}], 
                  "-", 
                  RowBox[{"2", " ", "b", " ", 
                   RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"nI", "+", 
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "nI"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "d", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}]}], "-", 
                    RowBox[{"4", " ", "\[Delta]"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"X", "+", "Y"}], ")"}], " ", "zI", " ", 
                    "\[Kappa]"}]}], ")"}], " ", "\[Tau]I"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}]}], ")"}]}]}]}], ")"}]}]}]}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6913291672605915`*^9, 3.6913293781015916`*^9}, {
   3.6913311594219556`*^9, 3.6913313378884935`*^9}, {3.691332457991609*^9, 
   3.6913324616576157`*^9}, {3.6913355644717407`*^9, 3.691335570462151*^9}, {
   3.6913356722727203`*^9, 3.6913356737547226`*^9}, {3.691335708619788*^9, 
   3.6913357176820593`*^9}, {3.691335754486539*^9, 3.691335755672141*^9}, 
   3.6913358266966276`*^9, 3.6913359579105163`*^9, {3.6914340177572117`*^9, 
   3.691434031674436*^9}, {3.6914341147651825`*^9, 3.691434131646412*^9}, {
   3.6914342627956614`*^9, 3.6914342845586996`*^9}, {3.691435211482375*^9, 
   3.6914352224969945`*^9}, 3.6914354367335715`*^9, 3.691436039401616*^9, 
   3.691436281117446*^9, {3.691436330756533*^9, 3.6914364481381397`*^9}, {
   3.6914365351610928`*^9, 3.691436553882126*^9}, {3.6914367144466085`*^9, 
   3.6914367166774125`*^9}}],

Cell["\<\
Given the equilibrium values for the susceptible and first infected class we \
want to construct the equilibria for all the classes.\
\>", "Text",
 CellChangeTimes->{{3.6913291008820653`*^9, 3.6913291413887415`*^9}, 
   3.691440291170306*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiSub", "[", 
   RowBox[{"nIs_", ",", "nRs_", ",", "num_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sub", ",", "h", ",", "p", ",", "c", ",", "nI", ",", "nR"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"sub", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", "\[IndentingNewLine]", 
     RowBox[{"sub", "=", 
      RowBox[{"Equilibria", "[", 
       RowBox[{"[", "num", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "2"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
           RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"sub", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"i", "[", 
                 RowBox[{"h", ",", "p", ",", "c", ",", "\[Infinity]"}], "]"}],
                 "\[Rule]", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox["nI", "\[Tau]I"], 
                   RowBox[{"(", 
                    FractionBox["\[Tau]I", 
                    RowBox[{
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", "nI"}]], 
                    ")"}]}], ")"}], 
                 RowBox[{"i", "[", 
                  RowBox[{"h", ",", "p", ",", "1", ",", "\[Infinity]"}], 
                  "]"}]}]}], "/.", 
               RowBox[{"Equilibria", "[", 
                RowBox[{"[", "num", "]"}], "]"}]}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"sub", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["nR", "\[Tau]R"], 
                  RowBox[{"(", 
                   FractionBox["\[Tau]R", 
                    RowBox[{
                    RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}]}], 
                 ")"}], 
                RowBox[{"c", "-", "1"}]], 
               RowBox[{"(", 
                RowBox[{
                 FractionBox["nI", "\[Tau]I"], 
                 RowBox[{"(", 
                  FractionBox["\[Tau]R", 
                   RowBox[{
                    RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}]}], 
                ")"}], 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  FractionBox["nI", "\[Tau]I"], 
                  RowBox[{"(", 
                   FractionBox["\[Tau]I", 
                    RowBox[{
                    RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", "nI"}]], 
                   ")"}]}], ")"}], 
                RowBox[{"nI", "-", "1"}]], 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"i", "[", 
                  RowBox[{"h", ",", "1", ",", "1", ",", "\[Infinity]"}], 
                  "]"}], "+", 
                 RowBox[{"i", "[", 
                  RowBox[{"h", ",", "2", ",", "1", ",", "\[Infinity]"}], 
                  "]"}]}], ")"}]}]}], "/.", 
             RowBox[{"Equilibria", "[", 
              RowBox[{"[", "num", "]"}], "]"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sub", "=", 
      RowBox[{"sub", "/.", "zsub"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.691331420586049*^9, 3.6913315623339157`*^9}, {
   3.691331598491184*^9, 3.6913317307526307`*^9}, {3.691331776260915*^9, 
   3.6913318876481285`*^9}, 3.6913319557252555`*^9, {3.6913352951118393`*^9, 
   3.6913353029128513`*^9}, {3.691436302252283*^9, 3.6914363088998947`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subchapter",
 CellChangeTimes->{{3.690806940742116*^9, 3.690806942157197*^9}}],

Cell["\<\
To assess the stability of the equilibria described above we construct the \
Jacobian matrix for the system.\
\>", "Text",
 CellChangeTimes->{{3.691327669444045*^9, 3.6913277119527273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrx", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "k", ",", "l", ",", "j", ",", "h", ",", "p", ",", "c", ",", "jmtrx", ",",
       "nI", ",", "nR", ",", "ct"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", 
     RowBox[{"jmtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", 
          RowBox[{"2", "+", 
           RowBox[{"4", "*", "nI"}], "+", 
           RowBox[{"2", "*", "nR"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Susceptible", " ", "Equation", " ", 
       RowBox[{"g1", "[", 
        RowBox[{"h", ",", "t"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"(*", 
           RowBox[{"Susceptible", " ", "derivative", " ", 
            FractionBox["d", 
             RowBox[{"ds", "[", 
              RowBox[{"k", ",", "t"}], "]"}]]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{
             RowBox[{"jmtrx", "[", 
              RowBox[{"[", "h", "]"}], "]"}], ",", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"g1", "[", 
                RowBox[{"h", ",", "t"}], "]"}], ",", 
               RowBox[{"s", "[", 
                RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"l", "=", "1"}], ",", 
            RowBox[{"l", "\[LessEqual]", "2"}], ",", 
            RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"(*", 
               RowBox[{"Infected", " ", "derivative", " ", 
                FractionBox["d", 
                 RowBox[{"di", "[", 
                  RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]]}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{
                 RowBox[{"jmtrx", "[", 
                  RowBox[{"[", "h", "]"}], "]"}], ",", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"g1", "[", 
                    RowBox[{"h", ",", "t"}], "]"}], ",", 
                   RowBox[{"i", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                  "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"(*", 
             RowBox[{"recovered", " ", "derivative", " ", 
              FractionBox["d", 
               RowBox[{"dr", "[", 
                RowBox[{"k", ",", "j", ",", "t"}], "]"}]]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{
               RowBox[{"jmtrx", "[", 
                RowBox[{"[", "h", "]"}], "]"}], ",", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"g1", "[", 
                  RowBox[{"h", ",", "t"}], "]"}], ",", 
                 RowBox[{"r", "[", 
                  RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Infected", " ", "Equation", " ", 
       RowBox[{"g2", "[", 
        RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
           RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ct", "=", 
             RowBox[{"2", "+", 
              RowBox[{"nI", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", 
                  RowBox[{"(", 
                   RowBox[{"h", "-", "1"}], ")"}]}], "+", 
                 RowBox[{"(", 
                  RowBox[{"p", "-", "1"}], ")"}]}], ")"}]}], "+", "c"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "2"}], ",", 
              RowBox[{"k", "++"}], ",", 
              RowBox[{"(*", 
               RowBox[{"Susceptible", " ", "derivative", " ", 
                FractionBox["d", 
                 RowBox[{"ds", "[", 
                  RowBox[{"k", ",", "t"}], "]"}]]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"jmtrx", "[", 
                 RowBox[{"[", "ct", "]"}], "]"}], ",", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g2", "[", 
                   RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                  RowBox[{"s", "[", 
                   RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "2"}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"l", "=", "1"}], ",", 
                RowBox[{"l", "\[LessEqual]", "2"}], ",", 
                RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
                  RowBox[{"j", "++"}], ",", 
                  RowBox[{"(*", 
                   RowBox[{"Infected", " ", "derivative", " ", 
                    FractionBox["d", 
                    RowBox[{"di", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]]}], 
                   "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{"jmtrx", "[", 
                    RowBox[{"[", "ct", "]"}], "]"}], ",", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"g2", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                    "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}],
              "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"k", "=", "1"}], ",", 
              RowBox[{"k", "\[LessEqual]", "2"}], ",", 
              RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", "1"}], ",", 
                RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
                RowBox[{"j", "++"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"recovered", " ", "derivative", " ", 
                  FractionBox["d", 
                   RowBox[{"dr", "[", 
                    RowBox[{"k", ",", "j", ",", "t"}], "]"}]]}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"jmtrx", "[", 
                   RowBox[{"[", "ct", "]"}], "]"}], ",", 
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"g2", "[", 
                    RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
                 "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "]"}]}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Recovered", " ", "Equation", " ", 
       RowBox[{"g3", "[", 
        RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ct", "=", 
           RowBox[{"2", "+", 
            RowBox[{"4", "*", "nI"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "1"}], ")"}], "nR"}], "+", "c"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Susceptible", " ", "derivative", " ", 
              FractionBox["d", 
               RowBox[{"ds", "[", 
                RowBox[{"k", ",", "t"}], "]"}]]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"jmtrx", "[", 
               RowBox[{"[", "ct", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"g3", "[", 
                 RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                RowBox[{"s", "[", 
                 RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"l", "=", "1"}], ",", 
              RowBox[{"l", "\[LessEqual]", "2"}], ",", 
              RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"j", "=", "1"}], ",", 
                RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
                RowBox[{"j", "++"}], ",", 
                RowBox[{"(*", 
                 RowBox[{"Infected", " ", "derivative", " ", 
                  FractionBox["d", 
                   RowBox[{"di", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]]}], 
                 "*)"}], "\[IndentingNewLine]", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{"jmtrx", "[", 
                   RowBox[{"[", "ct", "]"}], "]"}], ",", 
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"g3", "[", 
                    RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                    RowBox[{"i", "[", 
                    RowBox[{"k", ",", "l", ",", "j", ",", "t"}], "]"}]}], 
                   "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"(*", 
               RowBox[{"recovered", " ", "derivative", " ", 
                FractionBox["d", 
                 RowBox[{"dr", "[", 
                  RowBox[{"k", ",", "j", ",", "t"}], "]"}]]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"jmtrx", "[", 
                 RowBox[{"[", "ct", "]"}], "]"}], ",", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g3", "[", 
                   RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                  RowBox[{"r", "[", 
                   RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "]"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"jmtrx", "=", 
      RowBox[{
       RowBox[{"jmtrx", "/.", "\[Beta]sub"}], "/.", 
       RowBox[{"t", "\[Rule]", "\[Infinity]"}]}]}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.691327653764414*^9, 3.691327667164441*^9}, {
  3.691327715821534*^9, 3.691328153676665*^9}, {3.691328292849862*^9, 
  3.6913285765382786`*^9}, {3.6913287215298047`*^9, 3.691328726116213*^9}, {
  3.6913287894272633`*^9, 3.691328950607579*^9}, {3.691328994646663*^9, 
  3.6913289973110695`*^9}, {3.691329043820157*^9, 3.691329048481366*^9}, {
  3.6913318993611493`*^9, 3.691331902075554*^9}, {3.693333583743303*^9, 
  3.693333603838138*^9}, {3.6936672952105956`*^9, 3.6936673219218473`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "0.02"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.005"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "50"}], ",", 
     RowBox[{"X", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"Y", "\[Rule]", "0.25"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6913320594044514`*^9, 3.6913321228659706`*^9}, {
  3.713364969783659*^9, 3.713365008781954*^9}}],

Cell[CellGroupData[{

Cell["Eigenvalue Analysis", "Subsection",
 CellChangeTimes->{{3.713364574261619*^9, 3.7133645973765097`*^9}}],

Cell["\<\
For each equilibrium we computer the eigenvalues of the jacobian matrix.  The \
sign of the leading eigenvalue indicates the stability of the equilibrium.\
\>", "Text",
 CellChangeTimes->{{3.713364600849697*^9, 3.7133646784642773`*^9}}],

Cell[CellGroupData[{

Cell["Host Extinction (equilibrium 1)", "Subsubsection",
 CellChangeTimes->{{3.6913321462194147`*^9, 3.69133215456883*^9}, {
   3.6913322547356186`*^9, 3.6913322682002444`*^9}, 3.693667617937475*^9}],

Cell[TextData[{
 "The eigenvalues of the Jacobian evaluated at this equilibria.  There are \
(2) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"b", "-", "d"}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"4", "nI"}], ")"}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "+", 
       FractionBox["nI", "\[Tau]I"]}], ")"}]}]}], TraditionalForm]]],
 ", and (2 nR) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Lambda]", "=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"d", "+", 
       FractionBox["nR", "\[Tau]R"]}], ")"}]}]}], TraditionalForm]]],
 ".  Since we assume ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", ">", "d"}], TraditionalForm]]],
 " we are guarenteed that atleast two of the eigenvalues are always positive \
and hence the equilibrium is unstable.  In addition all of the eigenavlues \
will be real.  "
}], "Text",
 CellChangeTimes->{{3.693667418086645*^9, 3.6936676310186996`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Disease Extinction (equilibria 2,3)", "Subsubsection",
 CellChangeTimes->{{3.6913321908865*^9, 3.691332194303906*^9}, {
  3.6913322461804028`*^9, 3.6913322719130507`*^9}}],

Cell["\<\
As for the disease extinction equilibrium in the SIRS model without \
coevolution we can write a general form of the jacobian matrix evaluated at \
this equilibrium and the corresponding characteristic polynomial.  
The jacobian matrix has the following form:\
\>", "Text",
 CellChangeTimes->{{3.6944424851445074`*^9, 3.694442499262532*^9}, {
  3.694442670614272*^9, 3.6944427219289956`*^9}, {3.7045397718193703`*^9, 
  3.704539774433622*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Mtrx", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nI", ",", "nR", ",", "mtrx", ",", "k", ",", "l", ",", "j", ",", "h", 
      ",", "p", ",", "c"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", 
     RowBox[{"mtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", 
          RowBox[{"2", "+", 
           RowBox[{"4", "nI"}], "+", 
           RowBox[{"2", "nR"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", 
          RowBox[{"2", "+", 
           RowBox[{"4", "nI"}], "+", 
           RowBox[{"2", "nR"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ict", "[", 
       RowBox[{"h_", ",", "p_", ",", "c_"}], "]"}], ":=", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", "-", "1"}], ")"}], "+", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"h", "-", "1"}], ")"}]}]}], ")"}], "nI"}], "+", "c"}]}], 
     ";", 
     RowBox[{
      RowBox[{"rct", "[", 
       RowBox[{"h_", ",", "c_"}], "]"}], ":=", 
      RowBox[{"2", "+", 
       RowBox[{"4", "nI"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"h", "-", "1"}], ")"}], "nR"}], "+", "c"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"h", "\[Equal]", "1"}], ",", 
            RowBox[{
             RowBox[{"mtrx", "[", 
              RowBox[{"[", 
               RowBox[{"h", ",", "k"}], "]"}], "]"}], "=", "A1"}], ",", 
            RowBox[{
             RowBox[{"mtrx", "[", 
              RowBox[{"[", 
               RowBox[{"h", ",", "k"}], "]"}], "]"}], "=", "A2"}]}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", " ", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"l", "=", "1"}], ",", 
            RowBox[{"l", "\[LessEqual]", "2"}], ",", 
            RowBox[{"l", "++"}], ",", " ", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
              RowBox[{"j", "++"}], ",", " ", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"k", "\[Equal]", "h"}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"ict", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], " ", "]"}], 
                  "]"}], "=", "Cx"}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"ict", "[", 
                    RowBox[{"k", ",", "l", ",", "j"}], "]"}]}], " ", "]"}], 
                  "]"}], "=", "Cy"}]}], "]"}]}], " ", "]"}]}], "]"}]}], "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", " ", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
            RowBox[{"j", "++"}], ",", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"k", "\[Equal]", "h"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"j", "<", "nR"}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"rct", "[", 
                    RowBox[{"k", ",", "j"}], "]"}]}], " ", "]"}], "]"}], "=", 
                 RowBox[{"Bx", "[", "h", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"mtrx", "[", 
                  RowBox[{"[", 
                   RowBox[{"h", ",", 
                    RowBox[{"rct", "[", 
                    RowBox[{"k", ",", "j"}], "]"}]}], " ", "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"Bx", "[", "h", "]"}], "+", "F2"}]}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{"h", ",", 
                  RowBox[{"rct", "[", 
                   RowBox[{"k", ",", "j"}], "]"}]}], " ", "]"}], "]"}], "=", 
               RowBox[{"By", "[", "h", "]"}]}]}], "]"}]}], " ", "]"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
           RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"c", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"k", "=", "1"}], ",", 
                RowBox[{"k", "\[LessEqual]", "2"}], ",", 
                RowBox[{"k", "++"}], ",", " ", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"j", "=", "1"}], ",", 
                  RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
                  RowBox[{"j", "++"}], ",", 
                  RowBox[{
                   RowBox[{"mtrx", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ict", "[", 
                    RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                    RowBox[{"ict", "[", 
                    RowBox[{"k", ",", "p", ",", "j"}], "]"}]}], "]"}], "]"}], 
                   "=", 
                   RowBox[{"D2", "[", 
                    RowBox[{"h", ",", "p"}], "]"}]}]}], " ", "]"}]}], "]"}], 
              ";", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ict", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ict", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}]}], "]"}], "]"}], 
               "=", 
               RowBox[{"D1", "[", 
                RowBox[{"h", ",", "p"}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ict", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ict", "[", 
                   RowBox[{"h", ",", "p", ",", 
                    RowBox[{"c", "-", "1"}]}], "]"}]}], " ", "]"}], "]"}], 
               "=", "E2"}], ";", " ", 
              RowBox[{
               RowBox[{"mtrx", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ict", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}], ",", 
                  RowBox[{"ict", "[", 
                   RowBox[{"h", ",", "p", ",", "c"}], "]"}]}], " ", "]"}], 
                "]"}], "=", "E1"}]}]}], "\[IndentingNewLine]", "]"}]}], 
          "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"l", "=", "1"}], ",", 
         RowBox[{"l", "\[LessEqual]", "2"}], ",", 
         RowBox[{"l", "++"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"mtrx", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"rct", "[", 
               RowBox[{"h", ",", "1"}], "]"}], ",", 
              RowBox[{"ict", "[", 
               RowBox[{"h", ",", "l", ",", "nI"}], "]"}]}], " ", "]"}], "]"}],
            "=", "E2"}], ";", 
          RowBox[{
           RowBox[{"mtrx", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"rct", "[", 
               RowBox[{"h", ",", "1"}], "]"}], ",", 
              RowBox[{"rct", "[", 
               RowBox[{"h", ",", "1"}], "]"}]}], "]"}], "]"}], "=", 
           "F1"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "2"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"mtrx", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"rct", "[", 
               RowBox[{"h", ",", "c"}], "]"}], ",", 
              RowBox[{"rct", "[", 
               RowBox[{"h", ",", "c"}], "]"}]}], "]"}], "]"}], "=", "F1"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"mtrx", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"rct", "[", 
               RowBox[{"h", ",", "c"}], "]"}], ",", 
              RowBox[{"rct", "[", 
               RowBox[{"h", ",", 
                RowBox[{"c", "-", "1"}]}], "]"}]}], "]"}], "]"}], "=", "F2"}],
           ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"mtrx", "-", 
      RowBox[{"\[Lambda]", " ", 
       RowBox[{"IdentityMatrix", "[", 
        RowBox[{"2", "+", 
         RowBox[{"4", " ", "nI"}], "+", 
         RowBox[{"2", " ", "nR"}]}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6944427382330246`*^9, 3.694442752179449*^9}, {
  3.6944433461451087`*^9, 3.6944433555675254`*^9}}],

Cell[TextData[{
 "The characteristic polynomial has the form:\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"CharPoly", "[", 
    RowBox[{"nI_", ",", "nR_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "\[Lambda]"}], 
    RowBox[{"(", 
     RowBox[{"A1", "+", "A2", "-", "\[Lambda]"}], ")"}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"E1", "-", "\[Lambda]"}], ")"}], 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"nI", "-", "1"}], ")"}]}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"F1", "-", "\[Lambda]"}], ")"}], 
     RowBox[{"2", "nR"}]], 
    RowBox[{"TERM", "[", "nI", "]"}]}]}]]],
 ". \nWhere TERM[nI] is a large polynomial in \[Lambda].  Note that the \
characteristic polynomial always has at least one 0 root.  This is because \
there are infact an infinite number of disease free equilibria none of which \
are stable.  However for none of the disease free equilibria to be reached \
there must be a second zero root.  This occurs only if TERM[nI] has a zero \
root.  For polynomial TERM[nI] to have a zero root it\[CloseCurlyQuote]s \
constant term must be zero.  The constant term of this polynomial is given by \
T[nI,1]T[nI,2] where T is defined as:"
}], "Text",
 CellChangeTimes->{{3.694445484415762*^9, 3.6944454930082536`*^9}, {
  3.694447882647933*^9, 3.6944479067683125`*^9}, {3.694448133145261*^9, 
  3.6944482869200563`*^9}, {3.70453978132379*^9, 3.7045398172425747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", 
   RowBox[{"nI_", ",", "p_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"D1", "[", 
        RowBox[{"2", ",", "p"}], "]"}], " ", 
       RowBox[{"D2", "[", 
        RowBox[{"1", ",", "p"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"D1", "[", 
          RowBox[{"1", ",", "p"}], "]"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"D2", "[", 
           RowBox[{"1", ",", "p"}], "]"}]}]}], ")"}], " ", 
       RowBox[{"D2", "[", 
        RowBox[{"2", ",", "p"}], "]"}]}]}], ")"}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "E2"}], ")"}], "i"], 
       SuperscriptBox[
        RowBox[{"(", "E1", ")"}], 
        RowBox[{"nI", "-", "1", "-", "i"}]]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"nI", "-", "1"}]}], "}"}]}], "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["E1", 
     RowBox[{"nI", "-", "1"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"D1", "[", 
        RowBox[{"1", ",", "p"}], "]"}], " ", 
       RowBox[{"D1", "[", 
        RowBox[{"2", ",", "p"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"D2", "[", 
        RowBox[{"1", ",", "p"}], "]"}], " ", 
       RowBox[{"D2", "[", 
        RowBox[{"2", ",", "p"}], "]"}]}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.694447437341463*^9, 3.69444751509591*^9}, {
  3.6944475576323433`*^9, 3.694447558574397*^9}, {3.6944476223750467`*^9, 
  3.694447629710466*^9}, {3.694447667943653*^9, 3.6944476873107605`*^9}, {
  3.6944477575197763`*^9, 3.694447764686186*^9}, {3.6944478257516785`*^9, 
  3.6944478419836073`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"letters", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A1", "\[Rule]", " ", 
      RowBox[{"d", "+", 
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"se", "[", "2", "]"}]}]}], ")"}]}]}]}], ",", 
     RowBox[{"A2", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"-", "b"}], " ", "\[Kappa]", " ", 
       RowBox[{"se", "[", "2", "]"}]}]}], ",", 
     RowBox[{"E1", "\[Rule]", " ", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}]}]}], ",", 
     RowBox[{"E2", "\[Rule]", " ", 
      FractionBox["nI", "\[Tau]I"]}], ",", 
     RowBox[{
      RowBox[{"D1", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"se", "[", "1", "]"}]}], " ", "-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"D1", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Y", " ", 
        RowBox[{"se", "[", "1", "]"}]}], " ", "-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"D1", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"Y", " ", 
        RowBox[{"se", "[", "2", "]"}]}], " ", "-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"D1", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"X", " ", 
        RowBox[{"se", "[", "2", "]"}]}], " ", "-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["nI", "\[Tau]I"], "+", "\[Delta]"}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"D2", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
      RowBox[{"X", " ", 
       RowBox[{"se", "[", "1", "]"}]}]}], " ", ",", 
     RowBox[{
      RowBox[{"D2", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
      RowBox[{"Y", " ", 
       RowBox[{"se", "[", "1", "]"}]}]}], " ", ",", 
     RowBox[{
      RowBox[{"D2", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
      RowBox[{"Y", " ", 
       RowBox[{"se", "[", "2", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"D2", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
      RowBox[{"X", " ", 
       RowBox[{"se", "[", "2", "]"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.694442780287547*^9, 3.6944427854355564`*^9}, {
   3.694442967201351*^9, 3.694442980884576*^9}, {3.6944430379206767`*^9, 
   3.694443047421094*^9}, {3.6944431560415325`*^9, 3.6944431992780237`*^9}, 
   3.69444328235417*^9, {3.694445957977848*^9, 3.694446010174834*^9}, {
   3.694446063207867*^9, 3.694446193076295*^9}, {3.694446427469702*^9, 
   3.694446443819637*^9}}],

Cell["\<\
Given the critical value of b that determines when only one of each endemic \
equilibria exists from above we have\
\>", "Text",
 CellChangeTimes->{{3.694454076842454*^9, 3.6944541200877295`*^9}, {
  3.694985396409151*^9, 3.694985410591963*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"T", "[", 
        RowBox[{"nI", ",", "1"}], "]"}], "+", 
       RowBox[{"T", "[", 
        RowBox[{"nI", ",", "2"}], "]"}]}], "/.", "letters"}], "/.", 
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"b", "-", "d", "-", 
        RowBox[{"b", " ", "\[Kappa]", " ", 
         RowBox[{"se", "[", "2", "]"}]}]}], 
       RowBox[{"b", " ", "\[Kappa]"}]]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{"b", "\[Rule]", 
      FractionBox[
       RowBox[{"d", " ", 
        RowBox[{"(", 
         RowBox[{"X", "+", "Y"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["nI", 
             RowBox[{"nI", "+", 
              RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
         ")"}]}], 
       RowBox[{
        RowBox[{"2", " ", "\[Delta]", " ", "\[Kappa]"}], "+", 
        RowBox[{"X", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["nI", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
          ")"}]}], "+", 
        RowBox[{"Y", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["nI", 
              RowBox[{"nI", "+", 
               RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], 
          ")"}]}]}]]}], "}"}]}], ",", 
   RowBox[{"Element", "[", 
    RowBox[{"nI", ",", "Integers"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6949853367727404`*^9, 3.6949853495074687`*^9}, {
  3.6954771326956577`*^9, 3.695477150822695*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6949861491612062`*^9, 3.6949862861210403`*^9, {3.6954771348127785`*^9, 
   3.6954771514717317`*^9}, 3.6963577860610466`*^9, 3.7132044033732643`*^9, 
   3.713364898873481*^9, 3.714149789533119*^9}]
}, Closed]],

Cell["\<\
Hence the same conditions that determine the biological validity of the \
endemic equilibria determine the stability of the disease free equilibrium.\
\>", "Text",
 CellChangeTimes->{{3.694454149807782*^9, 3.694454181383238*^9}, 
   3.713364894873311*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Single Infection present (Equilibria 4-11)", "Subsubsection",
 CellChangeTimes->{{3.6913323718156433`*^9, 3.6913323864090705`*^9}, {
   3.691332535043356*^9, 3.6913325383317633`*^9}, {3.6944426588498516`*^9, 
   3.694442659037052*^9}, 3.6944541864064465`*^9}],

Cell["\<\
Unlike the extinction equilibrium or the disease free equilibrium we asess \
the stability of these equilibria numerically for the parameters given by \
Pars.\
\>", "Text",
 CellChangeTimes->{{3.694454195594863*^9, 3.694454221828923*^9}, {
  3.694454252764777*^9, 3.6944542570391846`*^9}, {3.7133649047374907`*^9, 
  3.713364931654407*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Vars", "[", 
    RowBox[{"nI_", ",", "nR_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"h", ",", "\[Infinity]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"i", "[", 
         RowBox[{"h", ",", "p", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], "]"}], "//", 
    "Flatten"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7133652075000257`*^9, 3.7133653109838457`*^9}}],

Cell[TextData[StyleBox["Equilibrium 4:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, 
   3.6944542307989388`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "4"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.691436812561181*^9}, {
  3.713364939321713*^9, 3.713364941581847*^9}, {3.713365017801963*^9, 
  3.713365018054337*^9}, {3.713365321487789*^9, 3.713365328771789*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.009011011946085633`"}]], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.691436812997982*^9}, 
   3.6942874535301027`*^9, 3.6963577861030493`*^9, 3.713204403440055*^9, 
   3.713365018883478*^9, 3.713365087933758*^9, {3.713365323022403*^9, 
   3.713365329300766*^9}, 3.714149789780717*^9}]
}, Closed]],

Cell[TextData[{
 "Not biological",
 StyleBox["ly valid",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, {
  3.69177996572025*^9, 3.691779968607684*^9}}],

Cell[TextData[StyleBox["Equilibrium 5:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, {
  3.6914368359788227`*^9, 3.691436837445225*^9}, {3.6944542320937414`*^9, 
  3.6944542333417435`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "5"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.6914368419390326`*^9}, {
  3.713365108394019*^9, 3.713365111407818*^9}, {3.71336533360636*^9, 
  3.71336533543892*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.009011011946085633`"}]], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.6914368427346344`*^9}, 
   3.694287453573105*^9, 3.6963577861440516`*^9, 3.7132044035165567`*^9, 
   3.713365112134652*^9, 3.713365335850511*^9, 3.714149789975189*^9}]
}, Closed]],

Cell[TextData[{
 "Not biological",
 StyleBox["ly valid",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, 
   3.6917799816425543`*^9}],

Cell[TextData[StyleBox["Equilibrium 6:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, {
   3.6914368359788227`*^9, 3.69143685176805*^9}, 3.694454234979746*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "6"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.691436853905254*^9}, {
  3.713365120980031*^9, 3.713365123745311*^9}, {3.7133653385797377`*^9, 
  3.713365340377879*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.691436854514655*^9}, 
   3.694287453614107*^9, 3.696357786186054*^9, 3.7132044036003437`*^9, 
   3.713365124382269*^9, 3.7133653407764*^9, 3.714149790171419*^9}]
}, Closed]],

Cell["Biologically plausible", "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, {
   3.6914368667208767`*^9, 3.6914368700124826`*^9}, 3.6917799877926407`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", 
      RowBox[{"20", ",", "20"}], "]"}], "/.", 
     RowBox[{"EquiSub", "[", 
      RowBox[{"20", ",", "20", ",", "6"}], "]"}]}], "/.", "Pars"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.69143687444289*^9, {3.713365134116661*^9, 3.7133651602239447`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.713365146751631*^9, 3.713365154628748*^9}}],

Cell[BoxData["0.0022777242986446265`"], "Output",
 CellChangeTimes->{3.713365155118655*^9, 3.714149794181279*^9}]
}, Closed]],

Cell["Unstable", "Text",
 CellChangeTimes->{{3.6914368798092995`*^9, 3.6914368826183047`*^9}}],

Cell[TextData[StyleBox["Equilibrium 7:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, {
   3.6914368359788227`*^9, 3.69143685176805*^9}, {3.6914368934613237`*^9, 
   3.6914368936485243`*^9}, 3.694454238754953*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "7"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.691436853905254*^9}, {
  3.6914368994829345`*^9, 3.6914369080161495`*^9}, {3.713365166726364*^9, 
  3.713365170846161*^9}, {3.713365348096033*^9, 3.713365350656418*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.691436854514655*^9}, 
   3.6914369086089506`*^9, 3.694287453871122*^9, 3.696357786375065*^9, 
   3.713204403766922*^9, 3.713365174556086*^9, 3.71336535144022*^9, 
   3.7141497943778687`*^9}]
}, Closed]],

Cell["Biologically plausible", "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, {
   3.6914368667208767`*^9, 3.6914368700124826`*^9}, 3.691779991663279*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"JMtrx", "[", 
     RowBox[{"1", ",", "2"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"1", ",", "2", ",", "7"}], "]"}]}], "/.", "Pars"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", "%", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.69143687444289*^9, 3.6914369031957407`*^9}, {
  3.71336536608541*^9, 3.7133653728054934`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.11554154138929404`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.10500000000000001`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.033066157124017795`"}], "+", 
    RowBox[{"0.08287753451366102`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.033066157124017795`"}], "-", 
    RowBox[{"0.08287753451366102`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.07686342145044141`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.050839444130977296`"}], "+", 
    RowBox[{"0.03956583368695885`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.050839444130977296`"}], "-", 
    RowBox[{"0.03956583368695885`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.052500000000000074`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.01824962052155405`"}], "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.00009775154123308143`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.691436874708091*^9, 3.6914369045685434`*^9}, 
   3.6942874539521265`*^9, 3.696357786453069*^9, 3.713204403850452*^9, 
   3.713365375535536*^9, 3.714149794448349*^9}],

Cell[BoxData["0.00009775154123308143`"], "Output",
 CellChangeTimes->{{3.691436874708091*^9, 3.6914369045685434`*^9}, 
   3.6942874539521265`*^9, 3.696357786453069*^9, 3.713204403850452*^9, 
   3.713365375535536*^9, 3.714149794464094*^9}]
}, Closed]],

Cell["Unstable", "Text",
 CellChangeTimes->{{3.6914368798092995`*^9, 3.6914368826183047`*^9}}],

Cell[TextData[StyleBox["Equilibrium 8:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, {
   3.6914368359788227`*^9, 3.69143685176805*^9}, {3.6914368934613237`*^9, 
   3.691436920402571*^9}, 3.6944542404397554`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "8"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.691436853905254*^9}, {
  3.6914368994829345`*^9, 3.6914369221341743`*^9}, {3.713365401918034*^9, 
  3.713365404147271*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.018016683418984946`"}]], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.691436854514655*^9}, {
   3.6914369086089506`*^9, 3.6914369232417765`*^9}, 3.6942874539951286`*^9, 
   3.6963577864970713`*^9, 3.713204403933567*^9, 3.713365404952682*^9, 
   3.714149794657604*^9}]
}, Closed]],

Cell["not biological", "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, {
  3.6914368667208767`*^9, 3.6914368700124826`*^9}, {3.6914369290927863`*^9, 
  3.6914369307463894`*^9}}],

Cell[TextData[StyleBox["Equilibrium 9:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, {
   3.6914368359788227`*^9, 3.69143685176805*^9}, {3.6914368934613237`*^9, 
   3.69143694247861*^9}, 3.6944542422181587`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "9"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.691436853905254*^9}, {
  3.6914368994829345`*^9, 3.6914369450214148`*^9}, {3.713365408768958*^9, 
  3.713365410889661*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.018016683418984946`"}]], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.691436854514655*^9}, {
   3.6914369086089506`*^9, 3.6914369461758165`*^9}, 3.694287454046132*^9, 
   3.696357786539074*^9, 3.7132044040180197`*^9, 3.713365411683304*^9, 
   3.714149794876943*^9}]
}, Closed]],

Cell[TextData[{
 "Not biologica",
 StyleBox["lly valid",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, {
   3.6914368667208767`*^9, 3.6914368700124826`*^9}, {3.6914369290927863`*^9, 
   3.6914369307463894`*^9}, 3.6917800051455317`*^9}],

Cell[TextData[StyleBox["Equilibrium 10:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, {
   3.6914368359788227`*^9, 3.69143685176805*^9}, {3.6914368934613237`*^9, 
   3.6914368936485243`*^9}, 3.691436983665683*^9, {3.6944542443397627`*^9, 
   3.6944542445269628`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "10"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.691436853905254*^9}, {
  3.6914368994829345`*^9, 3.6914369080161495`*^9}, {3.691436987144489*^9, 
  3.691436987253689*^9}, {3.7133654163835077`*^9, 3.7133654183870277`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.691436854514655*^9}, 
   3.6914369086089506`*^9, 3.6914369882208905`*^9, 3.6942874541021347`*^9, 
   3.6963577865810766`*^9, 3.713204404102009*^9, 3.713365419075781*^9, 
   3.7141497950713263`*^9}]
}, Closed]],

Cell["Biologically plausible", "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, {
   3.6914368667208767`*^9, 3.6914368700124826`*^9}, 3.691780013103827*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", 
      RowBox[{"20", ",", "20"}], "]"}], "/.", 
     RowBox[{"EquiSub", "[", 
      RowBox[{"20", ",", "20", ",", "10"}], "]"}]}], "/.", "Pars"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", "%", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.69143687444289*^9, 3.6914369031957407`*^9}, {
  3.6914369913408957`*^9, 3.691436991590496*^9}, {3.713365427715708*^9, 
  3.71336545542635*^9}}],

Cell[BoxData["0.15709055964651736`"], "Output",
 CellChangeTimes->{{3.691436874708091*^9, 3.6914369045685434`*^9}, 
   3.6914369921988974`*^9, 3.69428745419814*^9, 3.696357786672082*^9, 
   3.713204404294952*^9, {3.713365440813151*^9, 3.713365459704603*^9}, 
   3.714149798884479*^9}]
}, Closed]],

Cell["Unstable", "Text",
 CellChangeTimes->{{3.6914368798092995`*^9, 3.6914368826183047`*^9}}],

Cell[TextData[StyleBox["Equilibrium 11:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.69143680081336*^9, 3.691436804152766*^9}, {
   3.6914368359788227`*^9, 3.69143685176805*^9}, {3.6914368934613237`*^9, 
   3.6914368936485243`*^9}, 3.6914370010597134`*^9, {3.6944542467577667`*^9, 
   3.694454246913767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "11"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6914367810617256`*^9, 3.691436853905254*^9}, {
  3.6914368994829345`*^9, 3.6914369080161495`*^9}, {3.6914370029785166`*^9, 
  3.6914370031345167`*^9}, {3.7133654677740583`*^9, 3.7133654798677273`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.691436782543728*^9, 3.691436854514655*^9}, 
   3.6914369086089506`*^9, 3.691437011917332*^9, 3.694287454241143*^9, 
   3.6963577867540865`*^9, 3.7132044043838177`*^9, 3.713365480396901*^9, 
   3.7141497991164083`*^9}]
}, Closed]],

Cell["Biologically plausible", "Text",
 CellChangeTimes->{{3.691436818192791*^9, 3.691436820610795*^9}, {
   3.6914368667208767`*^9, 3.6914368700124826`*^9}, 3.691780016470414*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", 
      RowBox[{"20", ",", "20"}], "]"}], "/.", 
     RowBox[{"EquiSub", "[", 
      RowBox[{"20", ",", "20", ",", "11"}], "]"}]}], "/.", "Pars"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", "%", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.69143687444289*^9, 3.6914369031957407`*^9}, {
  3.6914370083293257`*^9, 3.6914370084853263`*^9}, {3.713365487099503*^9, 
  3.713365489859511*^9}}],

Cell[BoxData["0.15709055964651836`"], "Output",
 CellChangeTimes->{{3.691436874708091*^9, 3.6914369045685434`*^9}, 
   3.6914370099361286`*^9, 3.694287454326148*^9, 3.6963577869090953`*^9, 
   3.713204404468382*^9, 3.713365503611013*^9, 3.714149802961429*^9}]
}, Closed]],

Cell["Unstable", "Text",
 CellChangeTimes->{{3.6914368798092995`*^9, 3.6914368826183047`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Endemic and polymorphic equilibria, all infections present (Equilibria 12,13)\
\>", "Subsubsection",
 CellChangeTimes->{{3.6913326248947244`*^9, 3.6913326494281707`*^9}, {
  3.694442662094657*^9, 3.6944426633426595`*^9}}],

Cell[TextData[StyleBox["Equilibrium 1:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.691332765642392*^9, 3.6913327756328106`*^9}, {
  3.691437058986615*^9, 3.691437063651023*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "12"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.691332659339391*^9, 3.691332666593404*^9}, 
   3.691332716428297*^9, {3.6913328769726057`*^9, 3.6913328776902075`*^9}, {
   3.691437041608185*^9, 3.6914370416705847`*^9}, {3.713365577912285*^9, 
   3.7133655802424107`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.006006741440301463`"}]], "Output",
 CellChangeTimes->{{3.6913326601973925`*^9, 3.6913326693702087`*^9}, {
   3.6913327103286867`*^9, 3.6913327170545006`*^9}, 3.691332878251808*^9, 
   3.6913352654177976`*^9, 3.691335322724879*^9, 3.6914370431057873`*^9, 
   3.6942874544091525`*^9, 3.6963577869951*^9, 3.713204404551697*^9, 
   3.713364471844343*^9, 3.713365581096334*^9, 3.714149803333754*^9}]
}, Closed]],

Cell[TextData[{
 "Not biological",
 StyleBox["ly valid",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.691332765642392*^9, 3.691332795352849*^9}, {
  3.691437048565797*^9, 3.6914370530586047`*^9}, {3.691780024055354*^9, 
  3.691780025481246*^9}}],

Cell[TextData[StyleBox["Equilibrium 2:",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.691332765642392*^9, 3.6913327756328106`*^9}, {
  3.691437058986615*^9, 3.691437071637638*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Vars", "[", 
     RowBox[{"20", ",", "20"}], "]"}], "/.", 
    RowBox[{"EquiSub", "[", 
     RowBox[{"20", ",", "20", ",", "13"}], "]"}]}], "/.", "Pars"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.691332659339391*^9, 3.691332666593404*^9}, 
   3.691332716428297*^9, 3.691332784623228*^9, {3.6913328732121973`*^9, 
   3.691332874132599*^9}, {3.691437073635442*^9, 3.691437073729042*^9}, {
   3.713365585062936*^9, 3.7133655874352617`*^9}}],

Cell[BoxData["0.0009637346286253858`"], "Output",
 CellChangeTimes->{{3.6913326601973925`*^9, 3.6913326693702087`*^9}, {
   3.6913327103286867`*^9, 3.6913327170545006`*^9}, 3.6913327860428305`*^9, 
   3.6913328746942005`*^9, 3.6913352667288*^9, 3.6913353227848787`*^9, 
   3.6914370745558434`*^9, 3.6942874544651556`*^9, 3.696357787081105*^9, 
   3.7132044046343946`*^9, 3.71336447378526*^9, 3.713365588454892*^9, 
   3.71414980369902*^9}]
}, Closed]],

Cell["Biologically valid", "Text",
 CellChangeTimes->{{3.6914370767554474`*^9, 3.6914370793762517`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrx", "[", 
      RowBox[{"20", ",", "20"}], "]"}], "/.", 
     RowBox[{"EquiSub", "[", 
      RowBox[{"20", ",", "20", ",", "13"}], "]"}]}], "/.", "Pars"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", "%", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.713364480679162*^9, 3.713364506195723*^9}, {
  3.7133656008869753`*^9, 3.7133656033093023`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.713364484793696*^9, 3.713364506785241*^9}, 
   3.713365616571484*^9, 3.714149809445506*^9}],

Cell[BoxData[
 RowBox[{"Re", "[", "$Aborted", "]"}]], "Output",
 CellChangeTimes->{{3.713364484793696*^9, 3.713364506785241*^9}, 
   3.713365616571484*^9, 3.7141498094554873`*^9}]
}, Closed]],

Cell["\<\
All biologically valid equilibria are unstable implying that there is a \
possibility of limit cycles.\
\>", "Text",
 CellChangeTimes->{{3.69143709524148*^9, 3.69143710123189*^9}, {
  3.713364514001966*^9, 3.7133645331026077`*^9}, {3.713365620160447*^9, 
  3.7133656508928337`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvector Analysis", "Subsection",
 CellChangeTimes->{{3.7133645918279657`*^9, 3.713364595085203*^9}}],

Cell["\<\
Particularly in cases where there are potentially limit cycles (all \
equilibria are unstable), we are interested in determining whether the system \
cycles outwards from pH=0.5 and pP=0.5 in allele frequency or only in the \
epidemiological dynamics.  This was determined by numerically analyzing the \
direction of the eigenvectors for the Jacobian matrix at the biologically \
valid endemic equilibrium (equilibrium 13).  Specifically, if all \
eigenvectors corresponding to eigenvalues with positive real parts lie in a \
direction where the allele frequencies are constrained to pH=0.5 and pP=0.5 \
then the system will not exhibit allele frequency cycles as it moves away \
from equilibrium 13.  This analysis was repeated 10^6 times.  Furthermore, in \
a subset of cases, we used numerical integration to confirm that there were \
no sustained allele frequency cycles even when the endemic equilibrium was \
unstable.\
\>", "Text",
 CellChangeTimes->{{3.713364683548563*^9, 3.7133648111935577`*^9}, {
  3.713364848289456*^9, 3.71336484976663*^9}, {3.713365661259844*^9, 
  3.71336586691715*^9}, {3.714146301871372*^9, 3.714146307375895*^9}, {
  3.714146464100691*^9, 3.714146466437223*^9}, {3.714146520846087*^9, 
  3.714146567737067*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"JMtrx", "[", 
       RowBox[{"20", ",", "20"}], "]"}], "/.", 
      RowBox[{"EquiSub", "[", 
       RowBox[{"20", ",", "20", ",", "13"}], "]"}]}], "/.", "Pars"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.713365882691958*^9, 3.7133659006304827`*^9}, {
  3.713366008439912*^9, 3.71336602228154*^9}}],

Cell["\<\
Function for calculating allele frequencies given an eigenvector:\
\>", "Text",
 CellChangeTimes->{{3.713366532731367*^9, 3.713366533294313*^9}, {
  3.71336657472059*^9, 3.713366581795293*^9}, {3.713367064598652*^9, 
  3.713367072149975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcAF", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "evec_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"evec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p", "-", "1"}], ")"}], "nI"}], "+", "c"}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{"4", "nI"}], "+", "c"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"evec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"evec", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", 
                RowBox[{"(", 
                 RowBox[{"h", "-", "1"}], ")"}]}], "+", 
               RowBox[{"(", 
                RowBox[{"p", "-", "1"}], ")"}]}], ")"}], "nI"}], "+", "c"}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{"4", "nI"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "1"}], ")"}], "nR"}], "+", "c"}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"evec", "[", 
         RowBox[{"[", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "-", "1"}], ")"}], "nI"}], "+", "c"}], "]"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"evec", "[", 
         RowBox[{"[", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", 
               RowBox[{"(", 
                RowBox[{"h", "-", "1"}], ")"}]}], "+", 
              RowBox[{"(", 
               RowBox[{"p", "-", "1"}], ")"}]}], ")"}], "nI"}], "+", "c"}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ")"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.713366564456813*^9, 3.713366584487239*^9}, {
  3.713366620267414*^9, 3.713366633142713*^9}, {3.713366669362541*^9, 
  3.7133666817013206`*^9}, {3.7133667219679823`*^9, 3.713367013596833*^9}}],

Cell["\<\
Testing all eigenvectors corresponding to positive eigenvalues\
\>", "Text",
 CellChangeTimes->{{3.71336933698517*^9, 3.713369351537262*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "j", "}"}], ",", 
   RowBox[{
    RowBox[{"PosEvecs", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", 
       RowBox[{"Length", "[", 
        RowBox[{"sys", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"sys", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "j"}], "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"PosEvecs", ",", 
           RowBox[{"sys", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"Chop", "[", 
           RowBox[{"calcAF", "[", 
            RowBox[{"20", ",", "20", ",", 
             RowBox[{"PosEvecs", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7133660285148478`*^9, 3.713366074273838*^9}, {
  3.7133664310928097`*^9, 3.713366507394167*^9}, {3.7133665431980143`*^9, 
  3.713366550202505*^9}, {3.713366607092724*^9, 3.713366608239375*^9}, {
  3.713367080342608*^9, 3.713367185858897*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5000000000001517`", ",", "0.49999999999999883`"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.713367186502307*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5000000000001517`", ",", "0.49999999999999883`"}], 
  "}"}]], "Print",
 CellChangeTimes->{3.713367186513019*^9}]
}, Closed]]
}, Closed]],

Cell["\<\
All eigenvectors corresponding to positive eigenvalues have host and parasite \
allele frequencies of 0.5 and hence there will be no limit cycles in allele \
frequencies.\
\>", "Text",
 CellChangeTimes->{{3.7133671937344227`*^9, 3.7133672604913197`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical Integration", "Subchapter",
 CellChangeTimes->{{3.690806946333436*^9, 3.690806949517618*^9}}],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.713180707899868*^9, 3.713180712102862*^9}, {
  3.7131817658521433`*^9, 3.713181767304467*^9}}],

Cell["We must first choose inital conditions", "Text",
 CellChangeTimes->{{3.713180943119342*^9, 3.713180945806583*^9}, {
  3.7131817174112797`*^9, 3.713181733199626*^9}, {3.713363706606958*^9, 
  3.713363712338996*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitEqus", "[", 
   RowBox[{"pH_", ",", "pP_", ",", "nI_", ",", "nR_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pP", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
         RowBox[{"i21", " ", "\[Alpha]P"}]}], 
        RowBox[{
         RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
         RowBox[{"i12", " ", "\[Alpha]H"}], "+", " ", 
         RowBox[{"i21", " ", "\[Alpha]P"}], "+", "i22"}]]}], ",", 
      RowBox[{"pH", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"s1", " ", "\[Alpha]H"}], "+", 
         RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
         RowBox[{"i12", " ", "\[Alpha]H"}], "+", 
         RowBox[{"r1", " ", "\[Alpha]H"}]}], 
        RowBox[{
         RowBox[{"s1", " ", "\[Alpha]H"}], "+", "s2", "+", 
         RowBox[{"i11", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
         RowBox[{"i12", " ", "\[Alpha]H"}], "+", 
         RowBox[{"i21", " ", "\[Alpha]P"}], "+", "i22", "+", 
         RowBox[{"r1", " ", "\[Alpha]H"}], "+", "r2"}]]}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s1", "\[Rule]", 
       RowBox[{"s", "[", 
        RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], ",", " ", 
      RowBox[{"s2", "\[Rule]", 
       RowBox[{"s", "[", 
        RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], ",", 
      RowBox[{"i11", "\[Rule]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"1", ",", "1", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"i12", "\[Rule]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"1", ",", "2", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"i21", "\[Rule]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"2", ",", "1", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"i22", "\[Rule]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"2", ",", "2", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"r1", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"1", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"r2", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"2", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}]}], "}"}]}], "/.", 
   RowBox[{"EquiSub", "[", 
    RowBox[{"nI", ",", "nR", ",", "13"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inits", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nI", ",", "nR", ",", "inits", ",", "h", ",", "p", ",", "c", ",", 
      "equ"}], "}"}], ",", 
    RowBox[{
     RowBox[{"inits", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"equ", "=", 
      RowBox[{"EquiSub", "[", 
       RowBox[{"nI", ",", "nR", ",", "13"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inits", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], "/.", "equ"}], ")"}], 
         "*", "\[Alpha]H"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inits", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "\[Infinity]"}], "]"}], "/.", "equ"}], ")"}]}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"1", ",", "1", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"1", ",", "1", ",", "c", ",", "\[Infinity]"}], "]"}], "/.",
               "equ"}], ")"}], "\[Alpha]H", " ", "\[Alpha]P"}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"1", ",", "2", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"1", ",", "2", ",", "c", ",", "\[Infinity]"}], "]"}], "/.",
               "equ"}], ")"}], "\[Alpha]H"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"2", ",", "1", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"2", ",", "1", ",", "c", ",", "\[Infinity]"}], "]"}], "/.",
               "equ"}], ")"}], "\[Alpha]P"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"2", ",", "2", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i", "[", 
              RowBox[{"2", ",", "2", ",", "c", ",", "\[Infinity]"}], "]"}], "/.",
              "equ"}], ")"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"1", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"1", ",", "c", ",", "\[Infinity]"}], "]"}], "/.", 
              "equ"}], ")"}], "\[Alpha]H"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"2", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"2", ",", "c", ",", "\[Infinity]"}], "]"}], "/.", 
             "equ"}], ")"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", "inits"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.713181165160187*^9, 3.713181189786303*^9}, {
  3.713190021560444*^9, 3.713190055929994*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vars", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nI", ",", "nR", ",", "vars", ",", "h", ",", "p", ",", "c"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"vars", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"vars", ",", 
          RowBox[{"s", "[", 
           RowBox[{"h", ",", "t"}], "]"}]}], "]"}], ";"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"p", "=", "1"}], ",", 
         RowBox[{"p", "\[LessEqual]", "2"}], ",", 
         RowBox[{"p", "++"}], ",", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"c", "=", "1"}], ",", 
           RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
           RowBox[{"c", "++"}], ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"vars", ",", 
              RowBox[{"i", "[", 
               RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}]}], "]"}], 
            ";"}]}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"vars", ",", 
            RowBox[{"r", "[", 
             RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], "]"}], ";"}]}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", "vars"}]}], 
   "]"}]}]], "Input"],

Cell["\<\
Numerically integrating for parameter combination pars.  Initial conditions \
are set to a small perturbation from the biologically valid endemic \
equilibrium such that the inital allele frequencies are given by pH0 and pP0.\
\>", "Text",
 CellChangeTimes->{{3.713181630430513*^9, 3.71318171393946*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nInt", "[", 
   RowBox[{
   "pH0_", ",", "pP0_", ",", "nI_", ",", "nR_", ",", "pars_", ",", "tmax_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]Sub", ",", "nsol"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calculating", " ", "\[Alpha]Sub", " ", "for", " ", "setting", " ", 
      "inital", " ", "conditons", " ", "with", " ", "allele", " ", 
      "frequencies", " ", "pH", " ", "and", " ", "pP"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Alpha]Sub", "=", 
      RowBox[{
       RowBox[{"NSolve", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"InitEqus", "[", 
            RowBox[{"pH0", ",", "pP0", ",", "nI", ",", "nR"}], "]"}], "/.", 
           "pars"}], ")"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]H", ",", "\[Alpha]P"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Numerically", " ", "integrating"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nsol", "=", 
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"ODEs", "[", 
               RowBox[{"nI", ",", "nR"}], "]"}], ",", 
              RowBox[{"Inits", "[", 
               RowBox[{"nI", ",", "nR"}], "]"}]}], "]"}], "/.", 
            "\[Alpha]Sub"}], "/.", "pars"}], ")"}], ",", 
         RowBox[{"Vars", "[", 
          RowBox[{"nI", ",", "nR"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "//", 
       "Flatten"}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7131807230368443`*^9, 3.713180771460411*^9}, {
  3.713180881351096*^9, 3.713180892343109*^9}, {3.713180987478685*^9, 
  3.713181044994389*^9}, {3.713181118214858*^9, 3.713181119793927*^9}, {
  3.713181218299326*^9, 3.713181238730098*^9}, {3.713181284160199*^9, 
  3.713181349316325*^9}, {3.713181380486458*^9, 3.713181432050001*^9}, {
  3.713181590798246*^9, 3.713181600106987*^9}, {3.7131817011482153`*^9, 
  3.7131817099559793`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots", "Section",
 CellChangeTimes->{{3.713181788068645*^9, 3.713181794316424*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"nsol", ",", "ssol", ",", "isol", ",", "rsol"}], "]"}]], "Input",
 CellChangeTimes->{{3.713181798159403*^9, 3.713181806249387*^9}}],

Cell["\<\
The epidemiological dynamics.  The density of all susceptible hosts, infected \
hosts, and recovered hosts over time.\
\>", "Text",
 CellChangeTimes->{{3.7142121956127863`*^9, 3.714212245594343*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EpiPlot", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"ssol", "[", 
             RowBox[{"h", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"isol", "[", 
             RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"rsol", "[", 
             RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Purple"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691334222798315*^9, 3.691334364195515*^9}, {
  3.6914372382861314`*^9, 3.6914372671959825`*^9}, {3.6942874178630624`*^9, 
  3.694287433433953*^9}, {3.6942877339041386`*^9, 3.6942878160548377`*^9}, {
  3.6942879929079533`*^9, 3.6942879945150447`*^9}, {3.694288033506275*^9, 
  3.694288037416499*^9}, {3.694288100783123*^9, 3.694288101187146*^9}, {
  3.6966904044868355`*^9, 3.69669040841506*^9}, {3.696690462544156*^9, 
  3.696690465215309*^9}, {3.7113868867114887`*^9, 3.711386891285111*^9}, {
  3.711386955051947*^9, 3.7113869660303802`*^9}, {3.713181468597045*^9, 
  3.713181522828436*^9}, {3.714211886877789*^9, 3.714211892054222*^9}}],

Cell["\<\
The density of infections of pathogen type 1 and pathogens of type 2 over \
time.\
\>", "Text",
 CellChangeTimes->{{3.7142121956127863`*^9, 3.714212210664318*^9}, {
  3.714212248606328*^9, 3.714212249937079*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EpiPlot2", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"isol", "[", 
             RowBox[{"h", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"isol", "[", 
             RowBox[{"h", ",", "2", ",", "c", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.691334222798315*^9, 3.691334364195515*^9}, {
  3.6914372382861314`*^9, 3.6914372671959825`*^9}, {3.6942874178630624`*^9, 
  3.694287433433953*^9}, {3.6942877339041386`*^9, 3.6942878160548377`*^9}, {
  3.6942879929079533`*^9, 3.6942879945150447`*^9}, {3.694288033506275*^9, 
  3.694288037416499*^9}, {3.694288100783123*^9, 3.694288101187146*^9}, {
  3.6966904044868355`*^9, 3.69669040841506*^9}, {3.696690462544156*^9, 
  3.696690465215309*^9}, {3.7113868867114887`*^9, 3.711386891285111*^9}, {
  3.711386955051947*^9, 3.7113869660303802`*^9}, {3.713181468597045*^9, 
  3.713181522828436*^9}, {3.714211842381084*^9, 3.714211914373088*^9}}],

Cell["The allele frequencies over time", "Text",
 CellChangeTimes->{{3.714211550538362*^9, 3.714211555097414*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFPlot", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          FractionBox[
           RowBox[{
            RowBox[{"ssol", "[", 
             RowBox[{"1", ",", "t"}], "]"}], "+", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"isol", "[", 
               RowBox[{"1", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"rsol", "[", 
               RowBox[{"1", ",", "c", ",", "t"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ssol", "[", 
               RowBox[{"k", ",", "t"}], "]"}], "+", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"isol", "[", 
                 RowBox[{"k", ",", "p", ",", "c", ",", "t"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"p", ",", "1", ",", "2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"rsol", "[", 
                 RowBox[{"k", ",", "c", ",", "t"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          FractionBox[
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"isol", "[", 
              RowBox[{"h", ",", "1", ",", "c", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"isol", "[", 
              RowBox[{"h", ",", "l", ",", "c", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7131818574605722`*^9, 3.713181864133821*^9}, 
   3.713181894993888*^9, {3.713181961442687*^9, 3.7131820884237003`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example", "Section",
 CellChangeTimes->{{3.71318176056112*^9, 3.713181761716165*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "0.02"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.005"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "50"}], ",", 
     RowBox[{"X", "\[Rule]", "0.5"}], ",", 
     RowBox[{"Y", "\[Rule]", "0.25"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7142116560653963`*^9, 3.714211676340294*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsol", "=", 
   RowBox[{"nInt", "[", 
    RowBox[{
    "0.55", ",", "0.49", ",", "20", ",", "20", ",", "Pars", ",", "500"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713181033526363*^9, 3.713181059623083*^9}, {
   3.713181356456295*^9, 3.713181357011978*^9}, {3.71318143434972*^9, 
   3.713181435985759*^9}, {3.713181581147101*^9, 3.713181584316894*^9}, 
   3.713181617847272*^9, {3.7131821200333023`*^9, 3.713182173328601*^9}, {
   3.713182447885906*^9, 3.713182449229677*^9}, {3.713191248850276*^9, 
   3.713191249128838*^9}, 3.713191279335137*^9, {3.7132025503715687`*^9, 
   3.71320255056535*^9}, {3.713202586831465*^9, 3.713202588041658*^9}, {
   3.714211414313685*^9, 3.714211431628604*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"ssol", ",", "isol", ",", "rsol"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ssol", "[", 
    RowBox[{"h_", ",", "\[Tau]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"h", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
    RowBox[{"{", 
     RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isol", "[", 
   RowBox[{"h_", ",", "p_", ",", "c_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"h", ",", "p", ",", "c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsol", "[", 
   RowBox[{"h_", ",", "c_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.71318229680084*^9, 3.713182347379191*^9}, {
  3.713182440434801*^9, 3.713182445322184*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EpiPlot", "[", 
  RowBox[{"20", ",", "20", ",", "500"}], "]"}]], "Input",
 CellChangeTimes->{{3.713181524917777*^9, 3.713181534233073*^9}, {
  3.7131821250000353`*^9, 3.7131821831272173`*^9}, {3.7131824634066257`*^9, 
  3.713182466802075*^9}, {3.713202556142057*^9, 3.713202556225863*^9}, {
  3.713202593429861*^9, 3.713202594654037*^9}, {3.7142114108907003`*^9, 
  3.714211439458108*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.008333333333333333], Thickness[Large], 
     LineBox[CompressedData["
1:eJw9mXlczPv3x6eFa2+khUtMKFGRUFl7fVtIyLRrNe17zUwzLVMzDa5EJG52
MvZ0SZLLJepLtiwlSbZrbl1bC9mF+PZ7/N6Hfzyej/M5nzPn/T6v8z7vT8ah
SR4RmhwO54MGh/N//9O/Eg+t038tv2P//9RpH5rbqHGNT8zBOPeNhodHEfeB
2mztqDmv6xlz0XzdvzGuklgPKg0zjkE+8VDsGnRg+pgQ4hGwXf/6SLY1MQ9i
df4kd23i0XgR+OZmZeNtxmPhdWvNWrtiYlMYPBR9nZpFbIbqmlfjJvgQT8Ds
jph+aZOILSDUM9WJ7E88EYf7VH8zba1jbAVlXU7kk+vEk5GzpfZScSmxNe7d
OPR011biKdh22HHulRXEU9Fnf1DmRDHxNIzZOO3InTBiG+TNDZ97bAmxLaxF
TdZlfGI7xIp1iy4vIJ6OhQ1XzG7PJ54BncY10cddiWeienZEo4Mb8Sx0adTH
B3sRz4b10e9m9wOJ5yB6uWdGdhSxPfQszDfZSoiBkWn9JOeWM1YCoZeiJz/b
SPb/QL60oFK5n+z/QdCXAVcDTpHdAXE3NEvn0vopHfBrfssRrprsjjBq9B+T
+4HsjtBd7uaX83M/nHC9QGvHI2PGSifktYnWBtuR3Rkjj3XGPHMjuzOaWsQt
bhFknwt/6+pJ0gyyz4Wu8Waz6RvIPg+ur/05mQfJPg+P3O23GJ8luwu+RCt/
16kluwv8z7h5WTaTfT64idIJYe/JPh/eR4Z/296L6tUVvUfnm1TqM1a6ovPQ
5+tnxpJ9Ab72smhMp3pXLsAX+3m8F3PIvhCXS2feejOf7AthHdywa4Un2RdB
5SeemhtA9kUYmv7k+oefenKDTbKZtCyS7G6wu2C07XgM2RfjwhPL6//Gkn0x
ElOHDQMxh98Tb8OcM1GMwcf81X76i8LoeT42d724+CGQcRUfdXVtv5/0In93
TDT/d/pGV/J3h/WKs482UX5Kd+hb9imqtSJ/d3z/g3fW05j8PZDtN1Z/Jpf8
PdCa53R6XzettwceSO27j71kXOUBq7HLJq9qoP3xhCRyepfnecbwhOnYJ01O
h8jfE5oHdcxz15O/J3Kqex/2SyV/L1RbFYQ+DSZ/L7Q7LnkdPpf8vTD7W2bT
wInk74XeOvu26BuQvzda/bIbS7+z+oY3Flb1HqH7gurdG33XpGvH1jOu8ka3
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
P3IZW2Whc3WaYIghY2RhRIRmjeXae/b/A6ee6wI=
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], Thickness[Large], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0.5, 0, 0.5], PointSize[0.008333333333333333], Thickness[Large],
      LineBox[CompressedData["
1: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
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 500.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.713181535364102*^9, 3.7131816120030937`*^9, 3.713181854158963*^9, {
   3.713182125837223*^9, 3.713182163024382*^9}, 3.7131822400651417`*^9, 
   3.71318229456299*^9, {3.713182370607729*^9, 3.713182391685473*^9}, {
   3.7131824609883337`*^9, 3.7131824741725063`*^9}, 3.713190791190243*^9, 
   3.713191212730028*^9, 3.7132025568217163`*^9, {3.713202598228282*^9, 
   3.713202603236176*^9}, 3.71320266535958*^9, 3.714211420393268*^9, 
   3.714211462933078*^9, 3.714211708397469*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EpiPlot2", "[", 
  RowBox[{"20", ",", "20", ",", "500"}], "]"}]], "Input",
 CellChangeTimes->{3.714211921010051*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], Thickness[Large], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.008333333333333333], Thickness[Large], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1: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
xi4dD9j8D4qYqnY=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 500.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.714211936099348*^9}]
}, Closed]],

Cell["\<\
Infections of pathogens of type 1 and infections of type 2 are in phase with \
one another.  This is in contrast to the case of Y=0 below where the lab \
between infections of type 1 and infections of type 2 vary over time \
generating allele frequency cycles.\
\>", "Text",
 CellChangeTimes->{{3.714212102660866*^9, 3.714212190140581*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AFPlot", "[", 
  RowBox[{"20", ",", "20", ",", "500"}], "]"}]], "Input",
 CellChangeTimes->{{3.713182106076714*^9, 3.71318216358246*^9}, {
   3.713182393853931*^9, 3.713182394948629*^9}, {3.713182468010727*^9, 
   3.713182468802167*^9}, {3.713191232590775*^9, 3.7131912327885227`*^9}, 
   3.7131912829730577`*^9, {3.713191383842992*^9, 3.713191384186318*^9}, {
   3.713202682120749*^9, 3.7132026856150503`*^9}, {3.71421142518684*^9, 
   3.714211445492174*^9}, {3.71421171756813*^9, 3.7142117255175447`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.006944444444444445], Thickness[Large], 
     LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[0, 1, 0], PointSize[0.006944444444444445], Thickness[Large], 
     LineBox[CompressedData["
1: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
9bDGt2HXXtj8H+YQ96Q=
      "]]}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 500.}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.713182108996204*^9, 3.7131821678967943`*^9}, 
   3.713182285083178*^9, 3.713182379327156*^9, 3.713182437170104*^9, 
   3.7131824803474703`*^9, 3.713190797583029*^9, {3.713191220799938*^9, 
   3.713191265023487*^9}, 3.713191377409697*^9, 3.7131914099283543`*^9, {
   3.713202681459381*^9, 3.713202686095537*^9}, 3.714211519396679*^9, 
   3.714211722998996*^9, 3.7142117797818813`*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Case when Y=0", "Subchapter",
 CellChangeTimes->{{3.713111670638973*^9, 3.713111673137786*^9}}],

Cell[CellGroupData[{

Cell["The Differential Equations", "Section",
 CellChangeTimes->{{3.713187927878051*^9, 3.713187931341663*^9}, {
  3.713367359091989*^9, 3.713367361383326*^9}}],

Cell["\<\
A special case of the full SIRS model presented above is the \
prefect-matching-alleles model in which hosts of type i can be only be \
infected by pathogens of type i.  Hence there are effectively only 2 \
infectious types of each class.  The full polymorphic equilibrium found above \
however includes a division by Y is therefore not valid when Y=0 and cannot \
be generalized to this case.\
\>", "Text",
 CellChangeTimes->{{3.71311168989363*^9, 3.713111783995212*^9}, {
  3.713111824687726*^9, 3.713111836008219*^9}, {3.713111870395917*^9, 
  3.7131119138689013`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g1", "[", 
   RowBox[{"h_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"b", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"h", ",", "t"}], "]"}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nI"], 
       RowBox[{"i", "[", 
        RowBox[{"h", ",", "j", ",", "t"}], "]"}]}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nR"], 
       RowBox[{"r", "[", 
        RowBox[{"h", ",", "j", ",", "t"}], "]"}]}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", 
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], "2"], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"k", ",", "t"}], "]"}], "+", 
           RowBox[{
            SubsuperscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "nI"], 
            RowBox[{"i", "[", 
             RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "+", 
           RowBox[{
            SubsuperscriptBox["\[Sum]", 
             RowBox[{"j", "=", "1"}], "nR"], 
            RowBox[{"r", "[", 
             RowBox[{"k", ",", "j", ",", "t"}], "]"}]}]}], ")"}]}], ")"}]}]}],
      ")"}]}], "-", 
   RowBox[{"d", " ", 
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], " ", 
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "nR", ",", "t"}], "]"}]}], "-", 
   RowBox[{"\[Beta]", " ", 
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}], 
    RowBox[{
     SubsuperscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "nI"], 
     RowBox[{"(", 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "j", ",", "t"}], "]"}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.691253503067751*^9, 3.691253558230452*^9}, 
   3.6912664349553328`*^9, {3.691433698197448*^9, 3.6914337015358543`*^9}, {
   3.713111806397839*^9, 3.713111806559787*^9}, {3.7131119228821793`*^9, 
   3.7131119711573677`*^9}, {3.713112008931129*^9, 3.713112010729506*^9}, {
   3.713112764747016*^9, 3.7131127789339857`*^9}, 3.7131128350120077`*^9, 
   3.7131894662964582`*^9, {3.713189627167557*^9, 3.7131896274381332`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g2", "[", 
   RowBox[{"h_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{"\[Beta]", " ", 
      RowBox[{"s", "[", 
       RowBox[{"h", ",", "t"}], "]"}], 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "nI"], 
       RowBox[{"(", 
        RowBox[{"i", "[", 
         RowBox[{"h", ",", "j", ",", "t"}], "]"}], ")"}]}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", 
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Delta]", "+", 
        FractionBox["nI", "\[Tau]I"]}], ")"}], 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6912536395194016`*^9, 3.691253646197213*^9}, 
   3.6912664370613365`*^9, {3.69143438687468*^9, 3.691434388871484*^9}, {
   3.7131119756482697`*^9, 3.713112031154155*^9}, 3.713112784400794*^9, 
   3.7131128319999857`*^9, 3.713189410383191*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"g3", "[", 
   RowBox[{"h_", ",", "c_", ",", "t_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", "\[Equal]", "1"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nI", "\[Tau]I"], " ", 
      RowBox[{"i", "[", 
       RowBox[{"h", ",", "nI", ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["nR", "\[Tau]R"], " ", 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", 
        RowBox[{"c", "-", "1"}], ",", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"d", "+", 
        FractionBox["nR", "\[Tau]R"]}], ")"}], 
      RowBox[{"r", "[", 
       RowBox[{"h", ",", "c", ",", "t"}], "]"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6912539079606895`*^9, 3.691266438480939*^9, {3.7131120404209757`*^9, 
   3.713112042687003*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["The Equilibria", "Section",
 CellChangeTimes->{{3.713112178888811*^9, 3.713112179949457*^9}, {
  3.7131123626658087`*^9, 3.7131123662427177`*^9}}],

Cell["At equilibrium the following equations must be satisfied.", "Text",
 CellChangeTimes->{{3.71337004060877*^9, 3.713370054387583*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiEqus", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"g1", "[", 
         RowBox[{"h", ",", "\[Infinity]"}], "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"g2", "[", 
          RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], "\[Equal]", 
         "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nIs"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"g3", "[", 
          RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], "\[Equal]", 
         "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nRs"}], "}"}]}], "]"}], "]"}]}], "]"}], 
   "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
     RowBox[{"nR", "\[Rule]", "nRs"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.713370020908003*^9, 3.713370121575445*^9}, {
  3.71337017495636*^9, 3.7133701835523853`*^9}}],

Cell[CellGroupData[{

Cell["The Disease free equilibrium", "Subsection",
 CellChangeTimes->{{3.713369964144761*^9, 3.7133699707986603`*^9}}],

Cell["\<\
Simplifying the system of equations given that there are no disease types are \
present at equilibrium\
\>", "Text",
 CellChangeTimes->{{3.713369982133713*^9, 3.713370015495543*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EquiEqusDF", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"EquiEqus", "[", 
    RowBox[{"nIs", ",", "nRs"}], "]"}], "/.", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
         "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nIs"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
         "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nIs"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.71337014260666*^9, 3.713370252632862*^9}}],

Cell["\<\
Only the susceptible equations are not satisfied for example:\
\>", "Text",
 CellChangeTimes->{{3.713370275452759*^9, 3.7133703031499643`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EquiEqusDF", "[", 
  RowBox[{"2", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.713370262587945*^9, 3.71337026535078*^9}, {
  3.713370311102985*^9, 3.713370322564027*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "d"}], " ", 
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], "+", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
    "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "d"}], " ", 
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "\[Infinity]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], "+", 
           RowBox[{"s", "[", 
            RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], ")"}]}]}], ")"}]}]}], 
    "\[Equal]", "0"}], ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7133702659689207`*^9, {3.713370315769231*^9, 3.7133703230103273`*^9}, 
   3.713720440169565*^9, 3.714149821048526*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "d"}], " ", 
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], "+", 
       RowBox[{"b", " ", 
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "\[Infinity]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"1", ",", "\[Infinity]"}], "]"}], "+", 
             RowBox[{"s", "[", 
              RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], ")"}]}]}], 
         ")"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "d"}], " ", 
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], "+", 
       RowBox[{"b", " ", 
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "\[Infinity]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"1", ",", "\[Infinity]"}], "]"}], "+", 
             RowBox[{"s", "[", 
              RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], ")"}]}]}], 
         ")"}]}]}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"1", ",", "\[Infinity]"}], "]"}], ",", 
     RowBox[{"s", "[", 
      RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7133703286959543`*^9, 3.713370364593376*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   111,1,18881010212821183519,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7133703651025143`*^9, 3.713720440236174*^9, 
  3.714149821122367*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"s", "[", 
      RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "b"}], "+", "d"}], 
        RowBox[{"b", " ", "\[Kappa]"}]]}], "-", 
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "\[Infinity]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"1", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"s", "[", 
       RowBox[{"2", ",", "\[Infinity]"}], "]"}], "\[Rule]", "0"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7133703651134768`*^9, 3.713720440251152*^9, 
  3.7141498211442842`*^9}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["The Endemic equilibrium", "Subsection",
 CellChangeTimes->{{3.713369952135049*^9, 3.713369959203446*^9}}],

Cell["\<\
As with the system above we can solve for simplify the equations for the \
equilibria by solving for everything in terms of the first infectious class \
and the susceptible class.  Specifically at equilibrium the recovered classes \
and 2 through nI^th infected class are given by:\
\>", "Text",
 CellChangeTimes->{{3.7131123820434504`*^9, 3.713112481033053*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"re", "[", 
   RowBox[{"h_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nR", 
      RowBox[{
       RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"(", 
    RowBox[{
     FractionBox["nI", "\[Tau]I"], 
     RowBox[{"(", 
      FractionBox["\[Tau]R", 
       RowBox[{
        RowBox[{"d", " ", "\[Tau]R"}], "+", "nR"}]], ")"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{
       RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", "nI"}]], ")"}], 
    RowBox[{"nI", "-", "1"}]], 
   RowBox[{"ie1", "[", "h", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ie", "[", 
   RowBox[{"h_", ",", "c_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["nI", 
      RowBox[{
       RowBox[{"\[Delta]", " ", "\[Tau]I"}], "+", "nI"}]], ")"}], 
    RowBox[{"c", "-", "1"}]], 
   RowBox[{"ie1", "[", "h", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6912656574869647`*^9, 3.691265731202094*^9}, {
   3.691335142663622*^9, 3.6913351506946335`*^9}, 3.691434916263055*^9, {
   3.691435041463276*^9, 3.691435047406886*^9}, {3.6914353038229375`*^9, 
   3.691435304197338*^9}, 3.691436163548639*^9, {3.6914362247525463`*^9, 
   3.691436225095747*^9}, {3.6933324945323515`*^9, 3.6933325273952312`*^9}, 
   3.7131123709010344`*^9, {3.713112439532556*^9, 3.7131124585049458`*^9}}],

Cell[TextData[{
 "where ie1[h] is the equilibrium number of hosts of type h in the first \
infected class. \n\nWe can simplify the remaining equations by writing ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "nI"], 
    RowBox[{"(", 
     RowBox[{"i", "[", 
      RowBox[{"h", ",", "j", ",", "t"}], "]"}], ")"}]}], "=", 
   RowBox[{"zI", " ", 
    RowBox[{"ie1", "[", "h", "]"}]}]}]],
  CellChangeTimes->{{3.6912536395194016`*^9, 3.691253646197213*^9}, 
    3.6912664370613365`*^9, {3.69143438687468*^9, 3.691434388871484*^9}, {
    3.7131119756482697`*^9, 3.713112031154155*^9}, 3.713112784400794*^9, 
    3.7131128319999857`*^9}],
 ",  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "nR", ",", "t"}], "]"}], "=", 
    RowBox[{"znR", " ", 
     RowBox[{"ie1", "[", "h", "]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "nR"], 
    RowBox[{"r", "[", 
     RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "=", 
   RowBox[{"zR", " ", 
    RowBox[{"ie1", "[", "h", "]"}]}]}]],
  CellChangeTimes->{{3.691253503067751*^9, 3.691253558230452*^9}, 
    3.6912664349553328`*^9, {3.691433698197448*^9, 3.6914337015358543`*^9}, {
    3.713111806397839*^9, 3.713111806559787*^9}, {3.7131119228821793`*^9, 
    3.7131119711573677`*^9}, {3.713112008931129*^9, 3.713112010729506*^9}, {
    3.713112764747016*^9, 3.7131127789339857`*^9}, 3.7131128350120077`*^9}]
}], "Text",
 CellChangeTimes->{{3.713112484653544*^9, 3.713112501110735*^9}, {
  3.713112667532227*^9, 3.71311269114986*^9}, {3.713112816324827*^9, 
  3.7131128978818817`*^9}, {3.713113120632146*^9, 3.713113207753001*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zsub", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zI", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ie", "[", 
          RowBox[{"h", ",", "c"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], 
       RowBox[{"ie", "[", 
        RowBox[{"h", ",", "1"}], "]"}]]}], ",", 
     RowBox[{"zR", "\[Rule]", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"re", "[", 
          RowBox[{"h", ",", "c"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}], 
       RowBox[{"ie", "[", 
        RowBox[{"h", ",", "1"}], "]"}]]}], ",", 
     RowBox[{"znR", "\[Rule]", 
      FractionBox[
       RowBox[{"re", "[", 
        RowBox[{"h", ",", "nR"}], "]"}], 
       RowBox[{"ie", "[", 
        RowBox[{"h", ",", "1"}], "]"}]]}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.6912662753882513`*^9, 3.691266389617653*^9}, {
  3.691434937199292*^9, 3.6914349378076935`*^9}, {3.691435782311764*^9, 
  3.691435843718472*^9}, {3.69143588813475*^9, 3.6914358957163634`*^9}, {
  3.69143613212458*^9, 3.6914361324365807`*^9}, {3.6914362071839156`*^9, 
  3.6914362406177745`*^9}, {3.713112590281106*^9, 3.7131126052095947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"zI", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"nI", "+", 
         RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nI", 
            RowBox[{"nI", "+", 
             RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], "nI"]}], ")"}]}], 
      RowBox[{"\[Delta]", " ", "\[Tau]I"}]]}]}], ",", 
   RowBox[{"zR", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"nI", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["nI", 
          RowBox[{"nI", "+", 
           RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "nI"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["nR", 
            RowBox[{"nR", "+", 
             RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], ")"}]}], 
      RowBox[{"d", " ", "\[Tau]I"}]]}]}], ",", 
   RowBox[{"znR", "\[Rule]", 
    FractionBox[
     RowBox[{"nI", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nI", 
         RowBox[{"nI", "+", 
          RowBox[{"\[Delta]", " ", "\[Tau]I"}]}]], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "nI"}]], " ", "\[Tau]R", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["nR", 
         RowBox[{"nR", "+", 
          RowBox[{"d", " ", "\[Tau]R"}]}]], ")"}], "nR"]}], 
     RowBox[{"nR", " ", "\[Tau]I"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.691266384610044*^9, 3.691266390928055*^9}, 
   3.6913311196420794`*^9, 3.6913351685366597`*^9, 3.691335484866304*^9, 
   3.691336060952512*^9, 3.6914337883394065`*^9, 3.6914338655543437`*^9, {
   3.691434926855474*^9, 3.691434938650095*^9}, 3.691435057812104*^9, 
   3.6914351430556545`*^9, 3.69143531093855*^9, 3.691435786650572*^9, {
   3.6914358178350267`*^9, 3.691435844326873*^9}, 3.691435896667965*^9, 
   3.691435945685251*^9, 3.691436133341382*^9, 3.6914361696648493`*^9, {
   3.691436217917734*^9, 3.691436241569376*^9}, 3.693660329850863*^9, 
   3.6936671572952795`*^9, 3.693834337020504*^9, 3.6942874415134153`*^9, 
   3.694441641100437*^9, 3.6949847320421515`*^9, 3.695476546776145*^9, 
   3.6954779628581405`*^9, 3.6962735727793837`*^9, 3.696357772728284*^9, 
   3.696685841675858*^9, 3.711386610625054*^9, 3.711386848814724*^9, {
   3.713112626292267*^9, 3.713112638047471*^9}, 3.7131879475750093`*^9, 
   3.713367372651964*^9, 3.713720440721615*^9, 3.714149825205791*^9}]
}, Closed]],

Cell["\<\
This results in the following equations much must be equal to 0 at \
equilibrium.\
\>", "Text",
 CellChangeTimes->{{3.713113388488793*^9, 3.71311340807983*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"G1", "[", "h_", "]"}], ":=", 
  RowBox[{
   RowBox[{"b", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"se", "[", "h", "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"zI", "+", "zR"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"ie1", "[", "h", "]"}], ")"}]}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"\[Kappa]", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"k", "=", "1"}], "2"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"se", "[", "k", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"ie1", "[", "k", "]"}], ")"}]}]}], ")"}]}]}]}], ")"}]}], 
   "-", 
   RowBox[{"d", " ", 
    RowBox[{"se", "[", "h", "]"}]}], "+", 
   RowBox[{
    FractionBox["nR", "\[Tau]R"], " ", "znR", 
    RowBox[{"(", 
     RowBox[{"ie1", "[", "h", "]"}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"se", "[", "h", "]"}], "zI", " ", "\[Beta]", " ", 
    RowBox[{"ie1", "[", "h", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G2", "[", "h_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"se", "[", "h", "]"}], "zI", " ", "\[Beta]", 
    RowBox[{"(", 
     RowBox[{"ie1", "[", "h", "]"}], ")"}]}], "-", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Delta]", "+", 
      FractionBox["nI", "\[Tau]I"]}], ")"}], 
    RowBox[{"ie1", "[", "h", "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.6912664523805633`*^9, 3.6912665918352084`*^9}, {
  3.6912666823057675`*^9, 3.691266682586568*^9}, {3.6912673130740857`*^9, 
  3.6912673147120886`*^9}, {3.6914337370903163`*^9, 3.6914337401479216`*^9}, {
  3.713112656753868*^9, 3.71311265850644*^9}, {3.713112708276169*^9, 
  3.713112750810017*^9}, {3.7131133577394037`*^9, 3.713113377034575*^9}, {
  3.71311341915592*^9, 3.713113419545961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"equs", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G1", "[", "h", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"G2", "[", "h", "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"vars", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"se", "[", "h", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ie1", "[", "h", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.713113417322494*^9, 3.713113499060823*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"nR", " ", "znR", " ", 
       RowBox[{"ie1", "[", "1", "]"}]}], "\[Tau]R"], "-", 
     RowBox[{"d", " ", 
      RowBox[{"se", "[", "1", "]"}]}], "-", 
     RowBox[{"zI", " ", "\[Beta]", " ", 
      RowBox[{"ie1", "[", "1", "]"}], " ", 
      RowBox[{"se", "[", "1", "]"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], " ", 
         RowBox[{"ie1", "[", "1", "]"}]}], "+", 
        RowBox[{"se", "[", "1", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", "1", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", "2", "]"}]}], "+", 
           RowBox[{"se", "[", "1", "]"}], "+", 
           RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"nR", " ", "znR", " ", 
       RowBox[{"ie1", "[", "2", "]"}]}], "\[Tau]R"], "-", 
     RowBox[{"d", " ", 
      RowBox[{"se", "[", "2", "]"}]}], "-", 
     RowBox[{"zI", " ", "\[Beta]", " ", 
      RowBox[{"ie1", "[", "2", "]"}], " ", 
      RowBox[{"se", "[", "2", "]"}]}], "+", 
     RowBox[{"b", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"zI", "+", "zR"}], ")"}], " ", 
         RowBox[{"ie1", "[", "2", "]"}]}], "+", 
        RowBox[{"se", "[", "2", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"\[Kappa]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", "1", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"zI", "+", "zR"}], ")"}], " ", 
            RowBox[{"ie1", "[", "2", "]"}]}], "+", 
           RowBox[{"se", "[", "1", "]"}], "+", 
           RowBox[{"se", "[", "2", "]"}]}], ")"}]}]}], ")"}]}]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
      RowBox[{"ie1", "[", "1", "]"}]}], "+", 
     RowBox[{"zI", " ", "\[Beta]", " ", 
      RowBox[{"ie1", "[", "1", "]"}], " ", 
      RowBox[{"se", "[", "1", "]"}]}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"\[Delta]", "+", 
         FractionBox["nI", "\[Tau]I"]}], ")"}]}], " ", 
      RowBox[{"ie1", "[", "2", "]"}]}], "+", 
     RowBox[{"zI", " ", "\[Beta]", " ", 
      RowBox[{"ie1", "[", "2", "]"}], " ", 
      RowBox[{"se", "[", "2", "]"}]}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.713113465079431*^9, 3.7131135004448023`*^9, 
  3.713187947679041*^9, 3.713367372747717*^9, 3.7137204408202543`*^9, 
  3.714149825291667*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"se", "[", "1", "]"}], ",", 
   RowBox[{"se", "[", "2", "]"}], ",", 
   RowBox[{"ie1", "[", "1", "]"}], ",", 
   RowBox[{"ie1", "[", "2", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.713113465079431*^9, 3.7131135004448023`*^9, 
  3.713187947679041*^9, 3.713367372747717*^9, 3.7137204408202543`*^9, 
  3.71414982530554*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{"equs", ",", "vars"}], "]"}], "//", "Simplify"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7131135019872*^9, 3.713113512813219*^9}, {
   3.713113566234736*^9, 3.713113569316283*^9}, 3.713113714024328*^9, 
   3.713113853587384*^9}],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   119,2,18881010212821183519,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.713113505451324*^9, 3.7131135136640463`*^9}, 
   3.713113569998458*^9, 3.713113714739348*^9, 3.713113854165208*^9, 
   3.713187948042904*^9, 3.713367373120644*^9, 3.713720441319886*^9, 
   3.714149825631237*^9}]
}, Closed]],

Cell["\<\
We are particularly interested only in cases when both susceptible types and \
both infected types are present of which there are two.\
\>", "Text",
 CellChangeTimes->{{3.713113572292654*^9, 3.713113585322796*^9}, {
  3.713113649336275*^9, 3.713113673035851*^9}, {3.713113748630302*^9, 
  3.713113752768159*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equ1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]]}], ",", 
     RowBox[{
      RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]]}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"-", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "nR"}], " ", 
           SuperscriptBox["zI", "2"], " ", "znR", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"]}], "+", 
          RowBox[{"nI", " ", 
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], 
          "+", 
          RowBox[{"4", " ", "b", " ", "nI", " ", 
           SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
           "\[Tau]I", " ", "\[Tau]R"}], "+", 
          RowBox[{
          "4", " ", "b", " ", "nI", " ", "zI", " ", "zR", " ", "\[Beta]", " ",
            "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["zI", "3"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
          RowBox[{"b", " ", 
           SuperscriptBox["zI", "2"], " ", "zR", " ", 
           SuperscriptBox["\[Beta]", "2"], " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{
           SuperscriptBox["zI", "2"], " ", 
           SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{"4", " ", "b", " ", 
           SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
           "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{
          "4", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
           "\[Delta]", " ", "\[Kappa]", " ", 
           SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["zI", "2"], " ", 
             SuperscriptBox["\[Beta]", "2"], " ", 
             SuperscriptBox["\[Tau]I", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "8"}], " ", "b", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", 
                " ", 
                RowBox[{"(", 
                 RowBox[{"nI", "+", 
                  RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], 
                  "+", 
                  RowBox[{"b", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    "2", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}],
                     ")"}]}]}], ")"}], " ", 
                SuperscriptBox["\[Tau]R", "2"]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                   "\[Tau]I"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"4", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                   "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
         ")"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", "2", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "nR"}], " ", 
          SuperscriptBox["zI", "2"], " ", "znR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"]}], "+", 
         RowBox[{"nI", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], 
         "+", 
         RowBox[{"4", " ", "b", " ", "nI", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
          "\[Tau]I", " ", "\[Tau]R"}], "+", 
         RowBox[{
         "4", " ", "b", " ", "nI", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
          "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
          "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{
         "4", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", "\[Delta]",
           " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "8"}], " ", "b", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{"nI", "+", 
                 RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], 
                 "+", 
                 RowBox[{"b", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    "2", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}],
                    ")"}]}]}], ")"}], " ", 
               SuperscriptBox["\[Tau]R", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                  "\[Tau]I"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"4", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                  "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
        ")"}]}]}]}], "}"}]}], ";", 
  RowBox[{"equ2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"se", "[", "1", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]]}], ",", 
     RowBox[{
      RowBox[{"se", "[", "2", "]"}], "\[Rule]", 
      FractionBox[
       RowBox[{"nI", "+", 
        RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], 
       RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}]]}], ",", 
     RowBox[{
      RowBox[{"ie1", "[", "1", "]"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", "b", " ", 
         SuperscriptBox["zI", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nR", " ", 
          SuperscriptBox["zI", "2"], " ", "znR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"]}], "-", 
         RowBox[{"nI", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], 
         "-", 
         RowBox[{"4", " ", "b", " ", "nI", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
          "\[Tau]I", " ", "\[Tau]R"}], "-", 
         RowBox[{
         "4", " ", "b", " ", "nI", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
          "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
          "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
         "4", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", "\[Delta]",
           " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "8"}], " ", "b", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{"nI", "+", 
                 RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], 
                 "+", 
                 RowBox[{"b", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    "2", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}],
                    ")"}]}]}], ")"}], " ", 
               SuperscriptBox["\[Tau]R", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                  "\[Tau]I"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"4", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                  "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], ")"}]}]}],
      ",", 
     RowBox[{
      RowBox[{"ie1", "[", "2", "]"}], "\[Rule]", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"4", " ", "b", " ", 
         SuperscriptBox["zI", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", 
         SuperscriptBox["\[Beta]", "2"], " ", "\[Kappa]", " ", 
         SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nR", " ", 
          SuperscriptBox["zI", "2"], " ", "znR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"]}], "-", 
         RowBox[{"nI", " ", 
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Tau]I", " ", "\[Tau]R"}], 
         "-", 
         RowBox[{"4", " ", "b", " ", "nI", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Kappa]", " ", 
          "\[Tau]I", " ", "\[Tau]R"}], "-", 
         RowBox[{
         "4", " ", "b", " ", "nI", " ", "zI", " ", "zR", " ", "\[Beta]", " ", 
          "\[Kappa]", " ", "\[Tau]I", " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "3"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"b", " ", 
          SuperscriptBox["zI", "2"], " ", "zR", " ", 
          SuperscriptBox["\[Beta]", "2"], " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
          SuperscriptBox["zI", "2"], " ", 
          SuperscriptBox["\[Beta]", "2"], " ", "\[Delta]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{"4", " ", "b", " ", 
          SuperscriptBox["zI", "2"], " ", "\[Beta]", " ", "\[Delta]", " ", 
          "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "-", 
         RowBox[{
         "4", " ", "b", " ", "zI", " ", "zR", " ", "\[Beta]", " ", "\[Delta]",
           " ", "\[Kappa]", " ", 
          SuperscriptBox["\[Tau]I", "2"], " ", "\[Tau]R"}], "+", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["zI", "2"], " ", 
            SuperscriptBox["\[Beta]", "2"], " ", 
            SuperscriptBox["\[Tau]I", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "8"}], " ", "b", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"zI", "+", "zR"}], ")"}], "2"], " ", "\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{"nI", "+", 
                 RowBox[{"\[Delta]", " ", "\[Tau]I"}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"d", " ", "zI", " ", "\[Beta]", " ", "\[Tau]I"}], 
                 "+", 
                 RowBox[{"b", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "nI", " ", "\[Kappa]"}], "-", 
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Tau]I"}], "+", 
                    RowBox[{
                    "2", " ", "\[Delta]", " ", "\[Kappa]", " ", "\[Tau]I"}]}],
                    ")"}]}]}], ")"}], " ", 
               SuperscriptBox["\[Tau]R", "2"]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "nR", " ", "zI", " ", "znR", " ", "\[Beta]", " ", 
                  "\[Tau]I"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"nI", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "b", " ", "zR", " ", "\[Kappa]"}], "+", 
                    RowBox[{"zI", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Beta]", "+", 
                    RowBox[{"4", " ", "b", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]", " ", "\[Delta]"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"(", 
                    RowBox[{"zI", "+", "zR"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"zI", " ", "\[Beta]"}], "-", 
                    RowBox[{"4", " ", "\[Delta]", " ", "\[Kappa]"}]}], 
                    ")"}]}]}], ")"}], " ", "\[Tau]I"}]}], ")"}], " ", 
                  "\[Tau]R"}]}], ")"}], "2"]}], ")"}]}], ")"}]}]}], 
        ")"}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7131138325330772`*^9, 3.713113843066847*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equiSub", "[", 
   RowBox[{"nIs_", ",", "nRs_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"h", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
            RowBox[{"se", "[", "h", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"i", "[", 
             RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
            " ", 
            RowBox[{"ie", "[", 
             RowBox[{"h", ",", "c"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nIs"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"h", ",", "c", ",", "\[Infinity]"}], "]"}], "\[Rule]", 
            " ", 
            RowBox[{"re", "[", 
             RowBox[{"h", ",", "c"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nRs"}], "}"}]}], "]"}]}], "]"}], "/.",
        "equ2"}], "/.", "zsub"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
       RowBox[{"nR", "\[Rule]", "nRs"}]}], "}"}]}], "]"}], "/.", 
   "pars"}]}]], "Input",
 CellChangeTimes->{{3.713188127948411*^9, 3.713188206122798*^9}, {
  3.7131883445528*^9, 3.713188477435699*^9}, {3.713189027122628*^9, 
  3.7131890290485373`*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerically Integrating", "Section",
 CellChangeTimes->{{3.713188498201351*^9, 3.713188504816503*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "ODEs", ",", "Vars", ",", "Inits", ",", "InitEqus", ",", "\[Alpha]Sub"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.713189165200698*^9, 3.713189176238559*^9}}],

Cell["Functions", "Text",
 CellChangeTimes->{{3.713188531693719*^9, 3.713188534248782*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ODEs", "[", 
   RowBox[{"nIs_", ",", "nRs_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"h", ",", "t"}], "]"}], ",", "t"}], "]"}], "\[Equal]", 
          RowBox[{"g1", "[", 
           RowBox[{"h", ",", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"i", "[", 
             RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", "t"}], "]"}], 
          "\[Equal]", 
          RowBox[{"g2", "[", 
           RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nIs"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", "t"}], "]"}], 
          "\[Equal]", 
          RowBox[{"g3", "[", 
           RowBox[{"h", ",", "c", ",", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nRs"}], "}"}]}], "]"}]}], "]"}], "]"}],
     "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"nI", "\[Rule]", "nIs"}], ",", 
      RowBox[{"nR", "\[Rule]", "nRs"}]}], "}"}]}], "/.", "pars"}]}]], "Input",
 CellChangeTimes->{{3.713188543462221*^9, 3.713188701744402*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vars", "[", 
   RowBox[{"nIs_", ",", "nRs_"}], "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"h", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "[", 
        RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", "nIs"}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c", ",", "1", ",", "nRs"}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.713188730042177*^9, 3.713188768873383*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitEqus", "[", 
   RowBox[{"pH_", ",", "pP_", ",", "nI_", ",", "nR_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pP", "\[Equal]", 
       FractionBox[
        RowBox[{"i1", " ", "\[Alpha]H", " ", "\[Alpha]P"}], 
        RowBox[{
         RowBox[{"i1", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", "i2"}]]}], 
      ",", 
      RowBox[{"pH", "\[Equal]", 
       FractionBox[
        RowBox[{
         RowBox[{"s1", " ", "\[Alpha]H"}], "+", 
         RowBox[{"i1", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", 
         RowBox[{"r1", " ", "\[Alpha]H"}]}], 
        RowBox[{
         RowBox[{"s1", " ", "\[Alpha]H"}], "+", "s2", "+", 
         RowBox[{"i1", " ", "\[Alpha]H", " ", "\[Alpha]P"}], "+", "i2", "+", 
         RowBox[{"r1", " ", "\[Alpha]H"}], "+", "r2"}]]}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s1", "\[Rule]", 
       RowBox[{"s", "[", 
        RowBox[{"1", ",", "\[Infinity]"}], "]"}]}], ",", " ", 
      RowBox[{"s2", "\[Rule]", 
       RowBox[{"s", "[", 
        RowBox[{"2", ",", "\[Infinity]"}], "]"}]}], ",", 
      RowBox[{"i1", "\[Rule]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"1", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"i2", "\[Rule]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"i", "[", 
          RowBox[{"2", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"r1", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"1", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"r2", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"2", ",", "c", ",", "\[Infinity]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}]}], "}"}]}], "/.", 
   RowBox[{"equiSub", "[", 
    RowBox[{"nI", ",", "nR", ",", "pars"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.713188968680601*^9, 3.713189041649317*^9}, {
  3.713189217965239*^9, 3.713189227329842*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Alpha]Sub", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NSolve", "[", 
    RowBox[{
     RowBox[{"InitEqus", "[", 
      RowBox[{"0.55", ",", "0.45", ",", "nI", ",", "nR", ",", "pars"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"\[Alpha]H", ",", "\[Alpha]P"}], "}"}]}], "]"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.713189105175424*^9, 3.7131891437072973`*^9}, {
  3.713189233160789*^9, 3.713189234488902*^9}, {3.713190386160522*^9, 
  3.713190390062365*^9}, {3.7131905118806868`*^9, 3.713190513271474*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inits", "[", 
   RowBox[{"nIs_", ",", "nRs_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nI", ",", "nR", ",", "inits", ",", "h", ",", "p", ",", "c", ",", 
      "equ"}], "}"}], ",", 
    RowBox[{
     RowBox[{"inits", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"nI", "=", "nIs"}], ";", 
     RowBox[{"nR", "=", "nRs"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"equ", "=", 
      RowBox[{"equiSub", "[", 
       RowBox[{"nI", ",", "nR", ",", "pars"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inits", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"1", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"1", ",", "\[Infinity]"}], "]"}], "/.", "equ"}], ")"}], 
         "*", "\[Alpha]H"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"inits", ",", 
       RowBox[{
        RowBox[{"s", "[", 
         RowBox[{"2", ",", "0"}], "]"}], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"2", ",", "\[Infinity]"}], "]"}], "/.", "equ"}], ")"}]}]}],
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"1", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"i", "[", 
               RowBox[{"1", ",", "c", ",", "\[Infinity]"}], "]"}], "/.", 
              "equ"}], ")"}], "\[Alpha]H", " ", "\[Alpha]P"}]}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"i", "[", 
            RowBox[{"2", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"i", "[", 
              RowBox[{"2", ",", "c", ",", "\[Infinity]"}], "]"}], "/.", 
             "equ"}], ")"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"c", "=", "1"}], ",", 
       RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
       RowBox[{"c", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"1", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"1", ",", "c", ",", "\[Infinity]"}], "]"}], "/.", 
              "equ"}], ")"}], "\[Alpha]H"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"inits", ",", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"2", ",", "c", ",", "0"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"r", "[", 
              RowBox[{"2", ",", "c", ",", "\[Infinity]"}], "]"}], "/.", 
             "equ"}], ")"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"inits", "/.", 
      RowBox[{"\[Alpha]Sub", "[", 
       RowBox[{"nI", ",", "nR", ",", "pars"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.713181165160187*^9, 3.713181189786303*^9}, {
  3.713189070646063*^9, 3.713189073654477*^9}, {3.7131892433885612`*^9, 
  3.713189344991477*^9}, {3.713189517689755*^9, 3.713189543109535*^9}}],

Cell["Numerically integrating", "Text",
 CellChangeTimes->{{3.7131885368453407`*^9, 3.713188540169097*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nInt", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "pars_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"ODEs", "[", 
        RowBox[{"nI", ",", "nR", ",", "pars"}], "]"}], ",", 
       RowBox[{"Inits", "[", 
        RowBox[{"nI", ",", "nR", ",", "pars"}], "]"}]}], "]"}], ",", 
     RowBox[{"Vars", "[", 
      RowBox[{"nI", ",", "nR"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}]}], "]"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.7131885070716553`*^9, 3.7131885236654367`*^9}, {
  3.713189653994933*^9, 3.7131896844535217`*^9}}],

Cell[CellGroupData[{

Cell["Plots", "Subsubsection",
 CellChangeTimes->{{3.7133706148436747`*^9, 3.7133706178062553`*^9}}],

Cell["\<\
Epidemic dynamics (Density of susceptible, infected, and recovered hosts)\
\>", "Text",
 CellChangeTimes->{{3.714149853860785*^9, 3.714149874229967*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EpiPlot", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"ssol", "[", 
         RowBox[{"h", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"isol", "[", 
         RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"rsol", "[", 
         RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Purple"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.713370620581691*^9, 3.713370659379942*^9}, {
  3.713370707716556*^9, 3.713370716008587*^9}, {3.7133707632258043`*^9, 
  3.713370853026102*^9}}],

Cell["\<\
Synchronization of infection types (Density of susceptible host type 1 and \
type 2)\
\>", "Text",
 CellChangeTimes->{{3.7141498778149443`*^9, 3.71414990985912*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EpiPlot2", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"isol", "[", 
         RowBox[{"1", ",", "c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ",", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"isol", "[", 
         RowBox[{"2", ",", "c", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Blue", ",", "Dashed"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.7141498496832743`*^9, {3.714149915515675*^9, 3.714149948942831*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AFPlot", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"ssol", "[", 
         RowBox[{"1", ",", "t"}], "]"}], "+", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"isol", "[", 
           RowBox[{"1", ",", "c", ",", "t"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"rsol", "[", 
           RowBox[{"1", ",", "c", ",", "t"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ssol", "[", 
           RowBox[{"h", ",", "t"}], "]"}], "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"isol", "[", 
             RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{"rsol", "[", 
             RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}]], ",", 
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"isol", "[", 
          RowBox[{"1", ",", "c", ",", "t"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"isol", "[", 
            RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}]}], "]"}]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "1", ",", "tmax"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Green"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7133708606826077`*^9, 3.713370975022921*^9}, {
   3.7133710178503036`*^9, 3.713371043316372*^9}, 3.713371658896462*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.713370611026207*^9, 3.713370612184311*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pars", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "0.02`"}], ",", 
     RowBox[{"d", "\[Rule]", "0.001`"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.005`"}], ",", 
     RowBox[{"\[Kappa]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]I", "\[Rule]", "10"}], ",", 
     RowBox[{"\[Tau]R", "\[Rule]", "50"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "0.8"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.713368986165012*^9, 3.713369006863542*^9}, {
  3.71336974090609*^9, 3.713369742103279*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nsol", "=", 
   RowBox[{"nInt", "[", 
    RowBox[{"20", ",", "20", ",", "Pars", ",", "1000"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ssol", "[", 
   RowBox[{"h_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"h", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Tau]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"isol", "[", 
   RowBox[{"h_", ",", "c_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "[", 
     RowBox[{"h", ",", "c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Tau]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rsol", "[", 
   RowBox[{"h_", ",", "c_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"h", ",", "c", ",", "t"}], "]"}], "/.", "nsol"}], "/.", 
   RowBox[{"t", "\[Rule]", "\[Tau]"}]}]}]}], "Input",
 CellChangeTimes->{{3.713370503054481*^9, 3.7133705904134197`*^9}, 
   3.7133707527614737`*^9, {3.713371328175563*^9, 3.713371328539818*^9}, {
   3.713371618181746*^9, 3.713371621488008*^9}, {3.713720456701931*^9, 
   3.713720458904724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EpiPlot", "[", 
  RowBox[{"20", ",", "20", ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.713370731151699*^9, 3.713370755322218*^9}, {
  3.713370826252542*^9, 3.71337084820153*^9}, {3.713371609649762*^9, 
  3.713371610570912*^9}, {3.713720420592669*^9, 3.713720422330099*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
vwi+GplJWXeWwOuYIcOri2RU+kTS6CgshW0R1afblon/D/OJueJyKbx7l3j8
5EpvjFk90CurWQYhAZ6H5Vd7Y4OMJKduYRlEum+QmuQn7NK/04e6ykHG+dc2
KyFv1L6jJf9PtgKi7Ns2NQp7I8flr/wZbhUQY/F+XYqoN+4wc0s4IVIJiUcP
TLtJe6PqNrZ2i2sVzO3nTt0m440VzxTmrL5WgbZs652i3d44+edG3XOshpb1
bnO8yt7o8FnyzZbNNfD3cxpHhLo3Dii3pp0frAWs8CnS0/DGW+d1j/66VAe+
2caUKU1v3PfqS8/VrjoQDf6zWkPHG6ev/grs76kHzWv7+ZrPeCP10+UOnlWN
QDNb1ehx1hsFRj7I55xuhAb9z0/EjLxRzHWOuz6wEaz33Nlkf8EbZZ4oJ21U
aQKf+dTtK2y9Cf37XoV8qxlqWPsUlO9648qXVKnW3a0g/JDrR8s9b5S1Xwx3
92kFS+eWBM8H3hh0RXZ8tLcVpoxd95Z5E/lvtxRe8fYLCImnHrJge6Oj94YK
XtGvYJa09yQzzBsNHE6IBWzvhLAwTp49kd5I/vJZVfB+J0w8b65pjfLGpgnJ
Bs7OTnjgedtAMt4bZyxeZhcEdkHo0ZTzWZneKGhwWGAr5zcY2++95VKONzr9
UrQLNfsGqrKGHVx53ni58bAGI/EblKz/ZWlQTPRr0P6Ls3wPjHxWtRuu9Ua3
+jPbySU9EM90FbJq8MYv18smVQd7wFUrvaCtyRuD50S6nnL1wqG/f53OfvZG
6zZ7a3/JXlgRp7616os35vJ6yvBBL1RY36vQbvdGRluY1sKFXmCLfLqT0+mN
kmJPczVv94JR3ZLkvm/e2PGf1fo8Ri+IUrAhtpfAR0k/ySqkF3rUyfd3Dnjj
OUFJ+vrUXoicLJZ7N+SNlRF57MjSXnCMWNW2adQbWyrCOYQ+98Je8+M+/uPe
aBU7a7O/rxfm+emqa354oz7rlP/URC8UlFV9ezTljZtVVLJ3/ekFqtd6v7lp
b1TZ+ck3a74X9FXPHHL5442JHKt1GIu9IDjiPzz21xsPaZq23iXstreNz2zm
vbFWtXPFdeL8O0Mh7c4Fb+yunWWr/e6FK2uNJ42WvdG4s/Nu5VgvKOS/eFO7
goJKxjUHF7t6Ydq17aQuFwXFVjnMptX2Qqac6N88bgquv1op9CWrFx70mIcf
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
//1ZBn9sK9+0rS0sGv4Heh6Mug==
      "]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
2zvevtl+D3osj215/4Lwy32B+0v57sLWFvLbF5VEvkMz4TrE/Insh1J7a4h+
VWK6A5sBVur1d6JqufigGqSD5mlA/T3dxPeGi7+22PwQ96dCWp7Y7tv1XAz7
OBPXLUmBOgdl/6EGLqr/5n0+20eCCSnzjvPNXJwSrTr8JDsA5EPTqbs7uOjD
WDtnvs0X9M6+6w3vIvxOHm7cfdQbXJd9U1zWy8WujLSYBy53IKJ0Pdupn4vy
m8z7LOs9oPj28eH+QUJvpV3ZBzXcoWevxdGzI1wsXCLQubrdFf6+p94r/sDF
jBKq3NKA24AGDSqhn7iYurzWWVPCGawEvofxTHJxqxiT14LfCajVGyZvTBF6
lqnsv73qJqT5nNDoneZi5NsNNYuyjlB3yDJG+zvB58b0w3PXHWBikjZTMMfF
8edoL/jWHgRSH2lL/+QizyaJGwe0roKO2Oz8wl8u2tkdcvrItAGXd+IXri9y
cW3Kr4DFc9YQRlNJ7VpyF+vqZ2a27bSCQhWrv5q8d9F0Jte1TcQSuubo+k/5
76L9MtW0KmEL+P0489H2lXfRlfFhy2UNM9hs17QkcPVdDLm94skg+QpYdmzM
sRe6i/0Jo/fcTS4C9X8VXHk41VsXlqRUVIYQl5KLhHIMIaxlSBEZKlSScgoR
5VYSyhAq7X0MSYbQjQYhMpQhKTpFVMYIJxpFklxDKr7f9+d69vC8633Xu569
/tnUeG67KMHL5pqHzw84Me9Pd1czCYJzzYPiIy86wrPp6JICSYLKruWc5m3b
YaA0d6HcMoIFeUXq/KrbYKFfk3uMLEGNgW+nY0W3gobyePmkHMGsBy4F2sIO
4J8EXi0rmbin/T9RbTu4aMuuRiUGz0NNbcvKLVA695xkvgpBXfXjClOrbaDj
YZ6vzGqCewzI6MGSzTAV0PzkrDrB+z90ugccrUB27YTs+BqC9U6ZugMilmDc
L3PUnUXQgi1+faRrI4Q771cwXkdw+Q23wK47GyBr8fnA2/rM/uiK977F5sB9
lv9KypDgVnnVLJU6M+gPbVGOMiboZ9+awD9kCvP1J0+NIkHDVXbxovKmoDYi
2+5mRnCRk4h1gKsJbLllov5iA8GLpst3uOUgJEjHdN20Imh1sintXJ0xBNen
TFnZENw4vqPifowRHAjKkR6yJRhsp//lJdsQ7NTK9TgOBK3z1Pndtq4Hg546
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
tHrBN51SEE2xHZsBJl91RTv9a8XwP/fY+AE=
      "]]}, 
    {RGBColor[0.5, 0, 0.5], Thickness[Large], Opacity[1.], 
     LineBox[CompressedData["
1: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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 1000}, {0., 0.8483986648101912}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.713370737303583*^9, 3.713370756740088*^9}, {
   3.71337082457907*^9, 3.713370838737702*^9}, 3.713370892105486*^9, {
   3.713371616173642*^9, 3.713371624102271*^9}, 3.713720445110009*^9, 
   3.7137205020069113`*^9, 3.7141498779706373`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EpiPlot2", "[", 
  RowBox[{"20", ",", "20", ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{3.714149964227249*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
9kY+nQYL2Hhw0vZlWXwr/A/K3E9J
      "]], LineBox[CompressedData["
1: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
///2vxdEIZo=
      "]], LineBox[CompressedData["
1:eJw9lmk01W0XxiVTZUxpJBrIEIlK9WjvJIqE45hTMqXZPM/971vmIZySlJKE
TJ2XlIxFSkLyFCpNlBSV5MmD97xf3g977Q97rT2s63ettRWcTrFc+fn4+Kp4
8b/s+uTVro3xDLJ/H+itynwMPW8na6cSGLzNJBpxxB7Dp98iGt2pDNr5m6x4
EdwCI1FJbnrpDC4Tpqbzih7CuJhMdjGHwc6Oq+9FXzaDwOpVYtFZDG6b0FJI
WdcE8ma6XzbnMdjgdU7/Yk8DKPU2rszNZ9BIusrSf14DqLsZ2UkWMvjyHzr7
K9TDXyHWLZ9KGMw/Mbf5zrFasMn3vH6+isFd+n1xJQ1VcFBr4rVgNYMV4W4j
2n63wa0mTMarhkHVH/U2ezZVgk9XHDFqZFAkZ92xtD4uBB+cf6/iAYNh6Wfr
WhtuQdTQubGVDxmc6OitzfpPOSTz5TlPtjJYZqCRhHWlwIlTu3D4KYOPiC+u
KimBbJlbnc86GNRNyvf7PnYTitTqdhR18/oVrK/c2FgAtyoNAhe/ZDCzVXSF
gtENuKP3pJTpZTCDIyim/PE6PLTpWeHQz2DgjJihDvsaPH3vaN3yjkHTDU6q
qYq50H1yMHHjRwZfXdauKJtzFT4wY1NiQwwKVPZrTE9fhi8SwRuDhhkMSjO3
zJC4DD8yZ50Y+MZg9sdf/Bz7bOArE++r+clgc21Tn5n8BRD+K11adZxBTHcp
eXPtPIg3LzPmTDDIwQ9Fa3ecg+Wv1t45NcWgU5CluiQ3HVa5l3zvnWHQUIPt
5RqTBio/Nyrv5if4uc975MOps7Blzs5z8sIEZ49ePONzPAVEEric+jkEXSNF
OvFEMnRLKnKcRAkyGx7NrpxMhGtpnIzZEgQrniyRolsTwGfxnIxcKYJnbDXn
zUuPA72soPRdCwiqb64YjZoTC1Lyw2kDMgRTUxTIzowzUKz09Oza5QS1x0Ki
438QCCnEsy1yBAs6IrYa1jJgrFGeelSB4H3F/OLS7NOw9Naq1HmrCb5exh5P
SYqCT5vSU4oUCeYs43Y/TY6EijtCKSbKBE/mDgW450QA2R6Q/E2VYFbjvc81
EeGw0sA+ab0mQf65XSLlxiEw2tKa2KFF8N+bIVe8ngdBrcn2RK9NvH2bihMP
+QZCYkdJgvQWgh+EJD7JqgTAfkuFBO42gnWbdNrtf/iB6svUeMvtBG93+QgN
tvrCn/0C8eNIsLZiS2/2bR/guAzG6hgQLFzf1RJY6wVun2xiX+4mGN6r5M59
4Qnaxx/FBBkT9PDQaTGe8YBO75tnqs0I9nf+Xd/+7iRc/i13xsGCoMicGpuf
fifgVHBy9LQlQTkX7pzpFcdB9LQ3RXuCZPxy2dfCI9Aj9JG8dSDozF6+4ny8
O9yItSJRjgQjd5rpckMPg0HqFua+K8FxuRv3QhJcYaFM4WlXd4JKC38X+Ba4
wIfzy08LHSNorx5b79HlDJE5M5G7PQgeKq/oTNvrBGZrPCM/exFccddW1/f8
IZC78S4i1peghFHt81ujjvBVjR2hGkBw6XkN3XpzR6gufRDeGsTTV2azp1bA
QYjV3hx+IpQg26PbK+rAAbC9nR8mHkHQ3ERQn1g6wHhtXKgZIag4GJe+x8se
7u+cCvkeTZB7Pbo9LMMOzjafDEmNJdi5SKjF9KEtOBn3B2slEOzL2tEjJWwL
65+aB3clEdxbuveDMssGplmNQb6pBK/EzsgsuWENT7q1g2TSCWps07qqN88a
jr5eFGiTSVDt6Pn4wBFL0HGKCfgni6DdvR211zwsQXjgj3/mJYL6ArdGbSfZ
0H3kuP+2Kzy+m/1eYRIbcr++8uvLJajHTMbNUmODt6epX+h1nh9cq8QtOyxA
71edr1wBQRNTH+5EmAVIBm7wrS0i+NH67aVSbQt48+9VH8cSghcEVl8w/MEC
Ff3og11lBLuiHX3077LAL+6o0W4uQdxwUeLvWBY0dJpsrK7gzR9pMvriyALx
pZry66t4el/hnDukywK7Qwvm5d4l+GLU11pdngV5+b9/LaohGNbKb2s4hwU/
Rnr64+oIDm65ZlUwYQ7bN9c8nmkgaCNcOmTxzRxiw3IqvB8QXDOcFGM8ZA7d
D5icwWaCOsoZclnD5rBSzD3e/hHBtfwCSta/zOEk29j/aStBhaQjDmkCLLhz
Qd1p51OC8ipbWB5LWSD0XsqksoPnx6JhZYnNLGCp/Nqs2kVQ5oFjTJYdC7I9
X6y81E2wey7u2kNYMHT7rpj0S4LeUXFvzStZsInv0gTtJTjAVswaG2VBlGHU
+z+vCLpEHiwN2mABbYmubSf7CToNjfFtC7GApd27q969I1jeuJ6mtFmAm6xa
rtVHgr9H+VwHlNlQ7iKR9GiQYNslO5/iRDZMF/4I3D5EUHb7Yk2XKTYY/Xzu
Uj5MsGX5i7YUP0vI2FplqjhCcFt2K+flH0t4F5m1NfM7wRqTzNI3sVag3hK+
RnyM4PuClCEHJWsIknSWjBonuCTB96JchzU0WRtM/prg8b4mpmz6jA0cGBDt
eDVF0Gv6lM4SJTsoWDd615yPYq+xdKi3hD2M+zzLe8BPcVC6b9xu7n7Qq65I
2SJIcatj02KFJQ6QODsz5KYwRefkKwnGugegxyj0sMJcinviBT8E8/ylmOrI
Shel6NJ+XwTdHKFGXmltqBTFCwOm+c7vD8Fc97nS36UpXhe6k9p52wmsSr5O
uchQJHXZd1ZdcoYr4+2fXiymOGkrqFnPcYFvutxne5dRZFt+VtPMdYWthFNT
J0sxPs5757ImN6CtQTe05SmKfbt8wnrmMMjZ7whfvoai/0H8KVt3FI5eWX00
WYniJm7961V7j0PFZ2FLARWKr4MmuF0TJ4Bf8wsEqFG8yH/TU7DlFOwLaFMZ
Vqd4v5We/f7GAzJryxY6alI0vSui6DPqCQNC6XxdWhTddgiWjSzyhrB0++67
OhQnfnfze3J94VHf9nqNbRS5o+uj9NT9QWb1yqKruhT5XCauVT4MAKdjgpxF
SDHb7YjUcxoExeWfIuP0KA7VLlj5+VgI/Pnn8fEZfYptH/tvpgaHgcGOEmtv
Q4pHDFl8g/sjIPVMqt7gHopKrvnL/dIj4dVT33X2eymejlT1e/45CkYl9Ptn
m1Ls+ZVcBaEMCJjNP1tkTvFf5+h6fh0Ki5P7d1myKVaaGG0UlzsDau3FE1NW
FJUfzV7TpBULKBlamGdLsbNX4+Ln0HiwMDM+YLqf4jjcFeHOSgK35CVSEwco
esoqeR9+lwxB7YONlw9RzKiYbuW6pUKiZIXfHheKz45/nVwmlQY5ZozyDzeK
mte09v31MR24yay+zCMUi1ZUZ/47wIGH7fJJO49TlMwOr4tbmgl9kiM7hk9S
zLGOHDvIZMGI2b2xNE+KBxycrm5SvgT8KXHXdX0o7396bicknAMyHbZ2A34U
R+zC3UWzroCK1FqxpECKs6ZluxytckHXfLx2cwhFy0a+yWadPDBLue/VH0Zx
/pf3naIG+eDSkbomJpLic+Xm5+MRBRAgdeiFJkNRVdy0Z+twEcSZa8T1UN49
Kq+zj8SWQHnH41HVeIq3wjsd9nHLoUkq82pXIo+f6toUJSsuvDR3twpNobjm
iU/93IUVwNcpUN2WQVFm5vKGyKEqWDD/2Un/8xRlW3WmnPiqQYmVoyCfxeNT
6oH5E80a2NepG+2ZQ1EuEnXUPerBab7o1qW5FL8IFGuyihrAl9Uz3JDHqzfm
Tdp9b4SsTj/WgiKKiQuZ3kWJTVA6f5fgvWKKMQsHC9e+bYZGlvRt1zIeH14T
g0NaLdCw9E+SaQX9///9X4Oabro=
      "]], LineBox[CompressedData["
1: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
M9gv1yAghuz//4/8D4ur6D0=
      "]], LineBox[CompressedData["
1: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
dvRQnHPJUL983xP4XiN1qqOX/v//5H8xceNe
      "]], LineBox[CompressedData["
1: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
m3j6//9f/wuNVEZu
      "]], LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAALiY4nmHajkBU917buZrLPyJROs9A
3Y5AFoDYtk4Syj/oA5KaOeiOQODnAXoCXMQ/mfBnzffqjkAiu8898gLDP0rd
PQC27Y5AC6sLVoe1wT+ttullMvOOQAAgfQDohL4/XqO/mPD1jkDwC2hPID28
PxCQlcuu+I5AwxrxqMITuj9yaUExK/6OQLH1v2RGHrY/JFYXZOkAj0DDv9EI
MlK0P9VC7ZanA49AX/61prKksj+GL8PJZQaPQIb1CbwKFbE/OByZ/CMJj0C4
uf0JiUSvP+kIby/iC49AydFL0HqWrD+a9URioA6PQEufdD5gHao//c7wxxwU
j0An+5rm976lP667xvraFo9A0xl+QuLToz9gqJwtmRmPQF+KEZlOEqI/EZVy
YFccj0BztmdjVnegP8KBSJMVH49Ai0rA3UgAnj90bh7G0yGPQJpXFhf4U5s/
JVv0+JEkj0DDPN31fOSYP9ZHyitQJ49AH67q5N2slj+INKBeDiqPQPA5zhZq
qJQ/OSF2kcwsj0CapBW+vNKSP+oNTMSKL49A5TW10r0nkT+c+iH3SDKPQMpo
95FER48/Tef3KQc1j0Ac41lV04WMP/7TzVzFN49AWpoulbgEij+wwKOPgzqP
QACNZMIMvoc/Ya15wkE9j0Ahvj+da6yFPxKaT/X/P49AOj/k+enKgz9LIPfw

      "]]}, 
    {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], 
     Dashing[{Small, Small}], LineBox[CompressedData["
1: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
pDhEsigp9cDAb7mBoYsMNF66+K4mtQf+Bz3vtYs=
      "]], LineBox[CompressedData["
1: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

      "]], LineBox[CompressedData["
1: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
cw==
      "]], 
     LineBox[{{992.69731773515, 0.2156593629023812}, {993.1425716363656, 
      0.20780912971735666`}, {993.4854420351595, 0.20121329016985007`}, {
      993.8283124339534, 0.19432033366014273`}, {994.5140532315414, 
      0.17985510446102668`}, {994.8569236303354, 0.17238751849194758`}, {
      995.1997940291294, 0.16483098844093289`}, {995.8855348267173, 
      0.14964217104508953`}, {996.2284052255113, 0.1420987173255248}, {
      996.5712756243053, 0.13464320116015926`}, {997.2570164218932, 
      0.12013647060823429`}, {997.5998868206872, 0.11314592332472531`}, {
      997.9427572194811, 0.106364465282482}, {998.6284980170691, 
      0.09350676476703734}, {998.971368415863, 0.08745997960909713}, {
      999.3142388146571, 0.08168157782447323}, {999.657109213451, 
      0.07617763232331612}, {999.9999796122449, 
      0.07095122730938332}}]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{1, 1000}, {0., 0.2156593629023812}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.714149986341425*^9}]
}, Closed]],

Cell["\<\
Unlike the case where Y>0, the density of infections of type 1 and type 2 are \
not in phase.  Instead the lag between the two types varies over time \
generating the variable amplitude allele frequency cycles over time seen \
below.\
\>", "Text",
 CellChangeTimes->{{3.714212282299384*^9, 3.714212353163404*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AFPlot", "[", 
  RowBox[{"20", ",", "20", ",", "1000"}], "]"}]], "Input",
 CellChangeTimes->{{3.713370983266041*^9, 3.713370983448903*^9}, {
  3.713371332305437*^9, 3.7133713324941196`*^9}, {3.713371627200758*^9, 
  3.713371652125514*^9}, {3.713720424821383*^9, 3.713720426666049*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
tks09BZQHXHVOxXtrtfw3k3UAoayWgMfob3b7NLOhVuACWfk0hJa1HFG4UaG
BTzuMjOhxvn+Y5fL0sJ9C4ioC9Mnx4Ojtqd2Yb8FKAuuzSuirw4HM9GfuAqh
PR8lb6M1l5ITBvuvgvXnksM2GK+7MvbJiM5dBbPFQGIo+pXkjdn47avQdUtV
4Cb6iNyl4sMHLOE5iSTQjb4dqbuzV94SuFU5tWQxX6QzmTdL3bAE2sT5AM4U
3L9cPZz9Nc8SYveMHDyL1n487plWZglUrlnJumgmfWue+f8sYfZP0nQcOiHb
ITxvzhJE03ONltGzc8eNNFctYYnvzSAD5jM12bmTG9uWMHz45A9+NPW465ju
ASto3zHeaIAm8nufpwEr+CN9eLsSPe4nfqBawwquv4hUb0fLvVqZv2pgBV8i
R7+R6+m/TgG3652toG5Ud2MH5lOTZ1K+9n5WUHqzw2w/um73n4ssRCt4e9Bi
iZxv/R8R/rresIIjeQ3XVNADFHJ97PlWcCmON9IAfUZ3u6y9zArWK6bjbdDp
RU0RPjVWMDIO2Z7o5RWSCU+TFTwIoywjoHVUlMS6Oq2Aq3u8OhZdmUW1K3jA
Chbf5D5KRTPNtk0KTFhBcS1f5i20m0xsfd+cFezvibck17PdE6YNWqtWYLV8
+/s9cr0cK/qsY9sKCE/Mr1Sg00Sonyvvsob9RfsKqsj7q76Pz//bbw1i17v+
q0EbBlc0ynBbg7286yPyfq+OJ/JFjaA1nJNaca5Dc7wy+k/0jDWMqDb+IP9O
cBNueiBnDYNLPuK16DGWHc0C6tbAH8ImVU3eHzYMNBfo4fUMLOvk9xdalr08
ZGENVP0invfRVLThLVmO1vCwLCWX3H77h3qt+3ysIYaxJZT8fa/1jrddD7WG
nI4+JvL3n/iz2UYXZw2tK+cvx6Cv5b9vj0yzhuSv6+eDyfsLldJX/25bg6+a
7idXtPaP4NdBd63hzyY7vwV5P5p+uWPlsTUI0eVwaqH3y/B3ejy3hp2kmmby
ftN/Yr1zrt0aPmxUHjxB3i/GdL2xe28NlyutuFnROX3+XabfrEFJquXSHM6X
zaCL3YOL1uBJ0RDci7bg4enR+WsNzh49dvVoXreOd6rMNsB20yQ2El1Gc6hf
XMYGfHdV3KBH73642F+hbANzF0XVZ1LI8d02IHjZBuhsv31vQ4vlu3/gtrWB
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
aq7PpNNg/ZTxt5toR97Fl7tYNHhGa+FLR2teeXVwJp4GX3XWGyajBZWSBXMS
afAft51zEnrsrl+ZXQoNAo9mSqei6002uc6l0kCll+SRhc5vnv+dm06DorLy
2iI0ybMuY/d1nL9mU9En6P1fE00Ws3D83y6NtaJNT/l+zL9BA+Dt+jOClufW
oDjn0eBpl+x3Duzf38Q59b+3MF5b5wNl0I9KE8LdSmjwY2BrlBc6bYfP6mVl
NKB/KTt2AX2yUf1RcTkN3v8SYuagtUdqlnE9oIEx57TAGFok4nLenUc0UFT+
MCiM8/N9mfcuz6c0CO52rtmKLpKZvVxeTYNvr5w6z6OV3FTl/ZtpICz7JWBF
AFE/TNcIttGgprPw8Qb0YNiL4AcdNKhfl7lkib7O9LizsocGCq2pK2PQ56U2
uDzupYHQuTdt19EeBVOzQf00sP7wwfsBevVLpnHVMA10pdMGvqKnnfYNH/qM
66XY6x0HxmfHB2WyxCgNWCcPlqxGxy9WNYd+o8H2z5EcJuijNMbxtZM0aDWP
SHBC263ZK/HyFw2SR7XlAtC8W396rZujwY7Kao9Y9MjzpxyvFmjQ2zMjk4h+
6UC/Gb5EA0mrY7zZ6Bvv3a1lOegwu6VNqQQdHaI40bCcDu+LmFEP0X5zP+Ij
uekwntwrXYs2Jj/Zup6XDiubbwq2oRdy3M6dFqLDfbESzk/ons0KckoidDiy
tFzmG7ry6ffqVjE6ZPL/vT2DTrZ9HHROgg6CGuX3ltDh7yj8G9bScf94a8GN
69cx2LW0Q4oOrf8e+gqiNWfknS/I0EF+wlpIHD0u8ujqGwU6xCx6GcoR+SDi
9asIZTps29RfrIRWfft+RlyVDvGees1qaCvD74r/qdNBq8QrWxMddP2fk/Mm
OlxcO6++FR3HIXrp52Y6/HAIP66HvhmgUHpZmw5/ByZObUcPq+3kb9WjA4Nn
Z5cZehnLXf+oIR1Ew0HLEi0/GRwkZEQHK6VYr11on0p6ta0ZHVy3vFXbjY6S
vDY5ZkGHMxqn2p3Q186XyNKt6BDid97ZFd1r1na23o6Ox3SRsb3o+byhguDd
dEg3/M7liV7LN9XN40wH3pLuZd5o91aJrTv30EH/El+hHzpSe4P/p310aBwt
dN+PTk7Rj4/1ooP5Wt5vRH7s8PQcf+FPh4io1HdB6J9VoZL+gXQI0vPVPogW
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
H6sJLZa+e+afSTzct125czuu1/8Bgse2NQ==
      "]]}, 
    {RGBColor[0, 1, 0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1: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
nQwJMvvi+d6MG6J4xXzWJSIerQ6WrloGIxTUFrOaIuJdf54VXCRhhP5r/0TY
NEhQWc3Ll2ZshBPXkhsFNEngcOduZ0S4Ee5oiq1n0yXBrpuywa6FRnja+rnm
tAkJXqc/5zVuN0IWSRW+LBsSRJ7X6lT7bISVRUlCB1xJwPXCoyGLxRh9dnbx
FPqTIKCuMp2F1xj5/CdOrEeSoKv6m0u8jDH2pCh8VUwmgdB9JZUfmsZ4wLf7
mGUWCWLuRLP6WBrjnaorZ2yLSDB0q4lC9jbGstzynBPVJDh8c3ODRZwxOtzl
CNzZRIKZ9Ksux+8Yo92n6b+nZkigfmlAub7eGIM/pFQ+XSFBznkeVuluY3zf
KviNnpEMOhEl9TzfjXF5S9at69xkKA6aS7vKZILn9K8qXBQmw2/fQy6b95qg
kyfT7mlpMlQ5Pd3xDU0wl3Y698NJMmyx/TPjftoEq19zSLmZkcHJ4lj9hIcJ
KjG0S9o7koFT761zZ7oJ/vVPWomIJkOUAunprQkTFHvyK5OrjgwD0iJpu7+a
4LEj5rJ57WQ4JOHlfHmTKeb4XFoLGiT4gPf79vCDpshck1HMtkqGk8zMzoYR
pigBaWP3Vadh15j09r8cZtgpzydwomcaKuLjHG30TiN5x4XienoK0Qj3hYY5
nsaduffg3W4KDNHVX8oMJdbFq1bvSVCA4dy3mje3TmNw05m6EmMK2CS5blZb
OY3O++2MNudR4OsJ+r2WLOZodPzF+ZZKCiRvLpQO5jPHK8wR/XwvKVCTPGx5
X8ccxaf29hWRKLDtkm7FvgJz9A50G7bnpULxqdmXR2rMsfBl4WiBJBWUtyb1
m3WY47MgW3FbFUIfLjf+ufzNHDUUymd1zajwS8+GvZzJAh/4cbwLcaBCxvY1
0bZ9FrhbrE5wlw8VXqTJGP3RssB6qQbmggRCXw3fuXCfscD5p07rF1KpMMfq
HaEQYIHqq+fMR7OoENfLlGZ8wQKl+T8NZOcTvJFRUuR70wLjMxj76wi9rzDG
upSHFrhDMr1Mo5IKyD75prTNAhumv9MOPKbC0IdIUtOoBbI3vFQJaaCCbybX
ysSSBZ5PL/1PkNBXBrPHW35uskR1qQ9z0oQeX+cw5t3NY4lOn5Tk8zoJ/hj4
LCsrbYlv0vveunVToS370kkDTUs8Tr91PK2XCjbmYme8rCzRWsqOj6OPCl93
t5694GeJs1dE5X/0UyF5yCGp6JwlfvD6PSE/SIX9uX+uN+ZaYpvr1n89hF1j
eePBaKUl0seMZbwmbB1upZYfzZZIO3y3YS9hT430DbEPW+KQwe3Wt4S/kBtn
Px36bIm2oSz0Yx+osNVmO50uvRXScO2HFhHP7b33ON25rFDZ+hofGxGv0riW
xDlJK+TPNjulQuTTnTejUYhWSF8bZ9bSSgVn23jTZ+ZWKDmmzF75kgrr+/d7
DHlbYVph4eW1eiqkT9ZHL8db4ap65+wdgi9ECs0zWHOs8GHpr+R6gq+e2S+X
HqywQupBsyEZoh7G/FcbTr6ywgndV9vZiHrF3O6ciZu3whSGvjAWor67nNzW
bv6zwsyfLeoHiPqXCzJsf8phjTuFKX9qQqkwUKym+EXDGss7WjT3E+/H22Xk
1DYza0x/8GXtrykV6ERC7Q94WuMbjpeHLAieOHSn6qJDpjX2PvwoE0K8z6rE
0bVdZdb48FpIlyIfFWTsGT1fN1ijmXWNfQobFeT22OgcmrZGzrm3++e+U0Dp
0maW34dtkHuZ9/5ULQWeuslEVmnaYJSctrDvHYKfj5+Zd7K0wYNm0rtvEbyh
+ru6qzPOBhPSFSvogihw1M829do7G9wxSz7EQvwfX526+OvUtA1aPoml28NF
/H/Farz/rthgbViQD4WBAsdJzHqu+8/gN8mM5vbxGdA2ebxNzucMSse0PN11
eQaMFbemvdtii4LNX6u4KNPwgV3xb8J+W/y1X+dT27tpMF1y8FOQsUX2vjQZ
/3qCN+7WGuRZ2uKYbh5rSxoxb/A4sXqV2aJetz/TtPI0OP19epXxhB1SAgYr
U7LJMDM6s/HU0g5ff1z79Y7gC9e6HQE+PnZYq+b2yNCPDO5nXYz7Mu2wV/ub
Krs2GbynWdlvT9uh/25SxrY/JPjUqJJo9sMOuz8cqOIbJYHvTddvTCz2yHLv
xhiljgT+Zs8++MnYoybtgOotQr+D2t0y1eLtUWtX04esn1Mg4zl3LCfbHnUf
/JXOGZuCxa0+35bu2WOxXcOpOy+mwNM4wLh4wB43TndEsiZNgdj35Y3f8/Z4
QVvgbajXFFBzQh+ab9gjzn25vsV4ChzGo1hZDjpgHJ2a+luBKdgf97fRGRxQ
Ut6pg3nbFIwJJPi9OO2Al8YiRS+tTsL1VgZeLm8H3Fr5U+g0ZRIs3C90n413
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
lw8yA0vqI/DTTSbTf4pTsNAW9caTEoHp3fGbs2EC3nfkhjbPReD72D+i/Zsm
oPbNE4G9S0Q+fkKFc53jkPB+KeztegTeytlj2G4+DlwTzsLSrJE4fPXJkaLo
MfgzFd+TzBGJss8erc5qj8H0dH4kiTsS7f7zofPYTczns0O9GcKR2K6yhR2e
jMLx77ox35UjUUsxsqOCgdDzVY8D+kcjcW/3JactYyOw42dSX6lmJLqbbXv4
r2YERv69FLcwjMSsa5VuVC9CP+kn+qvMIjGEt2d4QXsEShh/xjFbR6K44FG7
+gMj4L9VfrDeJRLDaT90hz4Pw+kdxgnsXpG4VU5tk0bfMKiw+Ul6+0eiVQZJ
63rDMPBxpA61BEfipcCxncvFw8DIdTdxX2Qk5uiUWVikD8MCd5tUSFwkcm0q
edcbPQy9+6aHu89H4lf1QB4vn2F4wvfvnOilSORz0V+QshuGm4L7pOPSI/Ew
b6mAmMkw0Pc2LzZmRWJPQUjrRe1h8IzxfPD3eiSW/WDV5EPCn8ROP43CSPxy
mY9+RXUYlIZrpWJLiHimKW/YlYehIMn284vySJyXGXVIPELEJ7ep8s+DSJy8
PfREX2UYfEj3fNQfR2K6HUt5rMYw9F0xloypJ9Zf8yLvCSJf1bWF542R+JaN
65WswTDcni2o+N0SiQt0hz+3Ww0Dc84Jb7XOSLzWsviY4j4M/sc/SUS/i8RH
6z5t/4UPw+CX/+af9UVin6n69pHUYVAvUL73azgSjx6+Nd94exhKdUmeqpOR
qCobvHaKuM9t6xfEo2YiMUaGlSFpYBiC7kjNNcxGoqf1nX2By8MwZtp/9+dn
It6B581cHCNwjC7KQ2U5Eu+LJzNFK41A+QOBA5Frkfhp21R0oe0I7DzT8bH+
D1Evi3e2yRdGIGyLf9k6fRR6ROiXKzwagRMuz0UjtkchhcK9e5bgm/tszrSn
7FFIurEnaoHgx10vt9xZ44pCdt7IUw+iR4HMbSESLhiFNxuyfvl8GwXt138o
dWJR2PaNpchKZgyqgktKViWjkEkz9P1i4BjE9HwVClOKQsXJhxfIf8aAEp07
U6sWhZ8NeP8JnhwHXYmjxT8wChUC1537/hsH7qTLgqF6UdgufOmhjMwEPFER
EwhxjMKLgzyd8smTsFh6hjcoNQrPpUdvc9Agw2lThslHV6PwgtqoWao/GV5s
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
sRGhuSGYmHBoNg8i8s+tqFPZNQydl0pe6obHYbf0Nf0/RwleohxsUEiMQ6PS
Wo9UgneuZPjXSSTH4ciW5H6HwWGI0Kh5zHc5Dh3yV8IXto+AUa5K1ZacOFTm
HxjanzQC/3R1SibK47BIyccqM3MUfIp319Y/iMN776/WKI+PEu9h5nV2TRz6
hkQM6oqNwePy2AX9F3HIw5tGDWsdA0+mx7KNvXH4ftba/d2eCehr5m0qWI1D
zeyYhes7SQA8nz5E/ibu72LB/KFgElQG1FPM6eLRs/446cgwCS7ymzGzbo1H
F+nqjlUjMqjHphjG8cZjgm6eodGeabg3YO5oIxSPKPgjyURnGrikhIOUDsTj
uaFrBe8jpuHbWGPOkkw8Dt+8F7w0PA1lyt8n7E/EI1/3PoaoKzPAkdG0pHoq
Hr8um3DIPp2BhNk0uj2G8ZhLftXxgTwDZ66Ji/RaxqPRv87aAhkKdC7+ULxv
G4/WOV4bNRYUUNJq1b7oFI+cOWmbk6MpwLZi5wM+8XhLTlFEm+CNWD3J2H0B
8djweN8+iRkKLBSvp6+FxGMSjjpV01Oh3SSr5mFcPO5zOfiqSJ0Kcvcc2y6f
j8cvyfZxzFZUuE0nPeSREo8rZZWVLEFUiHrY+ZM/Mx5JVNGWmSIqzDJd2/bn
WjxORLFcefaUCqftXXhH8uJRazPXHZluKrTUyhx+cjseFe2uhJ0k9ODwjn+Y
cSce5++xGf77SoV817emvhXxqG5Ro2pDT8zbL6676jyMR41ZfQ47NhqEc7iH
iTyJx5mb9wpZ+Ah99ZZPoWuIx6uDH7qdD9LAtIXu5kRjPMp/sZ30IebfVzw9
9+tb4jE4rFxFHGggFZjXmN0RjyP9lMA8gl9udnr2BnTHIwhfhS5DGjALKE3r
f4hHhu3XkmtP0yAkfNN38aF4jO9udna1psFMz3vGzeOEP6bi9VFbGhiJFXJN
k+JR9yVj+V4HGuifPVYvRovHJzW16gqONNCpp1r7LsSjA9twxiKxfoI+5fej
L/GYyfltnwGht6grWbC2Eo+p+Y0O1mdooJ7Vc1TjVzyyLeTq8VjSQGUikHxu
Ix6FjU7TZxN6nJe59ZgrQwIG3TGZe69LzPNHJtiZNyfg4T7pR8PHCZ4ZfzBz
jzkBVx+kW1Sr0IArIf6x/tYEdKjU2OtymAbZIiZJX7YnYPHpLYnrBN/t6hIy
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
96cHTuyPndlUxMVPC/LHNlF7QLDB+KjHCy4ueTheJaJ1A3W5/LV5r7iYPO/6
g6dS3WCq0i4QvOHibLtvaauJfTFtgLVhZzkX9/e0qJz1kcC+K2JpBwEXfaVe
UCrmdUKfdGL6xj6iXvN/732j/hkuDx+q/t3PxbUDzidmz2wEx1ZLqaKvXHxw
v0M0/2893Cv6ctDoBxcfbj6XrS1dBz43X6UN/+Ii7/cGN1ARgVJCcuX9MULf
f9OyQ/SFEBq0ed1/f7m4eMHxCwGniffdQyPgi1Q8evlx9j3O50Gd9deU29Lx
6GqvaLC2sRbohmUfD8rG44JAe1urIzWwQevyn2Xy8bihn5tEVqmGL3LHDcWz
43FURNv/qboS0n/Z+l2bE49dg1pebzI/wVTNcLnWvHjs/O2yqe1UBdx//mGi
ST0e6X9atn6OKgff3MzVlxfEY0zI45NmSR9AOTnU11MrHtdeU47e9OI9vCU5
JKlpx2Pkqpbl2r/eQdixxR+ES+LxZIzMLnXLd7Dc++fYRd14fJmbr+6aVAYM
k2s+c/TjkTd0fPveQ29h45KIi1UG8eih7OGSJHkD/Yrb37EM43H1647NkuA3
kDmx5LeDUTx+k/YZivvzGnb0/l410zQeRUEjKi2pr+GvsHrve7N4XG76dbu2
xWt4+PpmPMU8Hr1D1vr78l/BgXtn3m62jEeXdBlt8cZXoJK+89c/IPBcfOV1
2sNS+B9RC7R2
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.11988215162829743`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7133709847737703`*^9, 3.713371137172447*^9, 3.713371466133772*^9, {
   3.7133716305845613`*^9, 3.713371663850651*^9}, 3.713720446252239*^9, 
   3.713720590013307*^9, 3.714149961664275*^9}]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Section",
 CellChangeTimes->{{3.7133673920981073`*^9, 3.71336740046741*^9}, {
  3.71336979686491*^9, 3.713369797100582*^9}}],

Cell["\<\
As with the case where Y>0, we wish to confirm that in cases where the \
biologically valid endemic equilibrium is unstable with limit cycles that \
there are no allele frequency cycles:\
\>", "Text",
 CellChangeTimes->{{3.713367458115119*^9, 3.7133674914999523`*^9}, 
   3.713367697725691*^9, {3.713367759297988*^9, 3.7133677900015574`*^9}}],

Cell[CellGroupData[{

Cell["The Jacobian", "Subsection",
 CellChangeTimes->{{3.713367796701214*^9, 3.713367799468889*^9}, {
   3.713369285621014*^9, 3.713369295496318*^9}, 3.713369803286038*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jmtrx", "[", 
   RowBox[{"nIs_", ",", "nRs_", ",", "pars_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "jmtrx", ",", "nI", ",", "nR", ",", "h", ",", "c", ",", "k", ",", "j", 
      ",", "row"}], "}"}], ",", 
    RowBox[{
     RowBox[{"nI", "=", "nIs"}], ";", " ", 
     RowBox[{"nR", "=", "nRs"}], ";", " ", 
     RowBox[{"jmtrx", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"2", "+", 
           RowBox[{"2", "nI"}], "+", 
           RowBox[{"2", "nR"}]}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", 
       RowBox[{
        RowBox[{"row", "=", "h"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{
            RowBox[{"jmtrx", "[", 
             RowBox[{"[", "row", "]"}], "]"}], ",", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"g1", "[", 
               RowBox[{"h", ",", "t"}], "]"}], ",", 
              RowBox[{"s", "[", 
               RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"jmtrx", "[", 
               RowBox[{"[", "row", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"g1", "[", 
                 RowBox[{"h", ",", "t"}], "]"}], ",", 
                RowBox[{"i", "[", 
                 RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "\[LessEqual]", "2"}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"jmtrx", "[", 
               RowBox[{"[", "row", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"g1", "[", 
                 RowBox[{"h", ",", "t"}], "]"}], ",", 
                RowBox[{"r", "[", 
                 RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], "]"}]}],
            "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nI"}], ",", 
         RowBox[{"c", "++"}], ",", 
         RowBox[{
          RowBox[{"row", "=", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "1"}], ")"}], "nI"}], "+", "c"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"jmtrx", "[", 
               RowBox[{"[", "row", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"g2", "[", 
                 RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                RowBox[{"s", "[", 
                 RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"jmtrx", "[", 
                 RowBox[{"[", "row", "]"}], "]"}], ",", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g2", "[", 
                   RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                  RowBox[{"i", "[", 
                   RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
               "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"jmtrx", "[", 
                 RowBox[{"[", "row", "]"}], "]"}], ",", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g2", "[", 
                   RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                  RowBox[{"r", "[", 
                   RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
               "]"}]}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"h", "=", "1"}], ",", 
       RowBox[{"h", "\[LessEqual]", "2"}], ",", 
       RowBox[{"h", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"c", "=", "1"}], ",", 
         RowBox[{"c", "\[LessEqual]", "nR"}], ",", 
         RowBox[{"c", "++"}], ",", 
         RowBox[{
          RowBox[{"row", "=", 
           RowBox[{"2", "+", 
            RowBox[{"2", "nI"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "1"}], ")"}], "nR"}], "+", "c"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{
              RowBox[{"jmtrx", "[", 
               RowBox[{"[", "row", "]"}], "]"}], ",", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"g3", "[", 
                 RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                RowBox[{"s", "[", 
                 RowBox[{"k", ",", "t"}], "]"}]}], "]"}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nI"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"jmtrx", "[", 
                 RowBox[{"[", "row", "]"}], "]"}], ",", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g3", "[", 
                   RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                  RowBox[{"i", "[", 
                   RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
               "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"k", "=", "1"}], ",", 
            RowBox[{"k", "\[LessEqual]", "2"}], ",", 
            RowBox[{"k", "++"}], ",", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "nR"}], ",", 
              RowBox[{"j", "++"}], ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{
                RowBox[{"jmtrx", "[", 
                 RowBox[{"[", "row", "]"}], "]"}], ",", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g3", "[", 
                   RowBox[{"h", ",", "c", ",", "t"}], "]"}], ",", 
                  RowBox[{"r", "[", 
                   RowBox[{"k", ",", "j", ",", "t"}], "]"}]}], "]"}]}], 
               "]"}]}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"jmtrx", "/.", "pars"}], "/.", 
      RowBox[{"{", 
       RowBox[{"t", "\[Rule]", "\[Infinity]"}], "}"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.713367809871969*^9, 3.713367883064034*^9}, {
  3.7133683777960052`*^9, 3.713368771791502*^9}, {3.713368805182819*^9, 
  3.713368836553289*^9}, {3.7133688796562653`*^9, 3.713368938347975*^9}, {
  3.713369176271372*^9, 3.713369202472608*^9}, {3.713369807473812*^9, 
  3.713369814180963*^9}}]
}, Closed]],

Cell["The Disease Free Equilibrium", "Subsection",
 CellChangeTimes->{{3.713369901834051*^9, 3.713369906693969*^9}}],

Cell[CellGroupData[{

Cell["The Endemic Equilibrium", "Subsection",
 CellChangeTimes->{{3.713369819379017*^9, 3.71336982427182*^9}}],

Cell[CellGroupData[{

Cell["Eigenvalue analysis", "Subsubsection",
 CellChangeTimes->{{3.713369827727848*^9, 3.71336983134371*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Re", "[", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     RowBox[{"Jmtrx", "[", 
      RowBox[{"20", ",", "20", ",", "Pars"}], "]"}], "/.", 
     RowBox[{"equiSub", "[", 
      RowBox[{"20", ",", "20", ",", "Pars"}], "]"}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.713369209200569*^9, 3.713369259190386*^9}, {
  3.713369858759273*^9, 3.71336989261486*^9}}],

Cell[BoxData["0.0044792515516035875`"], "Output",
 CellChangeTimes->{{3.71336921027703*^9, 3.713369229530384*^9}, 
   3.7133692603065577`*^9, {3.713369881394968*^9, 3.713369893605474*^9}, 
   3.7137206108124866`*^9}]
}, Closed]],

Cell["\<\
For the parameter combination (Pars) tested the endemic equilibrium is \
unstable\
\>", "Text",
 CellChangeTimes->{{3.713369232409286*^9, 3.713369263030643*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvector analysis", "Subsubsection",
 CellChangeTimes->{{3.713369312437303*^9, 3.7133693172944098`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sys", "=", 
   RowBox[{"Chop", "[", 
    RowBox[{"Eigensystem", "[", 
     RowBox[{
      RowBox[{"Jmtrx", "[", 
       RowBox[{"20", ",", "20", ",", "Pars"}], "]"}], "/.", 
      RowBox[{"equiSub", "[", 
       RowBox[{"20", ",", "20", ",", "Pars"}], "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7133695685580473`*^9, 3.7133695829781313`*^9}, 
   3.71336963539564*^9, {3.713369696851131*^9, 3.713369700042096*^9}, 
   3.7137207146512947`*^9}],

Cell["\<\
Function for calculating allele frequencies given an eigenvector:\
\>", "Text",
 CellChangeTimes->{{3.713366532731367*^9, 3.713366533294313*^9}, {
  3.71336657472059*^9, 3.713366581795293*^9}, {3.713367064598652*^9, 
  3.713367072149975*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"calcAF", "[", 
   RowBox[{"nI_", ",", "nR_", ",", "evec_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"evec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", "c"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{"2", "nI"}], "+", "c"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"evec", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "+", 
       RowBox[{"evec", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "1"}], ")"}], "nI"}], "+", "c"}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], "+", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"evec", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{"2", "nI"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"h", "-", "1"}], ")"}], "nR"}], "+", "c"}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "1", ",", "nR"}], "}"}]}], "]"}]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"evec", "[", 
         RowBox[{"[", 
          RowBox[{"2", "+", "c"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"evec", "[", 
         RowBox[{"[", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"h", "-", "1"}], ")"}], "nI"}], "+", "c"}], "]"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c", ",", "1", ",", "nI"}], "}"}]}], "]"}], ")"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.713366564456813*^9, 3.713366584487239*^9}, {
  3.713366620267414*^9, 3.713366633142713*^9}, {3.713366669362541*^9, 
  3.7133666817013206`*^9}, {3.7133667219679823`*^9, 3.713367013596833*^9}, {
  3.7133693901010513`*^9, 3.7133694334698267`*^9}, {3.713369481325474*^9, 
  3.7133695327322683`*^9}}],

Cell["\<\
Testing all eigenvectors corresponding to positive eigenvalues.\
\>", "Text",
 CellChangeTimes->{{3.7133693615309057`*^9, 3.713369370495816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "j", "}"}], ",", 
   RowBox[{
    RowBox[{"PosEvecs", "=", 
     RowBox[{"{", "}"}]}], ";", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", 
       RowBox[{"Length", "[", 
        RowBox[{"sys", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"sys", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "j"}], "]"}], "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"PosEvecs", ",", 
           RowBox[{"sys", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "j"}], "]"}], "]"}]}], "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"sys", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "j"}], "]"}], "]"}], "]"}], ";", 
         RowBox[{"Print", "[", 
          RowBox[{"Chop", "[", 
           RowBox[{"calcAF", "[", 
            RowBox[{"20", ",", "20", ",", 
             RowBox[{"PosEvecs", "[", 
              RowBox[{"[", 
               RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7133660285148478`*^9, 3.713366074273838*^9}, {
  3.7133664310928097`*^9, 3.713366507394167*^9}, {3.7133665431980143`*^9, 
  3.713366550202505*^9}, {3.713366607092724*^9, 3.713366608239375*^9}, {
  3.713367080342608*^9, 3.713367185858897*^9}, {3.713370441723037*^9, 
  3.713370451173154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.004479251551603565`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.08977315278459758`", " ", "\[ImaginaryI]"}]}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.7137207221864233`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "8.988898206136853`*^8"}], "+", 
    RowBox[{"2.04807949870555`*^10", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.9154066172244476`*^11"}], "-", 
    RowBox[{"9.817919001925717`*^10", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.713720722192281*^9}],

Cell[BoxData[
 RowBox[{"0.004479251551603565`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.08977315278459758`", " ", "\[ImaginaryI]"}]}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.713720722200515*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "8.988898206136853`*^8"}], "-", 
    RowBox[{"2.04807949870555`*^10", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "1.9154066172244476`*^11"}], "+", 
    RowBox[{"9.817919001925717`*^10", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.7137207222037354`*^9}],

Cell[BoxData[
 RowBox[{"0.004323734495198232`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.08970522751036533`", " ", "\[ImaginaryI]"}]}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.7137207222068853`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5000000000040541`", ",", "0.5000000000004936`"}], "}"}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.713720722212371*^9}],

Cell[BoxData[
 RowBox[{"0.004323734495198232`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.08970522751036533`", " ", "\[ImaginaryI]"}]}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.713720722217966*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5000000000040541`", ",", "0.5000000000004936`"}], "}"}]], "Print",
 CellChangeTimes->{3.713367186502307*^9, 3.713369595253406*^9, 
  3.713369640955934*^9, 3.7133697030765123`*^9, 3.71336975539762*^9, 
  3.713370453005664*^9, 3.713720722223363*^9}]
}, Closed]]
}, Closed]],

Cell["\<\
Reflecting the existence of allele-frequency cycles, there exists a positive \
eigenvalue where the eigenvector does not have allele frequencies of 0.5.\
\>", "Text",
 CellChangeTimes->{{3.713724202050166*^9, 3.7137242517545433`*^9}}]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{-1403, Automatic}, {Automatic, -166}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
Magnification->1.25,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 208, 5, 114, "Title"],
Cell[790, 29, 627, 9, 37, "Text"],
Cell[CellGroupData[{
Cell[1442, 42, 109, 1, 81, "Chapter"],
Cell[1554, 45, 91, 2, 39, "Input"],
Cell[1648, 49, 388, 7, 61, "Text"],
Cell[CellGroupData[{
Cell[2061, 60, 139, 2, 79, "Subchapter"],
Cell[CellGroupData[{
Cell[2225, 66, 112, 1, 43, "Subsubsection"],
Cell[2340, 69, 211, 4, 37, "Text"],
Cell[2554, 75, 556, 17, 39, "Input"],
Cell[3113, 94, 454, 9, 61, "Text"],
Cell[3570, 105, 284, 8, 39, "Input"],
Cell[3857, 115, 288, 6, 61, "Text"],
Cell[CellGroupData[{
Cell[4170, 125, 709, 22, 62, "Input"],
Cell[4882, 149, 2157, 57, 39, "Output"]
}, Closed]],
Cell[7054, 209, 412, 12, 50, "Text"],
Cell[CellGroupData[{
Cell[7491, 225, 405, 11, 59, "Input"],
Cell[7899, 238, 848, 25, 39, "Output"]
}, Closed]],
Cell[8762, 266, 106, 1, 37, "Text"],
Cell[8871, 269, 1034, 31, 39, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[9942, 305, 116, 1, 43, "Subsubsection"],
Cell[10061, 308, 224, 4, 37, "Text"],
Cell[10288, 314, 558, 17, 39, "Input"],
Cell[10849, 333, 124, 1, 37, "Text"],
Cell[10976, 336, 261, 7, 39, "Input"],
Cell[11240, 345, 229, 4, 61, "Text"],
Cell[CellGroupData[{
Cell[11494, 353, 578, 18, 62, "Input"],
Cell[12075, 373, 2125, 59, 92, "Output"]
}, Closed]],
Cell[14215, 435, 421, 12, 74, "Text"],
Cell[CellGroupData[{
Cell[14661, 451, 403, 11, 59, "Input"],
Cell[15067, 464, 1064, 29, 39, "Output"]
}, Closed]],
Cell[16146, 496, 98, 1, 37, "Text"],
Cell[16247, 499, 942, 29, 39, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[17226, 533, 159, 2, 43, "Subsubsection"],
Cell[17388, 537, 1940, 59, 66, "Input"],
Cell[19331, 598, 589, 18, 39, "Input"],
Cell[19923, 618, 461, 9, 85, "Text"],
Cell[20387, 629, 634, 19, 39, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[21070, 654, 102, 1, 79, "Subchapter"],
Cell[21175, 657, 361, 6, 61, "Text"],
Cell[21539, 665, 1754, 52, 66, "Input"],
Cell[23296, 719, 266, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[23587, 726, 309, 9, 39, "Input"],
Cell[23899, 737, 1925, 57, 96, "Output"]
}, Closed]],
Cell[25839, 797, 167, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[26031, 804, 200, 4, 39, "Input"],
Cell[26234, 810, 803, 25, 92, "Output"]
}, Closed]],
Cell[27052, 838, 469, 12, 50, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[27558, 855, 97, 1, 79, "Subchapter"],
Cell[27658, 858, 560, 14, 69, "Text"],
Cell[CellGroupData[{
Cell[28243, 876, 1241, 37, 86, "Input"],
Cell[29487, 915, 583, 18, 56, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[30107, 938, 136, 2, 39, "Input"],
Cell[30246, 942, 492, 16, 56, "Output"]
}, Closed]],
Cell[30753, 961, 391, 6, 61, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[31181, 972, 109, 1, 79, "Subchapter"],
Cell[31293, 975, 298, 6, 61, "Text"],
Cell[31594, 983, 751, 15, 39, "Input"],
Cell[32348, 1000, 433, 12, 39, "Input"],
Cell[CellGroupData[{
Cell[32806, 1016, 1146, 34, 118, "Input"],
Cell[33955, 1052, 1005, 30, 66, "Output"]
}, Closed]],
Cell[34975, 1085, 186, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[35186, 1093, 923, 25, 92, "Input"],
Cell[36112, 1120, 61990, 1024, 312, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[98163, 2151, 117, 1, 66, "Chapter"],
Cell[98283, 2154, 184, 4, 39, "Input"],
Cell[98470, 2160, 477, 6, 85, "Text"],
Cell[CellGroupData[{
Cell[98972, 2170, 142, 2, 79, "Subchapter"],
Cell[99117, 2174, 1164, 28, 95, "Text"],
Cell[100284, 2204, 2214, 64, 165, "Input"],
Cell[102501, 2270, 1638, 29, 214, "Text"],
Cell[104142, 2301, 1178, 36, 428, "Input"],
Cell[105323, 2339, 1215, 25, 1050, "Text"],
Cell[106541, 2366, 1582, 39, 428, "Input"],
Cell[108126, 2407, 1584, 39, 428, "Input"],
Cell[CellGroupData[{
Cell[109735, 2450, 123, 1, 307, "Subsubsection"],
Cell[109861, 2453, 221, 5, 266, "Text"],
Cell[110085, 2460, 2027, 56, 1258, "Input"],
Cell[112115, 2518, 127, 1, 266, "Text"],
Cell[112245, 2521, 1493, 40, 1258, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[113787, 2567, 100, 1, 425, "Subchapter"],
Cell[113890, 2570, 1732, 56, 1526, "Text"],
Cell[115625, 2628, 840, 27, 440, "Input"],
Cell[116468, 2657, 103, 1, 266, "Text"],
Cell[116574, 2660, 628, 17, 440, "Input"],
Cell[117205, 2679, 154, 2, 266, "Text"],
Cell[117362, 2683, 1049, 18, 806, "Text"],
Cell[CellGroupData[{
Cell[118436, 2705, 923, 27, 453, "Input"],
Cell[119362, 2734, 2256, 60, 531, "Output"]
}, Closed]],
Cell[121633, 2797, 164, 2, 266, "Text"],
Cell[CellGroupData[{
Cell[121822, 2803, 1364, 40, 770, "Input"],
Cell[123189, 2845, 1527, 39, 425, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[124753, 2889, 333, 9, 282, "Input"],
Cell[125089, 2900, 10817, 250, 2616, "Output"]
}, Closed]],
Cell[135921, 3153, 419, 9, 266, "Text"],
Cell[136343, 3164, 3280, 90, 1770, "Input"],
Cell[139626, 3256, 570, 10, 445, "Text"],
Cell[CellGroupData[{
Cell[140221, 3270, 264, 3, 307, "Subsubsection"],
Cell[140488, 3275, 422, 7, 266, "Text"],
Cell[CellGroupData[{
Cell[140935, 3286, 345, 11, 282, "Input"],
Cell[141283, 3299, 2083, 59, 843, "Output"]
}, Closed]],
Cell[143381, 3361, 510, 10, 457, "Text"],
Cell[CellGroupData[{
Cell[143916, 3375, 2859, 74, 1782, "Input"],
Cell[146778, 3451, 2228, 62, 858, "Output"]
}, Closed]],
Cell[149021, 3516, 1083, 20, 1151, "Text"],
Cell[150107, 3538, 262, 4, 266, "Text"],
Cell[150372, 3544, 1180, 31, 540, "Text"],
Cell[CellGroupData[{
Cell[151577, 3579, 685, 18, 282, "Input"],
Cell[152265, 3599, 756, 22, 502, "Output"]
}, Closed]],
Cell[153036, 3624, 774, 12, 806, "Text"],
Cell[153813, 3638, 191, 3, 266, "Text"],
Cell[154007, 3643, 1574, 42, 478, "Input"],
Cell[155584, 3687, 5567, 137, 3343, "Input"],
Cell[CellGroupData[{
Cell[161176, 3828, 103, 1, 282, "Input"],
Cell[161282, 3831, 194, 4, 282, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[161513, 3840, 132, 2, 282, "Input"],
Cell[161648, 3844, 202, 3, 282, "Output"]
}, Closed]],
Cell[161865, 3850, 407, 7, 445, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[162321, 3863, 97, 1, 425, "Subchapter"],
Cell[162421, 3866, 238, 5, 266, "Text"],
Cell[162662, 3873, 7955, 207, 4941, "Input"],
Cell[170620, 4082, 520, 8, 445, "Text"],
Cell[171143, 4092, 718, 16, 282, "Input"],
Cell[CellGroupData[{
Cell[171886, 4112, 160, 2, 307, "Subsubsection"],
Cell[172049, 4116, 155, 3, 266, "Text"],
Cell[CellGroupData[{
Cell[172229, 4123, 754, 18, 282, "Input"],
Cell[172986, 4143, 946, 19, 282, "Output"]
}, Closed]],
Cell[173947, 4165, 359, 6, 445, "Text"],
Cell[174309, 4173, 522, 16, 440, "Input"],
Cell[174834, 4191, 1439, 54, 540, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[176310, 4250, 114, 1, 307, "Subsubsection"],
Cell[176427, 4253, 533, 9, 626, "Text"],
Cell[176963, 4264, 1625, 57, 577, "Text"],
Cell[178591, 4323, 1791, 51, 1453, "Input"],
Cell[180385, 4376, 105, 1, 266, "Text"],
Cell[CellGroupData[{
Cell[180515, 4381, 159, 3, 282, "Input"],
Cell[180677, 4386, 969, 26, 916, "Output"]
}, Closed]],
Cell[181661, 4415, 402, 7, 445, "Text"],
Cell[182066, 4424, 826, 23, 307, "Input"],
Cell[182895, 4449, 117, 1, 266, "Text"],
Cell[183015, 4452, 1121, 29, 440, "Input"],
Cell[184139, 4483, 222, 4, 266, "Text"],
Cell[184364, 4489, 764, 23, 352, "Input"],
Cell[185131, 4514, 1333, 31, 577, "Text"],
Cell[CellGroupData[{
Cell[186489, 4549, 1259, 33, 501, "Input"],
Cell[187751, 4584, 121, 2, 282, "Output"]
}, Closed]],
Cell[187887, 4589, 605, 9, 445, "Text"],
Cell[188495, 4600, 1466, 38, 596, "Text"],
Cell[CellGroupData[{
Cell[189986, 4642, 856, 24, 487, "Input"],
Cell[190845, 4668, 578, 19, 502, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[191472, 4693, 161, 2, 245, "Subsubsection"],
Cell[191636, 4697, 214, 4, 238000, "Text"],
Cell[CellGroupData[{
Cell[191875, 4705, 249, 6, 241212, "Input"],
Cell[192127, 4713, 1466, 41, 404603, "Output"]
}, Closed]],
Cell[193608, 4757, 103, 1, 238000, "Text"],
Cell[CellGroupData[{
Cell[193736, 4762, 754, 18, 241212, "Input"],
Cell[194493, 4782, 1329, 28, 404603, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[195859, 4815, 156, 3, 241212, "Input"],
Cell[196018, 4820, 213, 3, 241212, "Output"]
}, Closed]],
Cell[196246, 4826, 261, 5, 238000, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[196544, 4836, 186, 2, 245, "Subsubsection"],
Cell[196733, 4840, 214, 4, 238000, "Text"],
Cell[CellGroupData[{
Cell[196972, 4848, 275, 7, 241212, "Input"],
Cell[197250, 4857, 1293, 37, 404603, "Output"]
}, Closed]],
Cell[198558, 4897, 169, 2, 238000, "Text"],
Cell[CellGroupData[{
Cell[198752, 4903, 808, 19, 241212, "Input"],
Cell[199563, 4924, 1331, 28, 404603, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[200931, 4957, 156, 3, 241212, "Input"],
Cell[201090, 4962, 237, 4, 241212, "Output"]
}, Closed]],
Cell[201342, 4969, 358, 6, 238000, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[201749, 4981, 109, 1, 425, "Subchapter"],
Cell[201861, 4984, 369, 7, 445, "Text"],
Cell[202233, 4993, 1092, 21, 282, "Input"],
Cell[203328, 5016, 325, 6, 61, "Text"],
Cell[203656, 5024, 2385, 63, 274, "Input"],
Cell[206044, 5089, 2152, 63, 144, "Input"],
Cell[208199, 5154, 342, 5, 61, "Text"],
Cell[CellGroupData[{
Cell[208566, 5163, 1380, 39, 118, "Input"],
Cell[209949, 5204, 130016, 2140, 312, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[340026, 7351, 130, 1, 66, "Chapter"],
Cell[340159, 7354, 91, 2, 39, "Input"],
Cell[340253, 7358, 392, 7, 85, "Text"],
Cell[CellGroupData[{
Cell[340670, 7369, 139, 2, 79, "Subchapter"],
Cell[340812, 7373, 1052, 27, 119, "Text"],
Cell[341867, 7402, 2660, 80, 164, "Input"],
Cell[344530, 7484, 1050, 28, 119, "Text"],
Cell[345583, 7514, 1493, 44, 136, "Input"],
Cell[347079, 7560, 997, 27, 95, "Text"],
Cell[348079, 7589, 1078, 33, 108, "Input"],
Cell[349160, 7624, 577, 13, 85, "Text"],
Cell[349740, 7639, 610, 18, 39, "Input"],
Cell[350353, 7659, 171, 3, 37, "Text"],
Cell[350527, 7664, 3403, 86, 534, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[353967, 7755, 100, 1, 79, "Subchapter"],
Cell[354070, 7758, 540, 9, 85, "Text"],
Cell[354613, 7769, 158, 2, 37, "Text"],
Cell[354774, 7773, 181, 2, 37, "Text"],
Cell[354958, 7777, 489, 14, 57, "Text"],
Cell[355450, 7793, 89, 1, 37, "Text"],
Cell[355542, 7796, 564, 16, 57, "Text"],
Cell[356109, 7814, 102, 1, 37, "Text"],
Cell[356214, 7817, 464, 14, 57, "Text"],
Cell[356681, 7833, 258, 5, 37, "Text"],
Cell[356942, 7840, 1533, 45, 110, "Input"],
Cell[358478, 7887, 1170, 27, 142, "Text"],
Cell[CellGroupData[{
Cell[359673, 7918, 1600, 42, 117, "Input"],
Cell[361276, 7962, 2813, 70, 136, "Output"]
}, Closed]],
Cell[364104, 8035, 172, 3, 37, "Text"],
Cell[364279, 8040, 2684, 84, 197, "Input"],
Cell[366966, 8126, 231, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[367222, 8134, 801, 22, 92, "Input"],
Cell[368026, 8158, 6881, 206, 550, "Output"]
}, Closed]],
Cell[374922, 8367, 121, 1, 32, "Text"],
Cell[375046, 8370, 1098, 30, 92, "Input"],
Cell[CellGroupData[{
Cell[376169, 8404, 110, 1, 54, "Subsection"],
Cell[376282, 8407, 159, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[376466, 8413, 755, 21, 39, "Input"],
Cell[377224, 8436, 746, 13, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[378007, 8454, 704, 20, 39, "Input"],
Cell[378714, 8476, 1389, 33, 66, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[380152, 8515, 107, 1, 54, "Subsection"],
Cell[380262, 8518, 144, 1, 37, "Text"],
Cell[380409, 8521, 584, 18, 39, "Input"],
Cell[CellGroupData[{
Cell[381018, 8543, 230, 4, 39, "Input"],
Cell[381251, 8549, 1543, 39, 66, "Output"]
}, Closed]],
Cell[382809, 8591, 111, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[382945, 8596, 416, 11, 39, "Input"],
Cell[383364, 8609, 1095, 23, 58, "Output"]
}, Closed]],
Cell[384474, 8635, 194, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[384693, 8642, 283, 6, 39, "Input"],
Cell[384979, 8650, 1089, 23, 39, "Output"]
}, Closed]],
Cell[386083, 8676, 110, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[386218, 8681, 517, 14, 39, "Input"],
Cell[386738, 8697, 1006, 21, 58, "Output"]
}, Closed]],
Cell[387759, 8721, 612, 16, 69, "Text"],
Cell[CellGroupData[{
Cell[388396, 8741, 328, 9, 39, "Input"],
Cell[388727, 8752, 768, 12, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[389532, 8769, 295, 8, 39, "Input"],
Cell[389830, 8779, 1493, 37, 93, "Output"]
}, Closed]],
Cell[391338, 8819, 631, 16, 45, "Text"],
Cell[391972, 8837, 161, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[392158, 8844, 321, 8, 39, "Input"],
Cell[392482, 8854, 824, 13, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[393343, 8872, 207, 5, 39, "Input"],
Cell[393553, 8879, 1611, 40, 93, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[395213, 8925, 172, 2, 54, "Subsection"],
Cell[395388, 8929, 419, 8, 61, "Text"],
Cell[395810, 8939, 165, 2, 37, "Text"],
Cell[395978, 8943, 534, 16, 39, "Input"],
Cell[CellGroupData[{
Cell[396537, 8963, 213, 4, 39, "Input"],
Cell[396753, 8969, 3090, 81, 155, "Output"]
}, Closed]],
Cell[399858, 9053, 293, 5, 61, "Text"],
Cell[CellGroupData[{
Cell[400176, 9062, 402, 11, 39, "Input"],
Cell[400581, 9075, 932, 15, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[401550, 9095, 193, 5, 39, "Input"],
Cell[401746, 9102, 2195, 56, 129, "Output"]
}, Closed]],
Cell[403956, 9161, 274, 8, 37, "Text"],
Cell[CellGroupData[{
Cell[404255, 9173, 438, 12, 39, "Input"],
Cell[404696, 9187, 1040, 19, 57, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[405773, 9211, 226, 6, 39, "Input"],
Cell[406002, 9219, 2798, 68, 143, "Output"]
}, Closed]],
Cell[408815, 9290, 117, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[408957, 9295, 615, 18, 66, "Input"],
Cell[409575, 9315, 12105, 279, 610, "Output"]
}, Closed]],
Cell[421695, 9597, 578, 11, 85, "Text"],
Cell[CellGroupData[{
Cell[422298, 9612, 490, 14, 39, "Input"],
Cell[422791, 9628, 3080, 85, 156, "Output"]
}, Closed]],
Cell[425886, 9716, 486, 11, 88, "Text"],
Cell[CellGroupData[{
Cell[426397, 9731, 1524, 45, 79, "Input"],
Cell[427924, 9778, 1125, 28, 63, "Output"]
}, Closed]],
Cell[429064, 9809, 608, 15, 64, "Text"],
Cell[CellGroupData[{
Cell[429697, 9828, 705, 19, 39, "Input"],
Cell[430405, 9849, 987, 24, 74, "Output"]
}, Closed]],
Cell[431407, 9876, 387, 6, 85, "Text"],
Cell[431797, 9884, 181, 3, 37, "Text"],
Cell[431981, 9889, 587, 17, 39, "Input"],
Cell[CellGroupData[{
Cell[432593, 9910, 238, 4, 39, "Input"],
Cell[432834, 9916, 2931, 79, 155, "Output"]
}, Closed]],
Cell[435780, 9998, 111, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[435916, 10003, 402, 11, 39, "Input"],
Cell[436321, 10016, 804, 13, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[437162, 10034, 182, 4, 39, "Input"],
Cell[437347, 10040, 2157, 56, 129, "Output"]
}, Closed]],
Cell[439519, 10099, 138, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[439682, 10105, 440, 12, 39, "Input"],
Cell[440125, 10119, 945, 17, 57, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[441107, 10141, 279, 8, 39, "Input"],
Cell[441389, 10151, 2687, 68, 143, "Output"],
Cell[444079, 10221, 2665, 68, 143, "Output"],
Cell[446747, 10291, 2643, 68, 143, "Output"],
Cell[449393, 10361, 2615, 67, 143, "Output"],
Cell[452011, 10430, 2593, 67, 143, "Output"],
Cell[454607, 10499, 2569, 67, 143, "Output"],
Cell[457179, 10568, 2543, 66, 143, "Output"],
Cell[459725, 10636, 2522, 66, 143, "Output"],
Cell[462250, 10704, 2501, 66, 143, "Output"],
Cell[464754, 10772, 2475, 65, 143, "Output"],
Cell[467232, 10839, 2451, 65, 143, "Output"],
Cell[469686, 10906, 2427, 65, 143, "Output"],
Cell[472116, 10973, 2401, 64, 143, "Output"],
Cell[474520, 11039, 2377, 64, 143, "Output"],
Cell[476900, 11105, 2355, 64, 143, "Output"],
Cell[479258, 11171, 2327, 63, 143, "Output"]
}, Closed]],
Cell[481600, 11237, 163, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[481788, 11243, 636, 18, 66, "Input"],
Cell[482427, 11263, 12033, 279, 610, "Output"],
Cell[494463, 11544, 12009, 279, 610, "Output"],
Cell[506475, 11825, 11987, 279, 610, "Output"],
Cell[518465, 12106, 11961, 278, 610, "Output"],
Cell[530429, 12386, 11940, 278, 610, "Output"],
Cell[542372, 12666, 11918, 278, 610, "Output"],
Cell[554293, 12946, 11892, 277, 610, "Output"],
Cell[566188, 13225, 11868, 277, 610, "Output"],
Cell[578059, 13504, 11847, 277, 610, "Output"],
Cell[589909, 13783, 9319, 219, 400, "Output"],
Cell[599231, 14004, 9297, 219, 400, "Output"],
Cell[608531, 14225, 9273, 219, 400, "Output"],
Cell[617807, 14446, 9245, 218, 400, "Output"],
Cell[627055, 14666, 9221, 218, 400, "Output"],
Cell[636279, 14886, 9199, 218, 400, "Output"],
Cell[645481, 15106, 9171, 217, 400, "Output"]
}, Closed]],
Cell[654667, 15326, 523, 11, 61, "Text"],
Cell[CellGroupData[{
Cell[655215, 15341, 438, 13, 39, "Input"],
Cell[655656, 15356, 3052, 84, 156, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[658745, 15445, 1554, 46, 79, "Input"],
Cell[660302, 15493, 1131, 28, 63, "Output"]
}, Closed]],
Cell[661448, 15524, 213, 4, 61, "Text"],
Cell[CellGroupData[{
Cell[661686, 15532, 657, 18, 39, "Input"],
Cell[662346, 15552, 926, 23, 74, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[663321, 15581, 168, 2, 54, "Subsection"],
Cell[663492, 15585, 761, 16, 85, "Text"],
Cell[664256, 15603, 276, 5, 37, "Text"],
Cell[664535, 15610, 381, 12, 39, "Input"],
Cell[CellGroupData[{
Cell[664941, 15626, 129, 2, 39, "Input"],
Cell[665073, 15630, 4382, 125, 242, "Output"]
}, Closed]],
Cell[669470, 15758, 114, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[669609, 15763, 448, 13, 39, "Input"],
Cell[670060, 15778, 749, 12, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[670846, 15795, 160, 3, 39, "Input"],
Cell[671009, 15800, 3013, 85, 155, "Output"]
}, Closed]],
Cell[674037, 15888, 112, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[674174, 15893, 538, 15, 39, "Input"],
Cell[674715, 15910, 866, 16, 57, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[675618, 15931, 253, 7, 39, "Input"],
Cell[675874, 15940, 3463, 88, 190, "Output"]
}, Closed]],
Cell[679352, 16031, 220, 5, 37, "Text"],
Cell[679575, 16038, 326, 5, 37, "Text"],
Cell[679904, 16045, 430, 13, 39, "Input"],
Cell[CellGroupData[{
Cell[680359, 16062, 155, 3, 39, "Input"],
Cell[680517, 16067, 4419, 125, 246, "Output"]
}, Closed]],
Cell[684951, 16195, 140, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[685116, 16201, 448, 13, 39, "Input"],
Cell[685567, 16216, 1231, 27, 61, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[686835, 16248, 218, 6, 39, "Input"],
Cell[687056, 16256, 5974, 164, 481, "Output"]
}, Closed]],
Cell[693045, 16423, 114, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[693184, 16428, 536, 15, 39, "Input"],
Cell[693723, 16445, 1268, 27, 61, "Output"]
}, Closed]],
Cell[695006, 16475, 251, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[695282, 16484, 498, 15, 39, "Input"],
Cell[695783, 16501, 4464, 111, 144, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[700284, 16617, 380, 11, 39, "Input"],
Cell[700667, 16630, 1982, 44, 99, "Output"]
}, Closed]],
Cell[702664, 16677, 159, 3, 37, "Text"],
Cell[702826, 16682, 240, 4, 37, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[703103, 16691, 121, 1, 54, "Subsection"],
Cell[703227, 16694, 505, 8, 61, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[703769, 16707, 115, 1, 54, "Subsection"],
Cell[703887, 16710, 489, 7, 109, "Text"],
Cell[704379, 16719, 754, 22, 66, "Input"],
Cell[CellGroupData[{
Cell[705158, 16745, 1309, 38, 176, "Input"],
Cell[706470, 16785, 455, 14, 59, "Output"]
}, Closed]],
Cell[706940, 16802, 137, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[707102, 16808, 382, 11, 39, "Input"],
Cell[707487, 16821, 1092, 22, 60, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[708616, 16848, 218, 6, 39, "Input"],
Cell[708837, 16856, 6463, 174, 362, "Output"]
}, Closed]],
Cell[715315, 17033, 113, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[715453, 17038, 419, 12, 39, "Input"],
Cell[715875, 17052, 788, 14, 56, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[716700, 17071, 249, 7, 39, "Input"],
Cell[716952, 17080, 5489, 141, 236, "Output"]
}, Closed]],
Cell[722456, 17224, 111, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[722592, 17229, 561, 16, 66, "Input"],
Cell[723156, 17247, 13579, 324, 534, "Output"]
}, Closed]],
Cell[736750, 17574, 167, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[736942, 17580, 313, 9, 39, "Input"],
Cell[737258, 17591, 27312, 661, 1146, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[764607, 18257, 313, 9, 39, "Input"],
Cell[764923, 18268, 27310, 661, 1146, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[792270, 18934, 228, 3, 43, "Subsubsection"],
Cell[792501, 18939, 746, 11, 132, "Text"],
Cell[793250, 18952, 332, 8, 39, "Input"],
Cell[793585, 18962, 427, 11, 39, "Input"],
Cell[CellGroupData[{
Cell[794037, 18977, 921, 25, 66, "Input"],
Cell[794961, 19004, 487, 13, 57, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[795485, 19022, 2445, 64, 118, "Input"],
Cell[797933, 19088, 2828, 86, 195, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[800798, 19179, 845, 23, 66, "Input"],
Cell[801646, 19204, 1854, 54, 132, "Output"]
}, Closed]],
Cell[803515, 19261, 635, 10, 85, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[804199, 19277, 159, 2, 54, "Subsection"],
Cell[804361, 19281, 434, 7, 109, "Text"],
Cell[804798, 19290, 244, 4, 37, "Text"],
Cell[805045, 19296, 475, 10, 64, "Text"],
Cell[805523, 19308, 1165, 33, 118, "Input"],
Cell[CellGroupData[{
Cell[806713, 19345, 128, 2, 39, "Input"],
Cell[806844, 19349, 3064, 86, 150, "Output"]
}, Closed]],
Cell[809923, 19438, 428, 9, 61, "Text"],
Cell[CellGroupData[{
Cell[810376, 19451, 124, 2, 39, "Input"],
Cell[810503, 19455, 1390, 37, 66, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[811930, 19497, 509, 12, 39, "Input"],
Cell[812442, 19511, 1403, 41, 88, "Output"]
}, Closed]],
Cell[813860, 19555, 613, 9, 132, "Text"],
Cell[814476, 19566, 330, 9, 39, "Input"],
Cell[814809, 19577, 6843, 167, 605, "Input"],
Cell[CellGroupData[{
Cell[821677, 19748, 99, 1, 39, "Input"],
Cell[821779, 19751, 462, 8, 39, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[822278, 19764, 188, 3, 39, "Input"],
Cell[822469, 19769, 443, 7, 39, "Output"]
}, Closed]],
Cell[822927, 19779, 307, 6, 61, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[823271, 19790, 108, 1, 54, "Subsection"],
Cell[823382, 19793, 649, 11, 85, "Text"],
Cell[824034, 19806, 97517, 2294, 4882, "Input"],
Cell[921554, 22102, 252, 5, 61, "Text"],
Cell[921809, 22109, 4888, 120, 706, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[926746, 22235, 97, 1, 79, "Subchapter"],
Cell[926846, 22238, 200, 4, 37, "Text"],
Cell[927049, 22244, 14966, 351, 1700, "Input"],
Cell[942018, 22597, 603, 14, 39, "Input"],
Cell[CellGroupData[{
Cell[942646, 22615, 109, 1, 54, "Subsection"],
Cell[942758, 22618, 246, 4, 61, "Text"],
Cell[CellGroupData[{
Cell[943029, 22626, 199, 2, 43, "Subsubsection"],
Cell[943231, 22630, 1066, 36, 111, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[944334, 22671, 177, 2, 43, "Subsubsection"],
Cell[944514, 22675, 453, 8, 85, "Text"],
Cell[944970, 22685, 11093, 287, 846, "Input"],
Cell[956066, 22974, 1424, 32, 207, "Text"],
Cell[957493, 23008, 1776, 54, 101, "Input"],
Cell[959272, 23064, 3009, 85, 193, "Input"],
Cell[962284, 23151, 255, 5, 61, "Text"],
Cell[CellGroupData[{
Cell[962564, 23160, 1926, 58, 145, "Input"],
Cell[964493, 23220, 249, 4, 39, "Output"]
}, Closed]],
Cell[964757, 23227, 265, 5, 61, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[965059, 23237, 265, 3, 43, "Subsubsection"],
Cell[965327, 23242, 350, 7, 61, "Text"],
Cell[965680, 23251, 1194, 33, 92, "Input"],
Cell[966877, 23286, 164, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[967066, 23293, 458, 11, 39, "Input"],
Cell[967527, 23306, 325, 5, 39, "Output"]
}, Closed]],
Cell[967867, 23314, 209, 6, 37, "Text"],
Cell[968079, 23322, 240, 4, 37, "Text"],
Cell[CellGroupData[{
Cell[968344, 23330, 412, 11, 39, "Input"],
Cell[968759, 23343, 277, 4, 39, "Output"]
}, Closed]],
Cell[969051, 23350, 189, 6, 37, "Text"],
Cell[969243, 23358, 209, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[969477, 23365, 414, 11, 39, "Input"],
Cell[969894, 23378, 234, 3, 39, "Output"]
}, Closed]],
Cell[970143, 23384, 182, 2, 37, "Text"],
Cell[970328, 23388, 371, 11, 145, "Input"],
Cell[CellGroupData[{
Cell[970724, 23403, 151, 3, 145, "Input"],
Cell[970878, 23408, 113, 1, 168, "Output"]
}, Closed]],
Cell[971006, 23412, 94, 1, 137, "Text"],
Cell[971103, 23415, 263, 4, 137, "Text"],
Cell[CellGroupData[{
Cell[971391, 23423, 462, 11, 145, "Input"],
Cell[971856, 23436, 263, 4, 168, "Output"]
}, Closed]],
Cell[972134, 23443, 180, 2, 137, "Text"],
Cell[CellGroupData[{
Cell[972339, 23449, 456, 12, 246, "Input"],
Cell[972798, 23463, 1437, 34, 168, "Output"],
Cell[974238, 23499, 238, 3, 168, "Output"]
}, Closed]],
Cell[974491, 23505, 94, 1, 266, "Text"],
Cell[974588, 23508, 263, 4, 266, "Text"],
Cell[CellGroupData[{
Cell[974876, 23516, 416, 11, 282, "Input"],
Cell[975295, 23529, 307, 5, 168, "Output"]
}, Closed]],
Cell[975617, 23537, 202, 3, 266, "Text"],
Cell[975822, 23542, 262, 4, 266, "Text"],
Cell[CellGroupData[{
Cell[976109, 23550, 416, 11, 282, "Input"],
Cell[976528, 23563, 305, 5, 168, "Output"]
}, Closed]],
Cell[976848, 23571, 293, 7, 266, "Text"],
Cell[977144, 23580, 318, 5, 266, "Text"],
Cell[CellGroupData[{
Cell[977487, 23589, 467, 11, 282, "Input"],
Cell[977957, 23602, 270, 4, 168, "Output"]
}, Closed]],
Cell[978242, 23609, 180, 2, 266, "Text"],
Cell[CellGroupData[{
Cell[978447, 23615, 534, 14, 478, "Input"],
Cell[978984, 23631, 284, 4, 168, "Output"]
}, Closed]],
Cell[979283, 23638, 94, 1, 266, "Text"],
Cell[979380, 23641, 318, 5, 266, "Text"],
Cell[CellGroupData[{
Cell[979723, 23650, 471, 11, 282, "Input"],
Cell[980197, 23663, 268, 4, 39, "Output"]
}, Closed]],
Cell[980480, 23670, 180, 2, 37, "Text"],
Cell[CellGroupData[{
Cell[980685, 23676, 537, 14, 66, "Input"],
Cell[981225, 23692, 259, 3, 39, "Output"]
}, Closed]],
Cell[981499, 23698, 94, 1, 37, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[981630, 23704, 231, 4, 43, "Subsubsection"],
Cell[981864, 23710, 188, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[982077, 23717, 493, 12, 39, "Input"],
Cell[982573, 23731, 425, 6, 39, "Output"]
}, Closed]],
Cell[983013, 23740, 261, 7, 37, "Text"],
Cell[983277, 23749, 188, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[983490, 23756, 511, 12, 39, "Input"],
Cell[984004, 23770, 439, 6, 39, "Output"]
}, Closed]],
Cell[984458, 23779, 104, 1, 37, "Text"],
Cell[CellGroupData[{
Cell[984587, 23784, 487, 13, 66, "Input"],
Cell[985077, 23799, 149, 2, 39, "Output"],
Cell[985229, 23803, 179, 3, 42, "Output"]
}, Closed]],
Cell[985423, 23809, 292, 6, 37, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[985764, 23821, 110, 1, 54, "Subsection"],
Cell[985877, 23824, 1256, 19, 227, "Text"],
Cell[987136, 23845, 428, 12, 39, "Input"],
Cell[987567, 23859, 252, 5, 37, "Text"],
Cell[987822, 23866, 3811, 111, 196, "Input"],
Cell[991636, 23979, 151, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[991812, 23986, 1493, 39, 118, "Input"],
Cell[CellGroupData[{
Cell[993330, 24029, 154, 4, 29, "Print"],
Cell[993487, 24035, 154, 4, 29, "Print"]
}, Closed]]
}, Closed]],
Cell[993668, 24043, 264, 5, 61, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[993981, 24054, 109, 1, 79, "Subchapter"],
Cell[CellGroupData[{
Cell[994115, 24059, 145, 2, 156, "Section"],
Cell[994263, 24063, 220, 3, 71, "Text"],
Cell[994486, 24068, 3205, 81, 327, "Input"],
Cell[997694, 24151, 4706, 124, 838, "Input"],
Cell[1002403, 24277, 2208, 62, 281, "Input"],
Cell[1004614, 24341, 314, 5, 118, "Text"],
Cell[1004931, 24348, 2294, 57, 331, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1007262, 24410, 90, 1, 120, "Section"],
Cell[1007355, 24413, 179, 3, 75, "Input"],
Cell[1007537, 24418, 209, 4, 71, "Text"],
Cell[1007749, 24424, 2852, 70, 281, "Input"],
Cell[1010604, 24496, 222, 5, 71, "Text"],
Cell[1010829, 24503, 2289, 54, 228, "Input"],
Cell[1013121, 24559, 114, 1, 71, "Text"],
Cell[1013238, 24562, 3537, 91, 353, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1016812, 24658, 91, 1, 120, "Section"],
Cell[1016906, 24661, 547, 13, 75, "Input"],
Cell[1017456, 24676, 744, 14, 75, "Input"],
Cell[1018203, 24692, 1151, 33, 228, "Input"],
Cell[CellGroupData[{
Cell[1019379, 24729, 413, 7, 75, "Input"],
Cell[1019795, 24738, 21975, 373, 612, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[1041807, 25116, 140, 3, 75, "Input"],
Cell[1041950, 25121, 14989, 258, 612, "Output"]
}, Closed]],
Cell[1056954, 25382, 350, 6, 118, "Text"],
Cell[CellGroupData[{
Cell[1057329, 25392, 531, 8, 75, "Input"],
Cell[1057863, 25402, 13997, 241, 612, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1071921, 25650, 101, 1, 58, "Subchapter"],
Cell[CellGroupData[{
Cell[1072047, 25655, 160, 2, 156, "Section"],
Cell[1072210, 25659, 582, 10, 165, "Text"],
Cell[1072795, 25671, 2281, 63, 191, "Input"],
Cell[1075079, 25736, 1350, 38, 113, "Input"],
Cell[1076432, 25776, 1028, 32, 113, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1077497, 25813, 152, 2, 120, "Section"],
Cell[1077652, 25817, 138, 1, 71, "Text"],
Cell[1077793, 25820, 1452, 42, 178, "Input"],
Cell[CellGroupData[{
Cell[1079270, 25866, 118, 1, 103, "Subsection"],
Cell[1079391, 25869, 192, 4, 71, "Text"],
Cell[1079586, 25875, 1060, 31, 127, "Input"],
Cell[1080649, 25908, 153, 3, 71, "Text"],
Cell[CellGroupData[{
Cell[1080827, 25915, 200, 4, 75, "Input"],
Cell[1081030, 25921, 1518, 44, 127, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[1082585, 25970, 1659, 49, 127, "Input"],
Cell[1084247, 26021, 297, 7, 56, "Message"],
Cell[1084547, 26030, 779, 25, 112, "Output"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1085375, 26061, 111, 1, 103, "Subsection"],
Cell[1085489, 26064, 373, 6, 118, "Text"],
Cell[1085865, 26072, 1462, 41, 213, "Input"],
Cell[1087330, 26115, 1790, 44, 288, "Text"],
Cell[CellGroupData[{
Cell[1089145, 26163, 1350, 36, 151, "Input"],
Cell[1090498, 26201, 2713, 68, 175, "Output"]
}, Closed]],
Cell[1093226, 26272, 170, 4, 88, "Text"],
Cell[1093399, 26278, 1894, 54, 325, "Input"],
Cell[CellGroupData[{
Cell[1095318, 26336, 990, 30, 158, "Input"],
Cell[1096311, 26368, 3269, 95, 425, "Output"],
Cell[1099583, 26465, 376, 9, 93, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[1099996, 26479, 332, 9, 93, "Input"],
Cell[1100331, 26490, 440, 9, 70, "Message"]
}, Closed]],
Cell[1100786, 26502, 322, 6, 88, "Text"],
Cell[1101111, 26510, 20085, 469, 2012, "Input"],
Cell[1121199, 26981, 1865, 51, 285, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1123113, 27038, 108, 1, 120, "Section"],
Cell[1123224, 27041, 210, 5, 75, "Input"],
Cell[1123437, 27048, 91, 1, 71, "Text"],
Cell[1123531, 27051, 1855, 53, 178, "Input"],
Cell[1125389, 27106, 1033, 30, 127, "Input"],
Cell[1126425, 27138, 2436, 63, 276, "Input"],
Cell[1128864, 27203, 618, 15, 75, "Input"],
Cell[1129485, 27220, 3948, 104, 737, "Input"],
Cell[1133436, 27326, 107, 1, 71, "Text"],
Cell[1133546, 27329, 713, 19, 75, "Input"],
Cell[CellGroupData[{
Cell[1134284, 27352, 100, 1, 82, "Subsubsection"],
Cell[1134387, 27355, 163, 3, 71, "Text"],
Cell[1134553, 27360, 1555, 44, 178, "Input"],
Cell[1136111, 27406, 175, 4, 71, "Text"],
Cell[1136289, 27412, 1057, 31, 127, "Input"],
Cell[1137349, 27445, 2606, 71, 282, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1139992, 27521, 98, 1, 82, "Subsubsection"],
Cell[1140093, 27524, 557, 13, 75, "Input"],
Cell[1140653, 27539, 1212, 33, 228, "Input"],
Cell[CellGroupData[{
Cell[1141890, 27576, 307, 5, 75, "Input"],
Cell[1142200, 27583, 131285, 2167, 566, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[1273522, 29755, 141, 3, 75, "Input"],
Cell[1273666, 29760, 94422, 1570, 558, "Output"]
}, Closed]],
Cell[1368103, 31333, 323, 6, 118, "Text"],
Cell[CellGroupData[{
Cell[1368451, 31343, 309, 5, 75, "Input"],
Cell[1368763, 31350, 80428, 1333, 570, "Output"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1449252, 32690, 143, 2, 120, "Section"],
Cell[1449398, 32694, 352, 6, 228, "Text"],
Cell[CellGroupData[{
Cell[1449775, 32704, 172, 2, 200, "Subsection"],
Cell[1449950, 32708, 9972, 251, 2133, "Input"]
}, Closed]],
Cell[1459937, 32962, 116, 1, 200, "Subsection"],
Cell[CellGroupData[{
Cell[1460078, 32967, 110, 1, 197, "Subsection"],
Cell[CellGroupData[{
Cell[1460213, 32972, 109, 1, 197, "Subsubsection"],
Cell[CellGroupData[{
Cell[1460347, 32977, 423, 11, 181, "Input"],
Cell[1460773, 32990, 216, 3, 181, "Output"]
}, Closed]],
Cell[1461004, 32996, 171, 4, 171, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[1461212, 33005, 113, 1, 43, "Subsubsection"],
Cell[1461328, 33008, 500, 13, 39, "Input"],
Cell[1461831, 33023, 252, 5, 37, "Text"],
Cell[1462086, 33030, 3006, 87, 144, "Input"],
Cell[1465095, 33119, 155, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[1465275, 33126, 1694, 44, 144, "Input"],
Cell[CellGroupData[{
Cell[1466994, 33174, 326, 5, 29, "Print"],
Cell[1467323, 33181, 501, 12, 34, "Print"],
Cell[1467827, 33195, 324, 5, 29, "Print"],
Cell[1468154, 33202, 503, 12, 34, "Print"],
Cell[1468660, 33216, 326, 5, 29, "Print"],
Cell[1468989, 33223, 289, 5, 29, "Print"],
Cell[1469281, 33230, 324, 5, 29, "Print"],
Cell[1469608, 33237, 289, 5, 29, "Print"]
}, Closed]]
}, Closed]],
Cell[1469924, 33246, 244, 4, 61, "Text"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

